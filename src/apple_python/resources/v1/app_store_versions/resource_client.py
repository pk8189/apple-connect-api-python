"""File Generated by Sideko (sideko.dev)"""

from apple_python.core import (
    AsyncBaseClient,
    encode_param,
    QueryParams,
    SyncBaseClient,
    RequestOptions,
    default_request_options,
    to_encodable,
)
from apple_python.resources.v1.app_store_versions.age_rating_declaration import (
    AsyncAgeRatingDeclarationClient,
    AgeRatingDeclarationClient,
)
from apple_python.resources.v1.app_store_versions.alternative_distribution_package import (
    AlternativeDistributionPackageClient,
    AsyncAlternativeDistributionPackageClient,
)
from apple_python.resources.v1.app_store_versions.app_clip_default_experience import (
    AsyncAppClipDefaultExperienceClient,
    AppClipDefaultExperienceClient,
)
from apple_python.resources.v1.app_store_versions.app_store_review_detail import (
    AppStoreReviewDetailClient,
    AsyncAppStoreReviewDetailClient,
)
from apple_python.resources.v1.app_store_versions.app_store_version_experiments import (
    AsyncAppStoreVersionExperimentsClient,
    AppStoreVersionExperimentsClient,
)
from apple_python.resources.v1.app_store_versions.app_store_version_experiments_v2 import (
    AppStoreVersionExperimentsV2Client,
    AsyncAppStoreVersionExperimentsV2Client,
)
from apple_python.resources.v1.app_store_versions.app_store_version_localizations import (
    AsyncAppStoreVersionLocalizationsClient,
    AppStoreVersionLocalizationsClient,
)
from apple_python.resources.v1.app_store_versions.app_store_version_phased_release import (
    AsyncAppStoreVersionPhasedReleaseClient,
    AppStoreVersionPhasedReleaseClient,
)
from apple_python.resources.v1.app_store_versions.app_store_version_submission import (
    AsyncAppStoreVersionSubmissionClient,
    AppStoreVersionSubmissionClient,
)
from apple_python.resources.v1.app_store_versions.build import (
    AsyncBuildClient,
    BuildClient,
)
from apple_python.resources.v1.app_store_versions.customer_reviews import (
    AsyncCustomerReviewsClient,
    CustomerReviewsClient,
)
from apple_python.resources.v1.app_store_versions.relationships import (
    AsyncRelationshipsClient,
    RelationshipsClient,
)
from apple_python.resources.v1.app_store_versions.routing_app_coverage import (
    RoutingAppCoverageClient,
    AsyncRoutingAppCoverageClient,
)
import typing
import typing_extensions
from apple_python.types.v1.app_store_versions import models, params


class AppStoreVersionsClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)
        self.age_rating_declaration = AgeRatingDeclarationClient(
            base_client=self._base_client
        )
        self.alternative_distribution_package = AlternativeDistributionPackageClient(
            base_client=self._base_client
        )
        self.app_clip_default_experience = AppClipDefaultExperienceClient(
            base_client=self._base_client
        )
        self.app_store_review_detail = AppStoreReviewDetailClient(
            base_client=self._base_client
        )
        self.app_store_version_experiments = AppStoreVersionExperimentsClient(
            base_client=self._base_client
        )
        self.app_store_version_experiments_v2 = AppStoreVersionExperimentsV2Client(
            base_client=self._base_client
        )
        self.app_store_version_localizations = AppStoreVersionLocalizationsClient(
            base_client=self._base_client
        )
        self.app_store_version_phased_release = AppStoreVersionPhasedReleaseClient(
            base_client=self._base_client
        )
        self.app_store_version_submission = AppStoreVersionSubmissionClient(
            base_client=self._base_client
        )
        self.build = BuildClient(base_client=self._base_client)
        self.customer_reviews = CustomerReviewsClient(base_client=self._base_client)
        self.relationships = RelationshipsClient(base_client=self._base_client)
        self.routing_app_coverage = RoutingAppCoverageClient(
            base_client=self._base_client
        )

    # register sync api methods (keep comment for code generation)
    def create(
        self,
        *,
        data: params.AppStoreVersionCreateRequest,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppStoreVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data, dump_with=params._SerializerAppStoreVersionCreateRequest
        )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="POST",
            path="/v1/appStoreVersions",
            auth_names=["itc-bearer-token"],
            json=_json,
            cast_to=models.AppStoreVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)

    def patch(
        self,
        *,
        data: params.AppStoreVersionUpdateRequest,
        id: str,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppStoreVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data, dump_with=params._SerializerAppStoreVersionUpdateRequest
        )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="PATCH",
            path=f"/v1/appStoreVersions/{id}",
            auth_names=["itc-bearer-token"],
            json=_json,
            cast_to=models.AppStoreVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)

    def get(
        self,
        *,
        id: str,
        fields_age_rating_declarations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "ageRatingOverride",
                    "alcoholTobaccoOrDrugUseOrReferences",
                    "contests",
                    "gambling",
                    "gamblingAndContests",
                    "gamblingSimulated",
                    "horrorOrFearThemes",
                    "kidsAgeBand",
                    "matureOrSuggestiveThemes",
                    "medicalOrTreatmentInformation",
                    "profanityOrCrudeHumor",
                    "seventeenPlus",
                    "sexualContentGraphicAndNudity",
                    "sexualContentOrNudity",
                    "unrestrictedWebAccess",
                    "violenceCartoonOrFantasy",
                    "violenceRealistic",
                    "violenceRealisticProlongedGraphicOrSadistic",
                ]
            ]
        ] = None,
        fields_alternative_distribution_packages: typing.Optional[
            typing.List[typing_extensions.Literal["appStoreVersion", "versions"]]
        ] = None,
        fields_app_clip_default_experiences: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "action",
                    "appClip",
                    "appClipAppStoreReviewDetail",
                    "appClipDefaultExperienceLocalizations",
                    "appClipDefaultExperienceTemplate",
                    "releaseWithAppStoreVersion",
                ]
            ]
        ] = None,
        fields_app_store_review_details: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appStoreReviewAttachments",
                    "appStoreVersion",
                    "contactEmail",
                    "contactFirstName",
                    "contactLastName",
                    "contactPhone",
                    "demoAccountName",
                    "demoAccountPassword",
                    "demoAccountRequired",
                    "notes",
                ]
            ]
        ] = None,
        fields_app_store_version_experiments: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appStoreVersion",
                    "appStoreVersionExperimentTreatments",
                    "controlVersions",
                    "endDate",
                    "latestControlVersion",
                    "name",
                    "platform",
                    "reviewRequired",
                    "startDate",
                    "started",
                    "state",
                    "trafficProportion",
                ]
            ]
        ] = None,
        fields_app_store_version_localizations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appPreviewSets",
                    "appScreenshotSets",
                    "appStoreVersion",
                    "description",
                    "keywords",
                    "locale",
                    "marketingUrl",
                    "promotionalText",
                    "supportUrl",
                    "whatsNew",
                ]
            ]
        ] = None,
        fields_app_store_version_phased_releases: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appStoreVersion",
                    "currentDayNumber",
                    "phasedReleaseState",
                    "startDate",
                    "totalPauseDuration",
                ]
            ]
        ] = None,
        fields_app_store_version_submissions: typing.Optional[
            typing.List[typing_extensions.Literal["appStoreVersion"]]
        ] = None,
        fields_app_store_versions: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "ageRatingDeclaration",
                    "alternativeDistributionPackage",
                    "app",
                    "appClipDefaultExperience",
                    "appStoreReviewDetail",
                    "appStoreState",
                    "appStoreVersionExperiments",
                    "appStoreVersionExperimentsV2",
                    "appStoreVersionLocalizations",
                    "appStoreVersionPhasedRelease",
                    "appStoreVersionSubmission",
                    "appVersionState",
                    "build",
                    "copyright",
                    "createdDate",
                    "customerReviews",
                    "downloadable",
                    "earliestReleaseDate",
                    "platform",
                    "releaseType",
                    "reviewType",
                    "routingAppCoverage",
                    "versionString",
                ]
            ]
        ] = None,
        fields_builds: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appEncryptionDeclaration",
                    "appStoreVersion",
                    "betaAppReviewSubmission",
                    "betaBuildLocalizations",
                    "betaGroups",
                    "buildAudienceType",
                    "buildBetaDetail",
                    "buildBundles",
                    "computedMinMacOsVersion",
                    "diagnosticSignatures",
                    "expirationDate",
                    "expired",
                    "iconAssetToken",
                    "icons",
                    "individualTesters",
                    "lsMinimumSystemVersion",
                    "minOsVersion",
                    "perfPowerMetrics",
                    "preReleaseVersion",
                    "processingState",
                    "uploadedDate",
                    "usesNonExemptEncryption",
                    "version",
                ]
            ]
        ] = None,
        fields_customer_reviews: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "body",
                    "createdDate",
                    "rating",
                    "response",
                    "reviewerNickname",
                    "territory",
                    "title",
                ]
            ]
        ] = None,
        fields_routing_app_coverages: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appStoreVersion",
                    "assetDeliveryState",
                    "fileName",
                    "fileSize",
                    "sourceFileChecksum",
                    "uploadOperations",
                    "uploaded",
                ]
            ]
        ] = None,
        include: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "ageRatingDeclaration",
                    "alternativeDistributionPackage",
                    "app",
                    "appClipDefaultExperience",
                    "appStoreReviewDetail",
                    "appStoreVersionExperiments",
                    "appStoreVersionExperimentsV2",
                    "appStoreVersionLocalizations",
                    "appStoreVersionPhasedRelease",
                    "appStoreVersionSubmission",
                    "build",
                    "routingAppCoverage",
                ]
            ]
        ] = None,
        limit_app_store_version_experiments_v2: typing.Optional[int] = None,
        limit_app_store_version_experiments: typing.Optional[int] = None,
        limit_app_store_version_localizations: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppStoreVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if fields_age_rating_declarations is not None:
            _query["fields[ageRatingDeclarations]"] = encode_param(
                fields_age_rating_declarations, False
            )
        if fields_alternative_distribution_packages is not None:
            _query["fields[alternativeDistributionPackages]"] = encode_param(
                fields_alternative_distribution_packages, False
            )
        if fields_app_clip_default_experiences is not None:
            _query["fields[appClipDefaultExperiences]"] = encode_param(
                fields_app_clip_default_experiences, False
            )
        if fields_app_store_review_details is not None:
            _query["fields[appStoreReviewDetails]"] = encode_param(
                fields_app_store_review_details, False
            )
        if fields_app_store_version_experiments is not None:
            _query["fields[appStoreVersionExperiments]"] = encode_param(
                fields_app_store_version_experiments, False
            )
        if fields_app_store_version_localizations is not None:
            _query["fields[appStoreVersionLocalizations]"] = encode_param(
                fields_app_store_version_localizations, False
            )
        if fields_app_store_version_phased_releases is not None:
            _query["fields[appStoreVersionPhasedReleases]"] = encode_param(
                fields_app_store_version_phased_releases, False
            )
        if fields_app_store_version_submissions is not None:
            _query["fields[appStoreVersionSubmissions]"] = encode_param(
                fields_app_store_version_submissions, False
            )
        if fields_app_store_versions is not None:
            _query["fields[appStoreVersions]"] = encode_param(
                fields_app_store_versions, False
            )
        if fields_builds is not None:
            _query["fields[builds]"] = encode_param(fields_builds, False)
        if fields_customer_reviews is not None:
            _query["fields[customerReviews]"] = encode_param(
                fields_customer_reviews, False
            )
        if fields_routing_app_coverages is not None:
            _query["fields[routingAppCoverages]"] = encode_param(
                fields_routing_app_coverages, False
            )
        if include is not None:
            _query["include"] = encode_param(include, False)
        if limit_app_store_version_experiments_v2 is not None:
            _query["limit[appStoreVersionExperimentsV2]"] = encode_param(
                limit_app_store_version_experiments_v2, False
            )
        if limit_app_store_version_experiments is not None:
            _query["limit[appStoreVersionExperiments]"] = encode_param(
                limit_app_store_version_experiments, False
            )
        if limit_app_store_version_localizations is not None:
            _query["limit[appStoreVersionLocalizations]"] = encode_param(
                limit_app_store_version_localizations, False
            )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="GET",
            path=f"/v1/appStoreVersions/{id}",
            auth_names=["itc-bearer-token"],
            query_params=_query,
            cast_to=models.AppStoreVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)

    def delete(
        self, *, id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> None:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="DELETE",
            path=f"/v1/appStoreVersions/{id}",
            auth_names=["itc-bearer-token"],
            cast_to=type(None),
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncAppStoreVersionsClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)
        self.age_rating_declaration = AsyncAgeRatingDeclarationClient(
            base_client=self._base_client
        )
        self.alternative_distribution_package = (
            AsyncAlternativeDistributionPackageClient(base_client=self._base_client)
        )
        self.app_clip_default_experience = AsyncAppClipDefaultExperienceClient(
            base_client=self._base_client
        )
        self.app_store_review_detail = AsyncAppStoreReviewDetailClient(
            base_client=self._base_client
        )
        self.app_store_version_experiments = AsyncAppStoreVersionExperimentsClient(
            base_client=self._base_client
        )
        self.app_store_version_experiments_v2 = AsyncAppStoreVersionExperimentsV2Client(
            base_client=self._base_client
        )
        self.app_store_version_localizations = AsyncAppStoreVersionLocalizationsClient(
            base_client=self._base_client
        )
        self.app_store_version_phased_release = AsyncAppStoreVersionPhasedReleaseClient(
            base_client=self._base_client
        )
        self.app_store_version_submission = AsyncAppStoreVersionSubmissionClient(
            base_client=self._base_client
        )
        self.build = AsyncBuildClient(base_client=self._base_client)
        self.customer_reviews = AsyncCustomerReviewsClient(
            base_client=self._base_client
        )
        self.relationships = AsyncRelationshipsClient(base_client=self._base_client)
        self.routing_app_coverage = AsyncRoutingAppCoverageClient(
            base_client=self._base_client
        )

    # register async api methods (keep comment for code generation)
    async def create(
        self,
        *,
        data: params.AppStoreVersionCreateRequest,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppStoreVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data, dump_with=params._SerializerAppStoreVersionCreateRequest
        )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="POST",
            path="/v1/appStoreVersions",
            auth_names=["itc-bearer-token"],
            json=_json,
            cast_to=models.AppStoreVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)

    async def patch(
        self,
        *,
        data: params.AppStoreVersionUpdateRequest,
        id: str,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppStoreVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data, dump_with=params._SerializerAppStoreVersionUpdateRequest
        )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="PATCH",
            path=f"/v1/appStoreVersions/{id}",
            auth_names=["itc-bearer-token"],
            json=_json,
            cast_to=models.AppStoreVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)

    async def get(
        self,
        *,
        id: str,
        fields_age_rating_declarations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "ageRatingOverride",
                    "alcoholTobaccoOrDrugUseOrReferences",
                    "contests",
                    "gambling",
                    "gamblingAndContests",
                    "gamblingSimulated",
                    "horrorOrFearThemes",
                    "kidsAgeBand",
                    "matureOrSuggestiveThemes",
                    "medicalOrTreatmentInformation",
                    "profanityOrCrudeHumor",
                    "seventeenPlus",
                    "sexualContentGraphicAndNudity",
                    "sexualContentOrNudity",
                    "unrestrictedWebAccess",
                    "violenceCartoonOrFantasy",
                    "violenceRealistic",
                    "violenceRealisticProlongedGraphicOrSadistic",
                ]
            ]
        ] = None,
        fields_alternative_distribution_packages: typing.Optional[
            typing.List[typing_extensions.Literal["appStoreVersion", "versions"]]
        ] = None,
        fields_app_clip_default_experiences: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "action",
                    "appClip",
                    "appClipAppStoreReviewDetail",
                    "appClipDefaultExperienceLocalizations",
                    "appClipDefaultExperienceTemplate",
                    "releaseWithAppStoreVersion",
                ]
            ]
        ] = None,
        fields_app_store_review_details: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appStoreReviewAttachments",
                    "appStoreVersion",
                    "contactEmail",
                    "contactFirstName",
                    "contactLastName",
                    "contactPhone",
                    "demoAccountName",
                    "demoAccountPassword",
                    "demoAccountRequired",
                    "notes",
                ]
            ]
        ] = None,
        fields_app_store_version_experiments: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appStoreVersion",
                    "appStoreVersionExperimentTreatments",
                    "controlVersions",
                    "endDate",
                    "latestControlVersion",
                    "name",
                    "platform",
                    "reviewRequired",
                    "startDate",
                    "started",
                    "state",
                    "trafficProportion",
                ]
            ]
        ] = None,
        fields_app_store_version_localizations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appPreviewSets",
                    "appScreenshotSets",
                    "appStoreVersion",
                    "description",
                    "keywords",
                    "locale",
                    "marketingUrl",
                    "promotionalText",
                    "supportUrl",
                    "whatsNew",
                ]
            ]
        ] = None,
        fields_app_store_version_phased_releases: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appStoreVersion",
                    "currentDayNumber",
                    "phasedReleaseState",
                    "startDate",
                    "totalPauseDuration",
                ]
            ]
        ] = None,
        fields_app_store_version_submissions: typing.Optional[
            typing.List[typing_extensions.Literal["appStoreVersion"]]
        ] = None,
        fields_app_store_versions: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "ageRatingDeclaration",
                    "alternativeDistributionPackage",
                    "app",
                    "appClipDefaultExperience",
                    "appStoreReviewDetail",
                    "appStoreState",
                    "appStoreVersionExperiments",
                    "appStoreVersionExperimentsV2",
                    "appStoreVersionLocalizations",
                    "appStoreVersionPhasedRelease",
                    "appStoreVersionSubmission",
                    "appVersionState",
                    "build",
                    "copyright",
                    "createdDate",
                    "customerReviews",
                    "downloadable",
                    "earliestReleaseDate",
                    "platform",
                    "releaseType",
                    "reviewType",
                    "routingAppCoverage",
                    "versionString",
                ]
            ]
        ] = None,
        fields_builds: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appEncryptionDeclaration",
                    "appStoreVersion",
                    "betaAppReviewSubmission",
                    "betaBuildLocalizations",
                    "betaGroups",
                    "buildAudienceType",
                    "buildBetaDetail",
                    "buildBundles",
                    "computedMinMacOsVersion",
                    "diagnosticSignatures",
                    "expirationDate",
                    "expired",
                    "iconAssetToken",
                    "icons",
                    "individualTesters",
                    "lsMinimumSystemVersion",
                    "minOsVersion",
                    "perfPowerMetrics",
                    "preReleaseVersion",
                    "processingState",
                    "uploadedDate",
                    "usesNonExemptEncryption",
                    "version",
                ]
            ]
        ] = None,
        fields_customer_reviews: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "body",
                    "createdDate",
                    "rating",
                    "response",
                    "reviewerNickname",
                    "territory",
                    "title",
                ]
            ]
        ] = None,
        fields_routing_app_coverages: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appStoreVersion",
                    "assetDeliveryState",
                    "fileName",
                    "fileSize",
                    "sourceFileChecksum",
                    "uploadOperations",
                    "uploaded",
                ]
            ]
        ] = None,
        include: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "ageRatingDeclaration",
                    "alternativeDistributionPackage",
                    "app",
                    "appClipDefaultExperience",
                    "appStoreReviewDetail",
                    "appStoreVersionExperiments",
                    "appStoreVersionExperimentsV2",
                    "appStoreVersionLocalizations",
                    "appStoreVersionPhasedRelease",
                    "appStoreVersionSubmission",
                    "build",
                    "routingAppCoverage",
                ]
            ]
        ] = None,
        limit_app_store_version_experiments_v2: typing.Optional[int] = None,
        limit_app_store_version_experiments: typing.Optional[int] = None,
        limit_app_store_version_localizations: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppStoreVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if fields_age_rating_declarations is not None:
            _query["fields[ageRatingDeclarations]"] = encode_param(
                fields_age_rating_declarations, False
            )
        if fields_alternative_distribution_packages is not None:
            _query["fields[alternativeDistributionPackages]"] = encode_param(
                fields_alternative_distribution_packages, False
            )
        if fields_app_clip_default_experiences is not None:
            _query["fields[appClipDefaultExperiences]"] = encode_param(
                fields_app_clip_default_experiences, False
            )
        if fields_app_store_review_details is not None:
            _query["fields[appStoreReviewDetails]"] = encode_param(
                fields_app_store_review_details, False
            )
        if fields_app_store_version_experiments is not None:
            _query["fields[appStoreVersionExperiments]"] = encode_param(
                fields_app_store_version_experiments, False
            )
        if fields_app_store_version_localizations is not None:
            _query["fields[appStoreVersionLocalizations]"] = encode_param(
                fields_app_store_version_localizations, False
            )
        if fields_app_store_version_phased_releases is not None:
            _query["fields[appStoreVersionPhasedReleases]"] = encode_param(
                fields_app_store_version_phased_releases, False
            )
        if fields_app_store_version_submissions is not None:
            _query["fields[appStoreVersionSubmissions]"] = encode_param(
                fields_app_store_version_submissions, False
            )
        if fields_app_store_versions is not None:
            _query["fields[appStoreVersions]"] = encode_param(
                fields_app_store_versions, False
            )
        if fields_builds is not None:
            _query["fields[builds]"] = encode_param(fields_builds, False)
        if fields_customer_reviews is not None:
            _query["fields[customerReviews]"] = encode_param(
                fields_customer_reviews, False
            )
        if fields_routing_app_coverages is not None:
            _query["fields[routingAppCoverages]"] = encode_param(
                fields_routing_app_coverages, False
            )
        if include is not None:
            _query["include"] = encode_param(include, False)
        if limit_app_store_version_experiments_v2 is not None:
            _query["limit[appStoreVersionExperimentsV2]"] = encode_param(
                limit_app_store_version_experiments_v2, False
            )
        if limit_app_store_version_experiments is not None:
            _query["limit[appStoreVersionExperiments]"] = encode_param(
                limit_app_store_version_experiments, False
            )
        if limit_app_store_version_localizations is not None:
            _query["limit[appStoreVersionLocalizations]"] = encode_param(
                limit_app_store_version_localizations, False
            )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="GET",
            path=f"/v1/appStoreVersions/{id}",
            auth_names=["itc-bearer-token"],
            query_params=_query,
            cast_to=models.AppStoreVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)

    async def delete(
        self, *, id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> None:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="DELETE",
            path=f"/v1/appStoreVersions/{id}",
            auth_names=["itc-bearer-token"],
            cast_to=type(None),
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
