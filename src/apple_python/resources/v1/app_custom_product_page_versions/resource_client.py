"""File Generated by Sideko (sideko.dev)"""

from apple_python.core import (
    RequestOptions,
    SyncBaseClient,
    AsyncBaseClient,
    encode_param,
    to_encodable,
    default_request_options,
    QueryParams,
)
from apple_python.resources.v1.app_custom_product_page_versions.app_custom_product_page_localizations import (
    AsyncAppCustomProductPageLocalizationsClient,
    AppCustomProductPageLocalizationsClient,
)
import typing
import typing_extensions
from apple_python.types.v1.app_custom_product_page_versions import models, params


class AppCustomProductPageVersionsClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)
        self.app_custom_product_page_localizations = (
            AppCustomProductPageLocalizationsClient(base_client=self._base_client)
        )

    # register sync api methods (keep comment for code generation)
    def create(
        self,
        *,
        data: params.AppCustomProductPageVersionCreateRequest,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppCustomProductPageVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data,
            dump_with=params._SerializerAppCustomProductPageVersionCreateRequest,
        )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="POST",
            path="/v1/appCustomProductPageVersions",
            auth_names=["itc-bearer-token"],
            json=_json,
            cast_to=models.AppCustomProductPageVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)

    def patch(
        self,
        *,
        data: params.AppCustomProductPageVersionUpdateRequest,
        id: str,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppCustomProductPageVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data,
            dump_with=params._SerializerAppCustomProductPageVersionUpdateRequest,
        )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="PATCH",
            path=f"/v1/appCustomProductPageVersions/{id}",
            auth_names=["itc-bearer-token"],
            json=_json,
            cast_to=models.AppCustomProductPageVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)

    def get(
        self,
        *,
        id: str,
        fields_app_custom_product_page_localizations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appCustomProductPageVersion",
                    "appPreviewSets",
                    "appScreenshotSets",
                    "locale",
                    "promotionalText",
                ]
            ]
        ] = None,
        fields_app_custom_product_page_versions: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appCustomProductPage",
                    "appCustomProductPageLocalizations",
                    "deepLink",
                    "state",
                    "version",
                ]
            ]
        ] = None,
        include: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appCustomProductPage", "appCustomProductPageLocalizations"
                ]
            ]
        ] = None,
        limit_app_custom_product_page_localizations: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppCustomProductPageVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if fields_app_custom_product_page_localizations is not None:
            _query["fields[appCustomProductPageLocalizations]"] = encode_param(
                fields_app_custom_product_page_localizations, False
            )
        if fields_app_custom_product_page_versions is not None:
            _query["fields[appCustomProductPageVersions]"] = encode_param(
                fields_app_custom_product_page_versions, False
            )
        if include is not None:
            _query["include"] = encode_param(include, False)
        if limit_app_custom_product_page_localizations is not None:
            _query["limit[appCustomProductPageLocalizations]"] = encode_param(
                limit_app_custom_product_page_localizations, False
            )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="GET",
            path=f"/v1/appCustomProductPageVersions/{id}",
            auth_names=["itc-bearer-token"],
            query_params=_query,
            cast_to=models.AppCustomProductPageVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncAppCustomProductPageVersionsClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)
        self.app_custom_product_page_localizations = (
            AsyncAppCustomProductPageLocalizationsClient(base_client=self._base_client)
        )

    # register async api methods (keep comment for code generation)
    async def create(
        self,
        *,
        data: params.AppCustomProductPageVersionCreateRequest,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppCustomProductPageVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data,
            dump_with=params._SerializerAppCustomProductPageVersionCreateRequest,
        )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="POST",
            path="/v1/appCustomProductPageVersions",
            auth_names=["itc-bearer-token"],
            json=_json,
            cast_to=models.AppCustomProductPageVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)

    async def patch(
        self,
        *,
        data: params.AppCustomProductPageVersionUpdateRequest,
        id: str,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppCustomProductPageVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data,
            dump_with=params._SerializerAppCustomProductPageVersionUpdateRequest,
        )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="PATCH",
            path=f"/v1/appCustomProductPageVersions/{id}",
            auth_names=["itc-bearer-token"],
            json=_json,
            cast_to=models.AppCustomProductPageVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)

    async def get(
        self,
        *,
        id: str,
        fields_app_custom_product_page_localizations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appCustomProductPageVersion",
                    "appPreviewSets",
                    "appScreenshotSets",
                    "locale",
                    "promotionalText",
                ]
            ]
        ] = None,
        fields_app_custom_product_page_versions: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appCustomProductPage",
                    "appCustomProductPageLocalizations",
                    "deepLink",
                    "state",
                    "version",
                ]
            ]
        ] = None,
        include: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appCustomProductPage", "appCustomProductPageLocalizations"
                ]
            ]
        ] = None,
        limit_app_custom_product_page_localizations: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppCustomProductPageVersionResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if fields_app_custom_product_page_localizations is not None:
            _query["fields[appCustomProductPageLocalizations]"] = encode_param(
                fields_app_custom_product_page_localizations, False
            )
        if fields_app_custom_product_page_versions is not None:
            _query["fields[appCustomProductPageVersions]"] = encode_param(
                fields_app_custom_product_page_versions, False
            )
        if include is not None:
            _query["include"] = encode_param(include, False)
        if limit_app_custom_product_page_localizations is not None:
            _query["limit[appCustomProductPageLocalizations]"] = encode_param(
                limit_app_custom_product_page_localizations, False
            )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="GET",
            path=f"/v1/appCustomProductPageVersions/{id}",
            auth_names=["itc-bearer-token"],
            query_params=_query,
            cast_to=models.AppCustomProductPageVersionResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
