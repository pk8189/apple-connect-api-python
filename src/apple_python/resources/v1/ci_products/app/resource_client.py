"""File Generated by Sideko (sideko.dev)"""

from apple_python.core import (
    default_request_options,
    SyncBaseClient,
    QueryParams,
    encode_param,
    AsyncBaseClient,
    RequestOptions,
)
import typing
import typing_extensions
from apple_python.types.v1.ci_products.app import models


class AppClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)

    # register sync api methods (keep comment for code generation)
    def list(
        self,
        *,
        id: str,
        fields_app_clips: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appClipAdvancedExperiences",
                    "appClipDefaultExperiences",
                    "bundleId",
                ]
            ]
        ] = None,
        fields_app_custom_product_pages: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appCustomProductPageVersions",
                    "appStoreVersionTemplate",
                    "customProductPageTemplate",
                    "name",
                    "url",
                    "visible",
                ]
            ]
        ] = None,
        fields_app_encryption_declarations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appDescription",
                    "appEncryptionDeclarationDocument",
                    "appEncryptionDeclarationState",
                    "availableOnFrenchStore",
                    "builds",
                    "codeValue",
                    "containsProprietaryCryptography",
                    "containsThirdPartyCryptography",
                    "createdDate",
                    "documentName",
                    "documentType",
                    "documentUrl",
                    "exempt",
                    "platform",
                    "uploadedDate",
                    "usesEncryption",
                ]
            ]
        ] = None,
        fields_app_events: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "archivedTerritorySchedules",
                    "badge",
                    "deepLink",
                    "eventState",
                    "localizations",
                    "primaryLocale",
                    "priority",
                    "purchaseRequirement",
                    "purpose",
                    "referenceName",
                    "territorySchedules",
                ]
            ]
        ] = None,
        fields_app_infos: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "ageRatingDeclaration",
                    "app",
                    "appInfoLocalizations",
                    "appStoreAgeRating",
                    "appStoreState",
                    "brazilAgeRating",
                    "brazilAgeRatingV2",
                    "kidsAgeBand",
                    "primaryCategory",
                    "primarySubcategoryOne",
                    "primarySubcategoryTwo",
                    "secondaryCategory",
                    "secondarySubcategoryOne",
                    "secondarySubcategoryTwo",
                    "state",
                ]
            ]
        ] = None,
        fields_app_pre_orders: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app", "appReleaseDate", "preOrderAvailableDate"
                ]
            ]
        ] = None,
        fields_app_store_version_experiments: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appStoreVersionExperimentTreatments",
                    "controlVersions",
                    "endDate",
                    "latestControlVersion",
                    "name",
                    "platform",
                    "reviewRequired",
                    "startDate",
                    "started",
                    "state",
                    "trafficProportion",
                ]
            ]
        ] = None,
        fields_app_store_versions: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "ageRatingDeclaration",
                    "alternativeDistributionPackage",
                    "app",
                    "appClipDefaultExperience",
                    "appStoreReviewDetail",
                    "appStoreState",
                    "appStoreVersionExperiments",
                    "appStoreVersionExperimentsV2",
                    "appStoreVersionLocalizations",
                    "appStoreVersionPhasedRelease",
                    "appStoreVersionSubmission",
                    "appVersionState",
                    "build",
                    "copyright",
                    "createdDate",
                    "customerReviews",
                    "downloadable",
                    "earliestReleaseDate",
                    "platform",
                    "releaseType",
                    "reviewType",
                    "routingAppCoverage",
                    "versionString",
                ]
            ]
        ] = None,
        fields_apps: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "alternativeDistributionKey",
                    "analyticsReportRequests",
                    "appAvailability",
                    "appClips",
                    "appCustomProductPages",
                    "appEncryptionDeclarations",
                    "appEvents",
                    "appInfos",
                    "appPricePoints",
                    "appPriceSchedule",
                    "appStoreVersionExperimentsV2",
                    "appStoreVersions",
                    "betaAppLocalizations",
                    "betaAppReviewDetail",
                    "betaGroups",
                    "betaLicenseAgreement",
                    "betaTesters",
                    "builds",
                    "bundleId",
                    "ciProduct",
                    "contentRightsDeclaration",
                    "customerReviews",
                    "endUserLicenseAgreement",
                    "gameCenterDetail",
                    "gameCenterEnabledVersions",
                    "inAppPurchases",
                    "inAppPurchasesV2",
                    "isOrEverWasMadeForKids",
                    "marketplaceSearchDetail",
                    "name",
                    "perfPowerMetrics",
                    "preOrder",
                    "preReleaseVersions",
                    "primaryLocale",
                    "promotedPurchases",
                    "reviewSubmissions",
                    "sku",
                    "subscriptionGracePeriod",
                    "subscriptionGroups",
                    "subscriptionStatusUrl",
                    "subscriptionStatusUrlForSandbox",
                    "subscriptionStatusUrlVersion",
                    "subscriptionStatusUrlVersionForSandbox",
                ]
            ]
        ] = None,
        fields_beta_app_localizations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "description",
                    "feedbackEmail",
                    "locale",
                    "marketingUrl",
                    "privacyPolicyUrl",
                    "tvOsPrivacyPolicy",
                ]
            ]
        ] = None,
        fields_beta_app_review_details: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "contactEmail",
                    "contactFirstName",
                    "contactLastName",
                    "contactPhone",
                    "demoAccountName",
                    "demoAccountPassword",
                    "demoAccountRequired",
                    "notes",
                ]
            ]
        ] = None,
        fields_beta_groups: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "betaTesters",
                    "builds",
                    "createdDate",
                    "feedbackEnabled",
                    "hasAccessToAllBuilds",
                    "iosBuildsAvailableForAppleSiliconMac",
                    "isInternalGroup",
                    "name",
                    "publicLink",
                    "publicLinkEnabled",
                    "publicLinkId",
                    "publicLinkLimit",
                    "publicLinkLimitEnabled",
                ]
            ]
        ] = None,
        fields_beta_license_agreements: typing.Optional[
            typing.List[typing_extensions.Literal["agreementText", "app"]]
        ] = None,
        fields_builds: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appEncryptionDeclaration",
                    "appStoreVersion",
                    "betaAppReviewSubmission",
                    "betaBuildLocalizations",
                    "betaGroups",
                    "buildAudienceType",
                    "buildBetaDetail",
                    "buildBundles",
                    "computedMinMacOsVersion",
                    "diagnosticSignatures",
                    "expirationDate",
                    "expired",
                    "iconAssetToken",
                    "icons",
                    "individualTesters",
                    "lsMinimumSystemVersion",
                    "minOsVersion",
                    "perfPowerMetrics",
                    "preReleaseVersion",
                    "processingState",
                    "uploadedDate",
                    "usesNonExemptEncryption",
                    "version",
                ]
            ]
        ] = None,
        fields_ci_products: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "additionalRepositories",
                    "app",
                    "buildRuns",
                    "bundleId",
                    "createdDate",
                    "name",
                    "primaryRepositories",
                    "productType",
                    "workflows",
                ]
            ]
        ] = None,
        fields_end_user_license_agreements: typing.Optional[
            typing.List[
                typing_extensions.Literal["agreementText", "app", "territories"]
            ]
        ] = None,
        fields_game_center_details: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "achievementReleases",
                    "app",
                    "arcadeEnabled",
                    "challengeEnabled",
                    "defaultGroupLeaderboard",
                    "defaultLeaderboard",
                    "gameCenterAchievements",
                    "gameCenterAppVersions",
                    "gameCenterGroup",
                    "gameCenterLeaderboardSets",
                    "gameCenterLeaderboards",
                    "leaderboardReleases",
                    "leaderboardSetReleases",
                ]
            ]
        ] = None,
        fields_game_center_enabled_versions: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "compatibleVersions",
                    "iconAsset",
                    "platform",
                    "versionString",
                ]
            ]
        ] = None,
        fields_in_app_purchases: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appStoreReviewScreenshot",
                    "apps",
                    "content",
                    "contentHosting",
                    "familySharable",
                    "iapPriceSchedule",
                    "inAppPurchaseAvailability",
                    "inAppPurchaseLocalizations",
                    "inAppPurchaseType",
                    "name",
                    "pricePoints",
                    "productId",
                    "promotedPurchase",
                    "referenceName",
                    "reviewNote",
                    "state",
                ]
            ]
        ] = None,
        fields_pre_release_versions: typing.Optional[
            typing.List[
                typing_extensions.Literal["app", "builds", "platform", "version"]
            ]
        ] = None,
        fields_promoted_purchases: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "enabled",
                    "inAppPurchaseV2",
                    "promotionImages",
                    "state",
                    "subscription",
                    "visibleForAllUsers",
                ]
            ]
        ] = None,
        fields_review_submissions: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appStoreVersionForReview",
                    "canceled",
                    "items",
                    "lastUpdatedByActor",
                    "platform",
                    "state",
                    "submitted",
                    "submittedByActor",
                    "submittedDate",
                ]
            ]
        ] = None,
        fields_subscription_grace_periods: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "duration", "optIn", "renewalType", "sandboxOptIn"
                ]
            ]
        ] = None,
        fields_subscription_groups: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "referenceName",
                    "subscriptionGroupLocalizations",
                    "subscriptions",
                ]
            ]
        ] = None,
        include: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appClips",
                    "appCustomProductPages",
                    "appEncryptionDeclarations",
                    "appEvents",
                    "appInfos",
                    "appStoreVersionExperimentsV2",
                    "appStoreVersions",
                    "betaAppLocalizations",
                    "betaAppReviewDetail",
                    "betaGroups",
                    "betaLicenseAgreement",
                    "builds",
                    "ciProduct",
                    "endUserLicenseAgreement",
                    "gameCenterDetail",
                    "gameCenterEnabledVersions",
                    "inAppPurchases",
                    "inAppPurchasesV2",
                    "preOrder",
                    "preReleaseVersions",
                    "promotedPurchases",
                    "reviewSubmissions",
                    "subscriptionGracePeriod",
                    "subscriptionGroups",
                ]
            ]
        ] = None,
        limit_app_clips: typing.Optional[int] = None,
        limit_app_custom_product_pages: typing.Optional[int] = None,
        limit_app_encryption_declarations: typing.Optional[int] = None,
        limit_app_events: typing.Optional[int] = None,
        limit_app_infos: typing.Optional[int] = None,
        limit_app_store_version_experiments_v2: typing.Optional[int] = None,
        limit_app_store_versions: typing.Optional[int] = None,
        limit_beta_app_localizations: typing.Optional[int] = None,
        limit_beta_groups: typing.Optional[int] = None,
        limit_builds: typing.Optional[int] = None,
        limit_game_center_enabled_versions: typing.Optional[int] = None,
        limit_in_app_purchases_v2: typing.Optional[int] = None,
        limit_in_app_purchases: typing.Optional[int] = None,
        limit_pre_release_versions: typing.Optional[int] = None,
        limit_promoted_purchases: typing.Optional[int] = None,
        limit_review_submissions: typing.Optional[int] = None,
        limit_subscription_groups: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if fields_app_clips is not None:
            _query["fields[appClips]"] = encode_param(fields_app_clips, False)
        if fields_app_custom_product_pages is not None:
            _query["fields[appCustomProductPages]"] = encode_param(
                fields_app_custom_product_pages, False
            )
        if fields_app_encryption_declarations is not None:
            _query["fields[appEncryptionDeclarations]"] = encode_param(
                fields_app_encryption_declarations, False
            )
        if fields_app_events is not None:
            _query["fields[appEvents]"] = encode_param(fields_app_events, False)
        if fields_app_infos is not None:
            _query["fields[appInfos]"] = encode_param(fields_app_infos, False)
        if fields_app_pre_orders is not None:
            _query["fields[appPreOrders]"] = encode_param(fields_app_pre_orders, False)
        if fields_app_store_version_experiments is not None:
            _query["fields[appStoreVersionExperiments]"] = encode_param(
                fields_app_store_version_experiments, False
            )
        if fields_app_store_versions is not None:
            _query["fields[appStoreVersions]"] = encode_param(
                fields_app_store_versions, False
            )
        if fields_apps is not None:
            _query["fields[apps]"] = encode_param(fields_apps, False)
        if fields_beta_app_localizations is not None:
            _query["fields[betaAppLocalizations]"] = encode_param(
                fields_beta_app_localizations, False
            )
        if fields_beta_app_review_details is not None:
            _query["fields[betaAppReviewDetails]"] = encode_param(
                fields_beta_app_review_details, False
            )
        if fields_beta_groups is not None:
            _query["fields[betaGroups]"] = encode_param(fields_beta_groups, False)
        if fields_beta_license_agreements is not None:
            _query["fields[betaLicenseAgreements]"] = encode_param(
                fields_beta_license_agreements, False
            )
        if fields_builds is not None:
            _query["fields[builds]"] = encode_param(fields_builds, False)
        if fields_ci_products is not None:
            _query["fields[ciProducts]"] = encode_param(fields_ci_products, False)
        if fields_end_user_license_agreements is not None:
            _query["fields[endUserLicenseAgreements]"] = encode_param(
                fields_end_user_license_agreements, False
            )
        if fields_game_center_details is not None:
            _query["fields[gameCenterDetails]"] = encode_param(
                fields_game_center_details, False
            )
        if fields_game_center_enabled_versions is not None:
            _query["fields[gameCenterEnabledVersions]"] = encode_param(
                fields_game_center_enabled_versions, False
            )
        if fields_in_app_purchases is not None:
            _query["fields[inAppPurchases]"] = encode_param(
                fields_in_app_purchases, False
            )
        if fields_pre_release_versions is not None:
            _query["fields[preReleaseVersions]"] = encode_param(
                fields_pre_release_versions, False
            )
        if fields_promoted_purchases is not None:
            _query["fields[promotedPurchases]"] = encode_param(
                fields_promoted_purchases, False
            )
        if fields_review_submissions is not None:
            _query["fields[reviewSubmissions]"] = encode_param(
                fields_review_submissions, False
            )
        if fields_subscription_grace_periods is not None:
            _query["fields[subscriptionGracePeriods]"] = encode_param(
                fields_subscription_grace_periods, False
            )
        if fields_subscription_groups is not None:
            _query["fields[subscriptionGroups]"] = encode_param(
                fields_subscription_groups, False
            )
        if include is not None:
            _query["include"] = encode_param(include, False)
        if limit_app_clips is not None:
            _query["limit[appClips]"] = encode_param(limit_app_clips, False)
        if limit_app_custom_product_pages is not None:
            _query["limit[appCustomProductPages]"] = encode_param(
                limit_app_custom_product_pages, False
            )
        if limit_app_encryption_declarations is not None:
            _query["limit[appEncryptionDeclarations]"] = encode_param(
                limit_app_encryption_declarations, False
            )
        if limit_app_events is not None:
            _query["limit[appEvents]"] = encode_param(limit_app_events, False)
        if limit_app_infos is not None:
            _query["limit[appInfos]"] = encode_param(limit_app_infos, False)
        if limit_app_store_version_experiments_v2 is not None:
            _query["limit[appStoreVersionExperimentsV2]"] = encode_param(
                limit_app_store_version_experiments_v2, False
            )
        if limit_app_store_versions is not None:
            _query["limit[appStoreVersions]"] = encode_param(
                limit_app_store_versions, False
            )
        if limit_beta_app_localizations is not None:
            _query["limit[betaAppLocalizations]"] = encode_param(
                limit_beta_app_localizations, False
            )
        if limit_beta_groups is not None:
            _query["limit[betaGroups]"] = encode_param(limit_beta_groups, False)
        if limit_builds is not None:
            _query["limit[builds]"] = encode_param(limit_builds, False)
        if limit_game_center_enabled_versions is not None:
            _query["limit[gameCenterEnabledVersions]"] = encode_param(
                limit_game_center_enabled_versions, False
            )
        if limit_in_app_purchases_v2 is not None:
            _query["limit[inAppPurchasesV2]"] = encode_param(
                limit_in_app_purchases_v2, False
            )
        if limit_in_app_purchases is not None:
            _query["limit[inAppPurchases]"] = encode_param(
                limit_in_app_purchases, False
            )
        if limit_pre_release_versions is not None:
            _query["limit[preReleaseVersions]"] = encode_param(
                limit_pre_release_versions, False
            )
        if limit_promoted_purchases is not None:
            _query["limit[promotedPurchases]"] = encode_param(
                limit_promoted_purchases, False
            )
        if limit_review_submissions is not None:
            _query["limit[reviewSubmissions]"] = encode_param(
                limit_review_submissions, False
            )
        if limit_subscription_groups is not None:
            _query["limit[subscriptionGroups]"] = encode_param(
                limit_subscription_groups, False
            )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="GET",
            path=f"/v1/ciProducts/{id}/app",
            auth_names=["itc-bearer-token"],
            query_params=_query,
            cast_to=models.AppResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncAppClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)

    # register async api methods (keep comment for code generation)
    async def list(
        self,
        *,
        id: str,
        fields_app_clips: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appClipAdvancedExperiences",
                    "appClipDefaultExperiences",
                    "bundleId",
                ]
            ]
        ] = None,
        fields_app_custom_product_pages: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appCustomProductPageVersions",
                    "appStoreVersionTemplate",
                    "customProductPageTemplate",
                    "name",
                    "url",
                    "visible",
                ]
            ]
        ] = None,
        fields_app_encryption_declarations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appDescription",
                    "appEncryptionDeclarationDocument",
                    "appEncryptionDeclarationState",
                    "availableOnFrenchStore",
                    "builds",
                    "codeValue",
                    "containsProprietaryCryptography",
                    "containsThirdPartyCryptography",
                    "createdDate",
                    "documentName",
                    "documentType",
                    "documentUrl",
                    "exempt",
                    "platform",
                    "uploadedDate",
                    "usesEncryption",
                ]
            ]
        ] = None,
        fields_app_events: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "archivedTerritorySchedules",
                    "badge",
                    "deepLink",
                    "eventState",
                    "localizations",
                    "primaryLocale",
                    "priority",
                    "purchaseRequirement",
                    "purpose",
                    "referenceName",
                    "territorySchedules",
                ]
            ]
        ] = None,
        fields_app_infos: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "ageRatingDeclaration",
                    "app",
                    "appInfoLocalizations",
                    "appStoreAgeRating",
                    "appStoreState",
                    "brazilAgeRating",
                    "brazilAgeRatingV2",
                    "kidsAgeBand",
                    "primaryCategory",
                    "primarySubcategoryOne",
                    "primarySubcategoryTwo",
                    "secondaryCategory",
                    "secondarySubcategoryOne",
                    "secondarySubcategoryTwo",
                    "state",
                ]
            ]
        ] = None,
        fields_app_pre_orders: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app", "appReleaseDate", "preOrderAvailableDate"
                ]
            ]
        ] = None,
        fields_app_store_version_experiments: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appStoreVersionExperimentTreatments",
                    "controlVersions",
                    "endDate",
                    "latestControlVersion",
                    "name",
                    "platform",
                    "reviewRequired",
                    "startDate",
                    "started",
                    "state",
                    "trafficProportion",
                ]
            ]
        ] = None,
        fields_app_store_versions: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "ageRatingDeclaration",
                    "alternativeDistributionPackage",
                    "app",
                    "appClipDefaultExperience",
                    "appStoreReviewDetail",
                    "appStoreState",
                    "appStoreVersionExperiments",
                    "appStoreVersionExperimentsV2",
                    "appStoreVersionLocalizations",
                    "appStoreVersionPhasedRelease",
                    "appStoreVersionSubmission",
                    "appVersionState",
                    "build",
                    "copyright",
                    "createdDate",
                    "customerReviews",
                    "downloadable",
                    "earliestReleaseDate",
                    "platform",
                    "releaseType",
                    "reviewType",
                    "routingAppCoverage",
                    "versionString",
                ]
            ]
        ] = None,
        fields_apps: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "alternativeDistributionKey",
                    "analyticsReportRequests",
                    "appAvailability",
                    "appClips",
                    "appCustomProductPages",
                    "appEncryptionDeclarations",
                    "appEvents",
                    "appInfos",
                    "appPricePoints",
                    "appPriceSchedule",
                    "appStoreVersionExperimentsV2",
                    "appStoreVersions",
                    "betaAppLocalizations",
                    "betaAppReviewDetail",
                    "betaGroups",
                    "betaLicenseAgreement",
                    "betaTesters",
                    "builds",
                    "bundleId",
                    "ciProduct",
                    "contentRightsDeclaration",
                    "customerReviews",
                    "endUserLicenseAgreement",
                    "gameCenterDetail",
                    "gameCenterEnabledVersions",
                    "inAppPurchases",
                    "inAppPurchasesV2",
                    "isOrEverWasMadeForKids",
                    "marketplaceSearchDetail",
                    "name",
                    "perfPowerMetrics",
                    "preOrder",
                    "preReleaseVersions",
                    "primaryLocale",
                    "promotedPurchases",
                    "reviewSubmissions",
                    "sku",
                    "subscriptionGracePeriod",
                    "subscriptionGroups",
                    "subscriptionStatusUrl",
                    "subscriptionStatusUrlForSandbox",
                    "subscriptionStatusUrlVersion",
                    "subscriptionStatusUrlVersionForSandbox",
                ]
            ]
        ] = None,
        fields_beta_app_localizations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "description",
                    "feedbackEmail",
                    "locale",
                    "marketingUrl",
                    "privacyPolicyUrl",
                    "tvOsPrivacyPolicy",
                ]
            ]
        ] = None,
        fields_beta_app_review_details: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "contactEmail",
                    "contactFirstName",
                    "contactLastName",
                    "contactPhone",
                    "demoAccountName",
                    "demoAccountPassword",
                    "demoAccountRequired",
                    "notes",
                ]
            ]
        ] = None,
        fields_beta_groups: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "betaTesters",
                    "builds",
                    "createdDate",
                    "feedbackEnabled",
                    "hasAccessToAllBuilds",
                    "iosBuildsAvailableForAppleSiliconMac",
                    "isInternalGroup",
                    "name",
                    "publicLink",
                    "publicLinkEnabled",
                    "publicLinkId",
                    "publicLinkLimit",
                    "publicLinkLimitEnabled",
                ]
            ]
        ] = None,
        fields_beta_license_agreements: typing.Optional[
            typing.List[typing_extensions.Literal["agreementText", "app"]]
        ] = None,
        fields_builds: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appEncryptionDeclaration",
                    "appStoreVersion",
                    "betaAppReviewSubmission",
                    "betaBuildLocalizations",
                    "betaGroups",
                    "buildAudienceType",
                    "buildBetaDetail",
                    "buildBundles",
                    "computedMinMacOsVersion",
                    "diagnosticSignatures",
                    "expirationDate",
                    "expired",
                    "iconAssetToken",
                    "icons",
                    "individualTesters",
                    "lsMinimumSystemVersion",
                    "minOsVersion",
                    "perfPowerMetrics",
                    "preReleaseVersion",
                    "processingState",
                    "uploadedDate",
                    "usesNonExemptEncryption",
                    "version",
                ]
            ]
        ] = None,
        fields_ci_products: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "additionalRepositories",
                    "app",
                    "buildRuns",
                    "bundleId",
                    "createdDate",
                    "name",
                    "primaryRepositories",
                    "productType",
                    "workflows",
                ]
            ]
        ] = None,
        fields_end_user_license_agreements: typing.Optional[
            typing.List[
                typing_extensions.Literal["agreementText", "app", "territories"]
            ]
        ] = None,
        fields_game_center_details: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "achievementReleases",
                    "app",
                    "arcadeEnabled",
                    "challengeEnabled",
                    "defaultGroupLeaderboard",
                    "defaultLeaderboard",
                    "gameCenterAchievements",
                    "gameCenterAppVersions",
                    "gameCenterGroup",
                    "gameCenterLeaderboardSets",
                    "gameCenterLeaderboards",
                    "leaderboardReleases",
                    "leaderboardSetReleases",
                ]
            ]
        ] = None,
        fields_game_center_enabled_versions: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "compatibleVersions",
                    "iconAsset",
                    "platform",
                    "versionString",
                ]
            ]
        ] = None,
        fields_in_app_purchases: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appStoreReviewScreenshot",
                    "apps",
                    "content",
                    "contentHosting",
                    "familySharable",
                    "iapPriceSchedule",
                    "inAppPurchaseAvailability",
                    "inAppPurchaseLocalizations",
                    "inAppPurchaseType",
                    "name",
                    "pricePoints",
                    "productId",
                    "promotedPurchase",
                    "referenceName",
                    "reviewNote",
                    "state",
                ]
            ]
        ] = None,
        fields_pre_release_versions: typing.Optional[
            typing.List[
                typing_extensions.Literal["app", "builds", "platform", "version"]
            ]
        ] = None,
        fields_promoted_purchases: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "enabled",
                    "inAppPurchaseV2",
                    "promotionImages",
                    "state",
                    "subscription",
                    "visibleForAllUsers",
                ]
            ]
        ] = None,
        fields_review_submissions: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "appStoreVersionForReview",
                    "canceled",
                    "items",
                    "lastUpdatedByActor",
                    "platform",
                    "state",
                    "submitted",
                    "submittedByActor",
                    "submittedDate",
                ]
            ]
        ] = None,
        fields_subscription_grace_periods: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "duration", "optIn", "renewalType", "sandboxOptIn"
                ]
            ]
        ] = None,
        fields_subscription_groups: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "app",
                    "referenceName",
                    "subscriptionGroupLocalizations",
                    "subscriptions",
                ]
            ]
        ] = None,
        include: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appClips",
                    "appCustomProductPages",
                    "appEncryptionDeclarations",
                    "appEvents",
                    "appInfos",
                    "appStoreVersionExperimentsV2",
                    "appStoreVersions",
                    "betaAppLocalizations",
                    "betaAppReviewDetail",
                    "betaGroups",
                    "betaLicenseAgreement",
                    "builds",
                    "ciProduct",
                    "endUserLicenseAgreement",
                    "gameCenterDetail",
                    "gameCenterEnabledVersions",
                    "inAppPurchases",
                    "inAppPurchasesV2",
                    "preOrder",
                    "preReleaseVersions",
                    "promotedPurchases",
                    "reviewSubmissions",
                    "subscriptionGracePeriod",
                    "subscriptionGroups",
                ]
            ]
        ] = None,
        limit_app_clips: typing.Optional[int] = None,
        limit_app_custom_product_pages: typing.Optional[int] = None,
        limit_app_encryption_declarations: typing.Optional[int] = None,
        limit_app_events: typing.Optional[int] = None,
        limit_app_infos: typing.Optional[int] = None,
        limit_app_store_version_experiments_v2: typing.Optional[int] = None,
        limit_app_store_versions: typing.Optional[int] = None,
        limit_beta_app_localizations: typing.Optional[int] = None,
        limit_beta_groups: typing.Optional[int] = None,
        limit_builds: typing.Optional[int] = None,
        limit_game_center_enabled_versions: typing.Optional[int] = None,
        limit_in_app_purchases_v2: typing.Optional[int] = None,
        limit_in_app_purchases: typing.Optional[int] = None,
        limit_pre_release_versions: typing.Optional[int] = None,
        limit_promoted_purchases: typing.Optional[int] = None,
        limit_review_submissions: typing.Optional[int] = None,
        limit_subscription_groups: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if fields_app_clips is not None:
            _query["fields[appClips]"] = encode_param(fields_app_clips, False)
        if fields_app_custom_product_pages is not None:
            _query["fields[appCustomProductPages]"] = encode_param(
                fields_app_custom_product_pages, False
            )
        if fields_app_encryption_declarations is not None:
            _query["fields[appEncryptionDeclarations]"] = encode_param(
                fields_app_encryption_declarations, False
            )
        if fields_app_events is not None:
            _query["fields[appEvents]"] = encode_param(fields_app_events, False)
        if fields_app_infos is not None:
            _query["fields[appInfos]"] = encode_param(fields_app_infos, False)
        if fields_app_pre_orders is not None:
            _query["fields[appPreOrders]"] = encode_param(fields_app_pre_orders, False)
        if fields_app_store_version_experiments is not None:
            _query["fields[appStoreVersionExperiments]"] = encode_param(
                fields_app_store_version_experiments, False
            )
        if fields_app_store_versions is not None:
            _query["fields[appStoreVersions]"] = encode_param(
                fields_app_store_versions, False
            )
        if fields_apps is not None:
            _query["fields[apps]"] = encode_param(fields_apps, False)
        if fields_beta_app_localizations is not None:
            _query["fields[betaAppLocalizations]"] = encode_param(
                fields_beta_app_localizations, False
            )
        if fields_beta_app_review_details is not None:
            _query["fields[betaAppReviewDetails]"] = encode_param(
                fields_beta_app_review_details, False
            )
        if fields_beta_groups is not None:
            _query["fields[betaGroups]"] = encode_param(fields_beta_groups, False)
        if fields_beta_license_agreements is not None:
            _query["fields[betaLicenseAgreements]"] = encode_param(
                fields_beta_license_agreements, False
            )
        if fields_builds is not None:
            _query["fields[builds]"] = encode_param(fields_builds, False)
        if fields_ci_products is not None:
            _query["fields[ciProducts]"] = encode_param(fields_ci_products, False)
        if fields_end_user_license_agreements is not None:
            _query["fields[endUserLicenseAgreements]"] = encode_param(
                fields_end_user_license_agreements, False
            )
        if fields_game_center_details is not None:
            _query["fields[gameCenterDetails]"] = encode_param(
                fields_game_center_details, False
            )
        if fields_game_center_enabled_versions is not None:
            _query["fields[gameCenterEnabledVersions]"] = encode_param(
                fields_game_center_enabled_versions, False
            )
        if fields_in_app_purchases is not None:
            _query["fields[inAppPurchases]"] = encode_param(
                fields_in_app_purchases, False
            )
        if fields_pre_release_versions is not None:
            _query["fields[preReleaseVersions]"] = encode_param(
                fields_pre_release_versions, False
            )
        if fields_promoted_purchases is not None:
            _query["fields[promotedPurchases]"] = encode_param(
                fields_promoted_purchases, False
            )
        if fields_review_submissions is not None:
            _query["fields[reviewSubmissions]"] = encode_param(
                fields_review_submissions, False
            )
        if fields_subscription_grace_periods is not None:
            _query["fields[subscriptionGracePeriods]"] = encode_param(
                fields_subscription_grace_periods, False
            )
        if fields_subscription_groups is not None:
            _query["fields[subscriptionGroups]"] = encode_param(
                fields_subscription_groups, False
            )
        if include is not None:
            _query["include"] = encode_param(include, False)
        if limit_app_clips is not None:
            _query["limit[appClips]"] = encode_param(limit_app_clips, False)
        if limit_app_custom_product_pages is not None:
            _query["limit[appCustomProductPages]"] = encode_param(
                limit_app_custom_product_pages, False
            )
        if limit_app_encryption_declarations is not None:
            _query["limit[appEncryptionDeclarations]"] = encode_param(
                limit_app_encryption_declarations, False
            )
        if limit_app_events is not None:
            _query["limit[appEvents]"] = encode_param(limit_app_events, False)
        if limit_app_infos is not None:
            _query["limit[appInfos]"] = encode_param(limit_app_infos, False)
        if limit_app_store_version_experiments_v2 is not None:
            _query["limit[appStoreVersionExperimentsV2]"] = encode_param(
                limit_app_store_version_experiments_v2, False
            )
        if limit_app_store_versions is not None:
            _query["limit[appStoreVersions]"] = encode_param(
                limit_app_store_versions, False
            )
        if limit_beta_app_localizations is not None:
            _query["limit[betaAppLocalizations]"] = encode_param(
                limit_beta_app_localizations, False
            )
        if limit_beta_groups is not None:
            _query["limit[betaGroups]"] = encode_param(limit_beta_groups, False)
        if limit_builds is not None:
            _query["limit[builds]"] = encode_param(limit_builds, False)
        if limit_game_center_enabled_versions is not None:
            _query["limit[gameCenterEnabledVersions]"] = encode_param(
                limit_game_center_enabled_versions, False
            )
        if limit_in_app_purchases_v2 is not None:
            _query["limit[inAppPurchasesV2]"] = encode_param(
                limit_in_app_purchases_v2, False
            )
        if limit_in_app_purchases is not None:
            _query["limit[inAppPurchases]"] = encode_param(
                limit_in_app_purchases, False
            )
        if limit_pre_release_versions is not None:
            _query["limit[preReleaseVersions]"] = encode_param(
                limit_pre_release_versions, False
            )
        if limit_promoted_purchases is not None:
            _query["limit[promotedPurchases]"] = encode_param(
                limit_promoted_purchases, False
            )
        if limit_review_submissions is not None:
            _query["limit[reviewSubmissions]"] = encode_param(
                limit_review_submissions, False
            )
        if limit_subscription_groups is not None:
            _query["limit[subscriptionGroups]"] = encode_param(
                limit_subscription_groups, False
            )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="GET",
            path=f"/v1/ciProducts/{id}/app",
            auth_names=["itc-bearer-token"],
            query_params=_query,
            cast_to=models.AppResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
