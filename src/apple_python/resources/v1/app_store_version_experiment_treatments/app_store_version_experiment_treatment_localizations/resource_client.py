"""File Generated by Sideko (sideko.dev)"""

from apple_python.core import (
    RequestOptions,
    AsyncBaseClient,
    SyncBaseClient,
    QueryParams,
    encode_param,
    default_request_options,
)
import typing
import typing_extensions
from apple_python.types.v1.app_store_version_experiment_treatments.app_store_version_experiment_treatment_localizations import (
    models,
)


class AppStoreVersionExperimentTreatmentLocalizationsClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)

    # register sync api methods (keep comment for code generation)
    def list(
        self,
        *,
        id: str,
        fields_app_preview_sets: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appCustomProductPageLocalization",
                    "appPreviews",
                    "appStoreVersionExperimentTreatmentLocalization",
                    "appStoreVersionLocalization",
                    "previewType",
                ]
            ]
        ] = None,
        fields_app_screenshot_sets: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appCustomProductPageLocalization",
                    "appScreenshots",
                    "appStoreVersionExperimentTreatmentLocalization",
                    "appStoreVersionLocalization",
                    "screenshotDisplayType",
                ]
            ]
        ] = None,
        fields_app_store_version_experiment_treatment_localizations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appPreviewSets",
                    "appScreenshotSets",
                    "appStoreVersionExperimentTreatment",
                    "locale",
                ]
            ]
        ] = None,
        fields_app_store_version_experiment_treatments: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appIcon",
                    "appIconName",
                    "appStoreVersionExperiment",
                    "appStoreVersionExperimentTreatmentLocalizations",
                    "appStoreVersionExperimentV2",
                    "name",
                    "promotedDate",
                ]
            ]
        ] = None,
        filter_locale: typing.Optional[typing.List[str]] = None,
        include: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appPreviewSets",
                    "appScreenshotSets",
                    "appStoreVersionExperimentTreatment",
                ]
            ]
        ] = None,
        limit: typing.Optional[int] = None,
        limit_app_preview_sets: typing.Optional[int] = None,
        limit_app_screenshot_sets: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppStoreVersionExperimentTreatmentLocalizationsResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if fields_app_preview_sets is not None:
            _query["fields[appPreviewSets]"] = encode_param(
                fields_app_preview_sets, False
            )
        if fields_app_screenshot_sets is not None:
            _query["fields[appScreenshotSets]"] = encode_param(
                fields_app_screenshot_sets, False
            )
        if fields_app_store_version_experiment_treatment_localizations is not None:
            _query["fields[appStoreVersionExperimentTreatmentLocalizations]"] = (
                encode_param(
                    fields_app_store_version_experiment_treatment_localizations, False
                )
            )
        if fields_app_store_version_experiment_treatments is not None:
            _query["fields[appStoreVersionExperimentTreatments]"] = encode_param(
                fields_app_store_version_experiment_treatments, False
            )
        if filter_locale is not None:
            _query["filter[locale]"] = encode_param(filter_locale, False)
        if include is not None:
            _query["include"] = encode_param(include, False)
        if limit is not None:
            _query["limit"] = encode_param(limit, False)
        if limit_app_preview_sets is not None:
            _query["limit[appPreviewSets]"] = encode_param(
                limit_app_preview_sets, False
            )
        if limit_app_screenshot_sets is not None:
            _query["limit[appScreenshotSets]"] = encode_param(
                limit_app_screenshot_sets, False
            )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="GET",
            path=f"/v1/appStoreVersionExperimentTreatments/{id}/appStoreVersionExperimentTreatmentLocalizations",
            auth_names=["itc-bearer-token"],
            query_params=_query,
            cast_to=models.AppStoreVersionExperimentTreatmentLocalizationsResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncAppStoreVersionExperimentTreatmentLocalizationsClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)

    # register async api methods (keep comment for code generation)
    async def list(
        self,
        *,
        id: str,
        fields_app_preview_sets: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appCustomProductPageLocalization",
                    "appPreviews",
                    "appStoreVersionExperimentTreatmentLocalization",
                    "appStoreVersionLocalization",
                    "previewType",
                ]
            ]
        ] = None,
        fields_app_screenshot_sets: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appCustomProductPageLocalization",
                    "appScreenshots",
                    "appStoreVersionExperimentTreatmentLocalization",
                    "appStoreVersionLocalization",
                    "screenshotDisplayType",
                ]
            ]
        ] = None,
        fields_app_store_version_experiment_treatment_localizations: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appPreviewSets",
                    "appScreenshotSets",
                    "appStoreVersionExperimentTreatment",
                    "locale",
                ]
            ]
        ] = None,
        fields_app_store_version_experiment_treatments: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appIcon",
                    "appIconName",
                    "appStoreVersionExperiment",
                    "appStoreVersionExperimentTreatmentLocalizations",
                    "appStoreVersionExperimentV2",
                    "name",
                    "promotedDate",
                ]
            ]
        ] = None,
        filter_locale: typing.Optional[typing.List[str]] = None,
        include: typing.Optional[
            typing.List[
                typing_extensions.Literal[
                    "appPreviewSets",
                    "appScreenshotSets",
                    "appStoreVersionExperimentTreatment",
                ]
            ]
        ] = None,
        limit: typing.Optional[int] = None,
        limit_app_preview_sets: typing.Optional[int] = None,
        limit_app_screenshot_sets: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.AppStoreVersionExperimentTreatmentLocalizationsResponse:
        """
        no description available
        """
        # start -- build request data (keep comment for code generation)
        _query: QueryParams = {}
        if fields_app_preview_sets is not None:
            _query["fields[appPreviewSets]"] = encode_param(
                fields_app_preview_sets, False
            )
        if fields_app_screenshot_sets is not None:
            _query["fields[appScreenshotSets]"] = encode_param(
                fields_app_screenshot_sets, False
            )
        if fields_app_store_version_experiment_treatment_localizations is not None:
            _query["fields[appStoreVersionExperimentTreatmentLocalizations]"] = (
                encode_param(
                    fields_app_store_version_experiment_treatment_localizations, False
                )
            )
        if fields_app_store_version_experiment_treatments is not None:
            _query["fields[appStoreVersionExperimentTreatments]"] = encode_param(
                fields_app_store_version_experiment_treatments, False
            )
        if filter_locale is not None:
            _query["filter[locale]"] = encode_param(filter_locale, False)
        if include is not None:
            _query["include"] = encode_param(include, False)
        if limit is not None:
            _query["limit"] = encode_param(limit, False)
        if limit_app_preview_sets is not None:
            _query["limit[appPreviewSets]"] = encode_param(
                limit_app_preview_sets, False
            )
        if limit_app_screenshot_sets is not None:
            _query["limit[appScreenshotSets]"] = encode_param(
                limit_app_screenshot_sets, False
            )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="GET",
            path=f"/v1/appStoreVersionExperimentTreatments/{id}/appStoreVersionExperimentTreatmentLocalizations",
            auth_names=["itc-bearer-token"],
            query_params=_query,
            cast_to=models.AppStoreVersionExperimentTreatmentLocalizationsResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
