"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    locale_field: typing_extensions.Required[str]


class _SerializerAppStoreVersionExperimentTreatmentLocalizationCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    locale_field: str = pydantic.Field(alias="locale")


class AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatmentData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperimentTreatments"]
    ]


class _SerializerAppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatmentData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatmentData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperimentTreatments"] = (
        pydantic.Field(alias="type")
    )


class AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatment(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatmentData
    ]


class _SerializerAppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatment(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatment handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatmentData = pydantic.Field(
        alias="data"
    )


class AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    app_store_version_experiment_treatment: typing_extensions.Required[
        AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatment
    ]


class _SerializerAppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_store_version_experiment_treatment: _SerializerAppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationshipsAppStoreVersionExperimentTreatment = pydantic.Field(
        alias="appStoreVersionExperimentTreatment"
    )


class AppStoreVersionExperimentTreatmentLocalizationCreateRequestData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        AppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperimentTreatmentLocalizations"]
    ]


class _SerializerAppStoreVersionExperimentTreatmentLocalizationCreateRequestData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentLocalizationCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerAppStoreVersionExperimentTreatmentLocalizationCreateRequestDataAttributes = pydantic.Field(
        alias="attributes"
    )
    relationships: _SerializerAppStoreVersionExperimentTreatmentLocalizationCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal[
        "appStoreVersionExperimentTreatmentLocalizations"
    ] = pydantic.Field(alias="type")


class AppStoreVersionExperimentTreatmentLocalizationCreateRequest(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppStoreVersionExperimentTreatmentLocalizationCreateRequestData
    ]


class _SerializerAppStoreVersionExperimentTreatmentLocalizationCreateRequest(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentLocalizationCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionExperimentTreatmentLocalizationCreateRequestData = (
        pydantic.Field(alias="data")
    )
