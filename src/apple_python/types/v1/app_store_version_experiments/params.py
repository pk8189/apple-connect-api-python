"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppStoreVersionExperimentUpdateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    name: typing_extensions.NotRequired[str]
    started: typing_extensions.NotRequired[bool]
    traffic_proportion: typing_extensions.NotRequired[int]


class _SerializerAppStoreVersionExperimentUpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    name: typing.Optional[str] = pydantic.Field(alias="name", default=None)
    started: typing.Optional[bool] = pydantic.Field(alias="started", default=None)
    traffic_proportion: typing.Optional[int] = pydantic.Field(
        alias="trafficProportion", default=None
    )


class AppStoreVersionExperimentCreateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    name: typing_extensions.Required[str]
    traffic_proportion: typing_extensions.Required[int]


class _SerializerAppStoreVersionExperimentCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    name: str = pydantic.Field(alias="name")
    traffic_proportion: int = pydantic.Field(alias="trafficProportion")


class AppStoreVersionExperimentCreateRequestDataRelationshipsAppStoreVersionData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["appStoreVersions"]]


class _SerializerAppStoreVersionExperimentCreateRequestDataRelationshipsAppStoreVersionData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentCreateRequestDataRelationshipsAppStoreVersionData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = pydantic.Field(alias="type")


class AppStoreVersionExperimentUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppStoreVersionExperimentUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperiments"]
    ]


class _SerializerAppStoreVersionExperimentUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionExperimentUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppStoreVersionExperimentUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionExperimentCreateRequestDataRelationshipsAppStoreVersion(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppStoreVersionExperimentCreateRequestDataRelationshipsAppStoreVersionData
    ]


class _SerializerAppStoreVersionExperimentCreateRequestDataRelationshipsAppStoreVersion(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentCreateRequestDataRelationshipsAppStoreVersion handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionExperimentCreateRequestDataRelationshipsAppStoreVersionData = pydantic.Field(
        alias="data"
    )


class AppStoreVersionExperimentUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreVersionExperimentUpdateRequestData]


class _SerializerAppStoreVersionExperimentUpdateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionExperimentUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionExperimentUpdateRequestData = pydantic.Field(
        alias="data"
    )


class AppStoreVersionExperimentCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    app_store_version: typing_extensions.Required[
        AppStoreVersionExperimentCreateRequestDataRelationshipsAppStoreVersion
    ]


class _SerializerAppStoreVersionExperimentCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_store_version: _SerializerAppStoreVersionExperimentCreateRequestDataRelationshipsAppStoreVersion = pydantic.Field(
        alias="appStoreVersion"
    )


class AppStoreVersionExperimentCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        AppStoreVersionExperimentCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        AppStoreVersionExperimentCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperiments"]
    ]


class _SerializerAppStoreVersionExperimentCreateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionExperimentCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerAppStoreVersionExperimentCreateRequestDataAttributes = (
        pydantic.Field(alias="attributes")
    )
    relationships: _SerializerAppStoreVersionExperimentCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["appStoreVersionExperiments"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionExperimentCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreVersionExperimentCreateRequestData]


class _SerializerAppStoreVersionExperimentCreateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionExperimentCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionExperimentCreateRequestData = pydantic.Field(
        alias="data"
    )
