"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PromotedPurchaseImageUpdateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    source_file_checksum: typing_extensions.NotRequired[str]
    uploaded: typing_extensions.NotRequired[bool]


class _SerializerPromotedPurchaseImageUpdateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for PromotedPurchaseImageUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    source_file_checksum: typing.Optional[str] = pydantic.Field(
        alias="sourceFileChecksum", default=None
    )
    uploaded: typing.Optional[bool] = pydantic.Field(alias="uploaded", default=None)


class PromotedPurchaseImageCreateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    file_name: typing_extensions.Required[str]
    file_size: typing_extensions.Required[int]


class _SerializerPromotedPurchaseImageCreateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for PromotedPurchaseImageCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    file_name: str = pydantic.Field(alias="fileName")
    file_size: int = pydantic.Field(alias="fileSize")


class PromotedPurchaseImageCreateRequestDataRelationshipsPromotedPurchaseData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["promotedPurchases"]]


class _SerializerPromotedPurchaseImageCreateRequestDataRelationshipsPromotedPurchaseData(
    pydantic.BaseModel
):
    """
    Serializer for PromotedPurchaseImageCreateRequestDataRelationshipsPromotedPurchaseData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["promotedPurchases"] = pydantic.Field(alias="type")


class PromotedPurchaseImageUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        PromotedPurchaseImageUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["promotedPurchaseImages"]
    ]


class _SerializerPromotedPurchaseImageUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for PromotedPurchaseImageUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerPromotedPurchaseImageUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["promotedPurchaseImages"] = pydantic.Field(
        alias="type"
    )


class PromotedPurchaseImageCreateRequestDataRelationshipsPromotedPurchase(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        PromotedPurchaseImageCreateRequestDataRelationshipsPromotedPurchaseData
    ]


class _SerializerPromotedPurchaseImageCreateRequestDataRelationshipsPromotedPurchase(
    pydantic.BaseModel
):
    """
    Serializer for PromotedPurchaseImageCreateRequestDataRelationshipsPromotedPurchase handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerPromotedPurchaseImageCreateRequestDataRelationshipsPromotedPurchaseData = pydantic.Field(
        alias="data"
    )


class PromotedPurchaseImageUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[PromotedPurchaseImageUpdateRequestData]


class _SerializerPromotedPurchaseImageUpdateRequest(pydantic.BaseModel):
    """
    Serializer for PromotedPurchaseImageUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerPromotedPurchaseImageUpdateRequestData = pydantic.Field(
        alias="data"
    )


class PromotedPurchaseImageCreateRequestDataRelationships(typing_extensions.TypedDict):
    """
    No description specified
    """

    promoted_purchase: typing_extensions.Required[
        PromotedPurchaseImageCreateRequestDataRelationshipsPromotedPurchase
    ]


class _SerializerPromotedPurchaseImageCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for PromotedPurchaseImageCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    promoted_purchase: _SerializerPromotedPurchaseImageCreateRequestDataRelationshipsPromotedPurchase = pydantic.Field(
        alias="promotedPurchase"
    )


class PromotedPurchaseImageCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        PromotedPurchaseImageCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        PromotedPurchaseImageCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["promotedPurchaseImages"]
    ]


class _SerializerPromotedPurchaseImageCreateRequestData(pydantic.BaseModel):
    """
    Serializer for PromotedPurchaseImageCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerPromotedPurchaseImageCreateRequestDataAttributes = (
        pydantic.Field(alias="attributes")
    )
    relationships: _SerializerPromotedPurchaseImageCreateRequestDataRelationships = (
        pydantic.Field(alias="relationships")
    )
    type: typing_extensions.Literal["promotedPurchaseImages"] = pydantic.Field(
        alias="type"
    )


class PromotedPurchaseImageCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[PromotedPurchaseImageCreateRequestData]


class _SerializerPromotedPurchaseImageCreateRequest(pydantic.BaseModel):
    """
    Serializer for PromotedPurchaseImageCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerPromotedPurchaseImageCreateRequestData = pydantic.Field(
        alias="data"
    )
