"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppClipHeaderImageUpdateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    source_file_checksum: typing_extensions.NotRequired[str]
    uploaded: typing_extensions.NotRequired[bool]


class _SerializerAppClipHeaderImageUpdateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for AppClipHeaderImageUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    source_file_checksum: typing.Optional[str] = pydantic.Field(
        alias="sourceFileChecksum", default=None
    )
    uploaded: typing.Optional[bool] = pydantic.Field(alias="uploaded", default=None)


class AppClipHeaderImageCreateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    file_name: typing_extensions.Required[str]
    file_size: typing_extensions.Required[int]


class _SerializerAppClipHeaderImageCreateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for AppClipHeaderImageCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    file_name: str = pydantic.Field(alias="fileName")
    file_size: int = pydantic.Field(alias="fileSize")


class AppClipHeaderImageCreateRequestDataRelationshipsAppClipDefaultExperienceLocalizationData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appClipDefaultExperienceLocalizations"]
    ]


class _SerializerAppClipHeaderImageCreateRequestDataRelationshipsAppClipDefaultExperienceLocalizationData(
    pydantic.BaseModel
):
    """
    Serializer for AppClipHeaderImageCreateRequestDataRelationshipsAppClipDefaultExperienceLocalizationData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appClipDefaultExperienceLocalizations"] = (
        pydantic.Field(alias="type")
    )


class AppClipHeaderImageUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppClipHeaderImageUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["appClipHeaderImages"]]


class _SerializerAppClipHeaderImageUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for AppClipHeaderImageUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppClipHeaderImageUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appClipHeaderImages"] = pydantic.Field(
        alias="type"
    )


class AppClipHeaderImageCreateRequestDataRelationshipsAppClipDefaultExperienceLocalization(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppClipHeaderImageCreateRequestDataRelationshipsAppClipDefaultExperienceLocalizationData
    ]


class _SerializerAppClipHeaderImageCreateRequestDataRelationshipsAppClipDefaultExperienceLocalization(
    pydantic.BaseModel
):
    """
    Serializer for AppClipHeaderImageCreateRequestDataRelationshipsAppClipDefaultExperienceLocalization handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppClipHeaderImageCreateRequestDataRelationshipsAppClipDefaultExperienceLocalizationData = pydantic.Field(
        alias="data"
    )


class AppClipHeaderImageUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppClipHeaderImageUpdateRequestData]


class _SerializerAppClipHeaderImageUpdateRequest(pydantic.BaseModel):
    """
    Serializer for AppClipHeaderImageUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppClipHeaderImageUpdateRequestData = pydantic.Field(alias="data")


class AppClipHeaderImageCreateRequestDataRelationships(typing_extensions.TypedDict):
    """
    No description specified
    """

    app_clip_default_experience_localization: typing_extensions.Required[
        AppClipHeaderImageCreateRequestDataRelationshipsAppClipDefaultExperienceLocalization
    ]


class _SerializerAppClipHeaderImageCreateRequestDataRelationships(pydantic.BaseModel):
    """
    Serializer for AppClipHeaderImageCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_clip_default_experience_localization: _SerializerAppClipHeaderImageCreateRequestDataRelationshipsAppClipDefaultExperienceLocalization = pydantic.Field(
        alias="appClipDefaultExperienceLocalization"
    )


class AppClipHeaderImageCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        AppClipHeaderImageCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        AppClipHeaderImageCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[typing_extensions.Literal["appClipHeaderImages"]]


class _SerializerAppClipHeaderImageCreateRequestData(pydantic.BaseModel):
    """
    Serializer for AppClipHeaderImageCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerAppClipHeaderImageCreateRequestDataAttributes = (
        pydantic.Field(alias="attributes")
    )
    relationships: _SerializerAppClipHeaderImageCreateRequestDataRelationships = (
        pydantic.Field(alias="relationships")
    )
    type: typing_extensions.Literal["appClipHeaderImages"] = pydantic.Field(
        alias="type"
    )


class AppClipHeaderImageCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppClipHeaderImageCreateRequestData]


class _SerializerAppClipHeaderImageCreateRequest(pydantic.BaseModel):
    """
    Serializer for AppClipHeaderImageCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppClipHeaderImageCreateRequestData = pydantic.Field(alias="data")
