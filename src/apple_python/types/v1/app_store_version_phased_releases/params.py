"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppStoreVersionPhasedReleaseUpdateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    phased_release_state: typing_extensions.NotRequired[
        typing_extensions.Literal["INACTIVE", "ACTIVE", "PAUSED", "COMPLETE"]
    ]


class _SerializerAppStoreVersionPhasedReleaseUpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionPhasedReleaseUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    phased_release_state: typing.Optional[
        typing_extensions.Literal["INACTIVE", "ACTIVE", "PAUSED", "COMPLETE"]
    ] = pydantic.Field(alias="phasedReleaseState", default=None)


class AppStoreVersionPhasedReleaseCreateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    phased_release_state: typing_extensions.NotRequired[
        typing_extensions.Literal["INACTIVE", "ACTIVE", "PAUSED", "COMPLETE"]
    ]


class _SerializerAppStoreVersionPhasedReleaseCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionPhasedReleaseCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    phased_release_state: typing.Optional[
        typing_extensions.Literal["INACTIVE", "ACTIVE", "PAUSED", "COMPLETE"]
    ] = pydantic.Field(alias="phasedReleaseState", default=None)


class AppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersionData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["appStoreVersions"]]


class _SerializerAppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersionData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersionData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = pydantic.Field(alias="type")


class AppStoreVersionPhasedReleaseUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppStoreVersionPhasedReleaseUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionPhasedReleases"]
    ]


class _SerializerAppStoreVersionPhasedReleaseUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionPhasedReleaseUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppStoreVersionPhasedReleaseUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersionPhasedReleases"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersion(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersionData
    ]


class _SerializerAppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersion(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersion handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersionData = pydantic.Field(
        alias="data"
    )


class AppStoreVersionPhasedReleaseUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreVersionPhasedReleaseUpdateRequestData]


class _SerializerAppStoreVersionPhasedReleaseUpdateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionPhasedReleaseUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionPhasedReleaseUpdateRequestData = pydantic.Field(
        alias="data"
    )


class AppStoreVersionPhasedReleaseCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    app_store_version: typing_extensions.Required[
        AppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersion
    ]


class _SerializerAppStoreVersionPhasedReleaseCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionPhasedReleaseCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_store_version: _SerializerAppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersion = pydantic.Field(
        alias="appStoreVersion"
    )


class AppStoreVersionPhasedReleaseCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppStoreVersionPhasedReleaseCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        AppStoreVersionPhasedReleaseCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionPhasedReleases"]
    ]


class _SerializerAppStoreVersionPhasedReleaseCreateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionPhasedReleaseCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppStoreVersionPhasedReleaseCreateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    relationships: _SerializerAppStoreVersionPhasedReleaseCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["appStoreVersionPhasedReleases"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionPhasedReleaseCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreVersionPhasedReleaseCreateRequestData]


class _SerializerAppStoreVersionPhasedReleaseCreateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionPhasedReleaseCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionPhasedReleaseCreateRequestData = pydantic.Field(
        alias="data"
    )
