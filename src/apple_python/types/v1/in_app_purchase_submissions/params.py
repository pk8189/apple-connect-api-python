"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class InAppPurchaseSubmissionCreateRequestDataRelationshipsInAppPurchaseV2Data(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["inAppPurchases"]]


class _SerializerInAppPurchaseSubmissionCreateRequestDataRelationshipsInAppPurchaseV2Data(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchaseSubmissionCreateRequestDataRelationshipsInAppPurchaseV2Data handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["inAppPurchases"] = pydantic.Field(alias="type")


class InAppPurchaseSubmissionCreateRequestDataRelationshipsInAppPurchaseV2(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        InAppPurchaseSubmissionCreateRequestDataRelationshipsInAppPurchaseV2Data
    ]


class _SerializerInAppPurchaseSubmissionCreateRequestDataRelationshipsInAppPurchaseV2(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchaseSubmissionCreateRequestDataRelationshipsInAppPurchaseV2 handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerInAppPurchaseSubmissionCreateRequestDataRelationshipsInAppPurchaseV2Data = pydantic.Field(
        alias="data"
    )


class InAppPurchaseSubmissionCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    in_app_purchase_v2: typing_extensions.Required[
        InAppPurchaseSubmissionCreateRequestDataRelationshipsInAppPurchaseV2
    ]


class _SerializerInAppPurchaseSubmissionCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchaseSubmissionCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    in_app_purchase_v2: _SerializerInAppPurchaseSubmissionCreateRequestDataRelationshipsInAppPurchaseV2 = pydantic.Field(
        alias="inAppPurchaseV2"
    )


class InAppPurchaseSubmissionCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    relationships: typing_extensions.Required[
        InAppPurchaseSubmissionCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["inAppPurchaseSubmissions"]
    ]


class _SerializerInAppPurchaseSubmissionCreateRequestData(pydantic.BaseModel):
    """
    Serializer for InAppPurchaseSubmissionCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    relationships: _SerializerInAppPurchaseSubmissionCreateRequestDataRelationships = (
        pydantic.Field(alias="relationships")
    )
    type: typing_extensions.Literal["inAppPurchaseSubmissions"] = pydantic.Field(
        alias="type"
    )


class InAppPurchaseSubmissionCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[InAppPurchaseSubmissionCreateRequestData]


class _SerializerInAppPurchaseSubmissionCreateRequest(pydantic.BaseModel):
    """
    Serializer for InAppPurchaseSubmissionCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerInAppPurchaseSubmissionCreateRequestData = pydantic.Field(
        alias="data"
    )
