"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppClipAdvancedExperienceImageUpdateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    source_file_checksum: typing_extensions.NotRequired[str]
    uploaded: typing_extensions.NotRequired[bool]


class _SerializerAppClipAdvancedExperienceImageUpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppClipAdvancedExperienceImageUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    source_file_checksum: typing.Optional[str] = pydantic.Field(
        alias="sourceFileChecksum", default=None
    )
    uploaded: typing.Optional[bool] = pydantic.Field(alias="uploaded", default=None)


class AppClipAdvancedExperienceImageCreateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    file_name: typing_extensions.Required[str]
    file_size: typing_extensions.Required[int]


class _SerializerAppClipAdvancedExperienceImageCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppClipAdvancedExperienceImageCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    file_name: str = pydantic.Field(alias="fileName")
    file_size: int = pydantic.Field(alias="fileSize")


class AppClipAdvancedExperienceImageUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppClipAdvancedExperienceImageUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appClipAdvancedExperienceImages"]
    ]


class _SerializerAppClipAdvancedExperienceImageUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for AppClipAdvancedExperienceImageUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppClipAdvancedExperienceImageUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appClipAdvancedExperienceImages"] = pydantic.Field(
        alias="type"
    )


class AppClipAdvancedExperienceImageCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        AppClipAdvancedExperienceImageCreateRequestDataAttributes
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["appClipAdvancedExperienceImages"]
    ]


class _SerializerAppClipAdvancedExperienceImageCreateRequestData(pydantic.BaseModel):
    """
    Serializer for AppClipAdvancedExperienceImageCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerAppClipAdvancedExperienceImageCreateRequestDataAttributes = (
        pydantic.Field(alias="attributes")
    )
    type: typing_extensions.Literal["appClipAdvancedExperienceImages"] = pydantic.Field(
        alias="type"
    )


class AppClipAdvancedExperienceImageUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppClipAdvancedExperienceImageUpdateRequestData]


class _SerializerAppClipAdvancedExperienceImageUpdateRequest(pydantic.BaseModel):
    """
    Serializer for AppClipAdvancedExperienceImageUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppClipAdvancedExperienceImageUpdateRequestData = pydantic.Field(
        alias="data"
    )


class AppClipAdvancedExperienceImageCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppClipAdvancedExperienceImageCreateRequestData]


class _SerializerAppClipAdvancedExperienceImageCreateRequest(pydantic.BaseModel):
    """
    Serializer for AppClipAdvancedExperienceImageCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppClipAdvancedExperienceImageCreateRequestData = pydantic.Field(
        alias="data"
    )
