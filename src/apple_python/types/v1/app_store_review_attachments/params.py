"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppStoreReviewAttachmentUpdateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    source_file_checksum: typing_extensions.NotRequired[str]
    uploaded: typing_extensions.NotRequired[bool]


class _SerializerAppStoreReviewAttachmentUpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreReviewAttachmentUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    source_file_checksum: typing.Optional[str] = pydantic.Field(
        alias="sourceFileChecksum", default=None
    )
    uploaded: typing.Optional[bool] = pydantic.Field(alias="uploaded", default=None)


class AppStoreReviewAttachmentCreateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    file_name: typing_extensions.Required[str]
    file_size: typing_extensions.Required[int]


class _SerializerAppStoreReviewAttachmentCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreReviewAttachmentCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    file_name: str = pydantic.Field(alias="fileName")
    file_size: int = pydantic.Field(alias="fileSize")


class AppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetailData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["appStoreReviewDetails"]]


class _SerializerAppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetailData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetailData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreReviewDetails"] = pydantic.Field(
        alias="type"
    )


class AppStoreReviewAttachmentUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppStoreReviewAttachmentUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreReviewAttachments"]
    ]


class _SerializerAppStoreReviewAttachmentUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreReviewAttachmentUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppStoreReviewAttachmentUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreReviewAttachments"] = pydantic.Field(
        alias="type"
    )


class AppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetail(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetailData
    ]


class _SerializerAppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetail(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetail handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetailData = pydantic.Field(
        alias="data"
    )


class AppStoreReviewAttachmentUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreReviewAttachmentUpdateRequestData]


class _SerializerAppStoreReviewAttachmentUpdateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreReviewAttachmentUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreReviewAttachmentUpdateRequestData = pydantic.Field(
        alias="data"
    )


class AppStoreReviewAttachmentCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    app_store_review_detail: typing_extensions.Required[
        AppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetail
    ]


class _SerializerAppStoreReviewAttachmentCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreReviewAttachmentCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_store_review_detail: _SerializerAppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetail = pydantic.Field(
        alias="appStoreReviewDetail"
    )


class AppStoreReviewAttachmentCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        AppStoreReviewAttachmentCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        AppStoreReviewAttachmentCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreReviewAttachments"]
    ]


class _SerializerAppStoreReviewAttachmentCreateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreReviewAttachmentCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerAppStoreReviewAttachmentCreateRequestDataAttributes = (
        pydantic.Field(alias="attributes")
    )
    relationships: _SerializerAppStoreReviewAttachmentCreateRequestDataRelationships = (
        pydantic.Field(alias="relationships")
    )
    type: typing_extensions.Literal["appStoreReviewAttachments"] = pydantic.Field(
        alias="type"
    )


class AppStoreReviewAttachmentCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreReviewAttachmentCreateRequestData]


class _SerializerAppStoreReviewAttachmentCreateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreReviewAttachmentCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreReviewAttachmentCreateRequestData = pydantic.Field(
        alias="data"
    )
