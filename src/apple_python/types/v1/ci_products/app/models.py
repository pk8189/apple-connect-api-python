"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class AppAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    bundle_id: typing.Optional[str] = _PydanticField(alias="bundleId", default=None)
    content_rights_declaration: typing.Optional[
        typing_extensions.Literal[
            "DOES_NOT_USE_THIRD_PARTY_CONTENT", "USES_THIRD_PARTY_CONTENT"
        ]
    ] = _PydanticField(alias="contentRightsDeclaration", default=None)
    is_or_ever_was_made_for_kids: typing.Optional[bool] = _PydanticField(
        alias="isOrEverWasMadeForKids", default=None
    )
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    primary_locale: typing.Optional[str] = _PydanticField(
        alias="primaryLocale", default=None
    )
    sku: typing.Optional[str] = _PydanticField(alias="sku", default=None)
    subscription_status_url: typing.Optional[str] = _PydanticField(
        alias="subscriptionStatusUrl", default=None
    )
    subscription_status_url_for_sandbox: typing.Optional[str] = _PydanticField(
        alias="subscriptionStatusUrlForSandbox", default=None
    )
    subscription_status_url_version: typing.Optional[
        typing_extensions.Literal["V1", "V2", "v1", "v2"]
    ] = _PydanticField(alias="subscriptionStatusUrlVersion", default=None)
    subscription_status_url_version_for_sandbox: typing.Optional[
        typing_extensions.Literal["V1", "V2", "v1", "v2"]
    ] = _PydanticField(alias="subscriptionStatusUrlVersionForSandbox", default=None)


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppClipsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClips"] = _PydanticField(alias="type")


class AppRelationshipsAppClipsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class AppRelationshipsAppCustomProductPagesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appCustomProductPages"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsAppCustomProductPagesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppEncryptionDeclarationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEncryptionDeclarations"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsAppEncryptionDeclarationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppEventsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEvents"] = _PydanticField(alias="type")


class AppRelationshipsAppEventsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppInfosDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appInfos"] = _PydanticField(alias="type")


class AppRelationshipsAppInfosLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppStoreVersionExperimentsV2DataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsAppStoreVersionExperimentsV2Links(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppStoreVersionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = _PydanticField(alias="type")


class AppRelationshipsAppStoreVersionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsBetaAppLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaAppLocalizations"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsBetaAppLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsBetaAppReviewDetailData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaAppReviewDetails"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsBetaAppReviewDetailLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsBetaGroupsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaGroups"] = _PydanticField(alias="type")


class AppRelationshipsBetaGroupsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsBetaLicenseAgreementData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaLicenseAgreements"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsBetaLicenseAgreementLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsBuildsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class AppRelationshipsBuildsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsCiProductData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["ciProducts"] = _PydanticField(alias="type")


class AppRelationshipsCiProductLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsEndUserLicenseAgreementData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["endUserLicenseAgreements"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsEndUserLicenseAgreementLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsGameCenterDetailData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterDetails"] = _PydanticField(alias="type")


class AppRelationshipsGameCenterDetailLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsGameCenterEnabledVersionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterEnabledVersions"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsGameCenterEnabledVersionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsInAppPurchasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchases"] = _PydanticField(alias="type")


class AppRelationshipsInAppPurchasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsInAppPurchasesV2DataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchases"] = _PydanticField(alias="type")


class AppRelationshipsInAppPurchasesV2Links(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsPreOrderData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appPreOrders"] = _PydanticField(alias="type")


class AppRelationshipsPreOrderLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsPreReleaseVersionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["preReleaseVersions"] = _PydanticField(alias="type")


class AppRelationshipsPreReleaseVersionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsPromotedPurchasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["promotedPurchases"] = _PydanticField(alias="type")


class AppRelationshipsPromotedPurchasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsReviewSubmissionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["reviewSubmissions"] = _PydanticField(alias="type")


class AppRelationshipsReviewSubmissionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsSubscriptionGracePeriodData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionGracePeriods"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsSubscriptionGracePeriodLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsSubscriptionGroupsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionGroups"] = _PydanticField(alias="type")


class AppRelationshipsSubscriptionGroupsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEncryptionDeclarationAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_description: typing.Optional[str] = _PydanticField(
        alias="appDescription", default=None
    )
    app_encryption_declaration_state: typing.Optional[
        typing_extensions.Literal[
            "CREATED", "IN_REVIEW", "APPROVED", "REJECTED", "INVALID", "EXPIRED"
        ]
    ] = _PydanticField(alias="appEncryptionDeclarationState", default=None)
    available_on_french_store: typing.Optional[bool] = _PydanticField(
        alias="availableOnFrenchStore", default=None
    )
    code_value: typing.Optional[str] = _PydanticField(alias="codeValue", default=None)
    contains_proprietary_cryptography: typing.Optional[bool] = _PydanticField(
        alias="containsProprietaryCryptography", default=None
    )
    contains_third_party_cryptography: typing.Optional[bool] = _PydanticField(
        alias="containsThirdPartyCryptography", default=None
    )
    created_date: typing.Optional[str] = _PydanticField(
        alias="createdDate", default=None
    )
    document_name: typing.Optional[str] = _PydanticField(
        alias="documentName", default=None
    )
    document_type: typing.Optional[str] = _PydanticField(
        alias="documentType", default=None
    )
    document_url: typing.Optional[str] = _PydanticField(
        alias="documentUrl", default=None
    )
    exempt: typing.Optional[bool] = _PydanticField(alias="exempt", default=None)
    platform_field: typing.Optional[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ] = _PydanticField(alias="platform", default=None)
    uploaded_date: typing.Optional[str] = _PydanticField(
        alias="uploadedDate", default=None
    )
    uses_encryption: typing.Optional[bool] = _PydanticField(
        alias="usesEncryption", default=None
    )


class AppEncryptionDeclarationRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppEncryptionDeclarationRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEncryptionDeclarationDocuments"] = (
        _PydanticField(alias="type")
    )


class AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEncryptionDeclarationRelationshipsBuildsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class AppEncryptionDeclarationRelationshipsBuildsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class CiProductAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    created_date: typing.Optional[str] = _PydanticField(
        alias="createdDate", default=None
    )
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    product_type: typing.Optional[typing_extensions.Literal["APP", "FRAMEWORK"]] = (
        _PydanticField(alias="productType", default=None)
    )


class CiProductRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class CiProductRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class CiProductRelationshipsBundleIdData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["bundleIds"] = _PydanticField(alias="type")


class CiProductRelationshipsBundleIdLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class CiProductRelationshipsPrimaryRepositoriesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["scmRepositories"] = _PydanticField(alias="type")


class CiProductRelationshipsPrimaryRepositoriesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaGroupAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    created_date: typing.Optional[str] = _PydanticField(
        alias="createdDate", default=None
    )
    feedback_enabled: typing.Optional[bool] = _PydanticField(
        alias="feedbackEnabled", default=None
    )
    has_access_to_all_builds: typing.Optional[bool] = _PydanticField(
        alias="hasAccessToAllBuilds", default=None
    )
    ios_builds_available_for_apple_silicon_mac: typing.Optional[bool] = _PydanticField(
        alias="iosBuildsAvailableForAppleSiliconMac", default=None
    )
    is_internal_group: typing.Optional[bool] = _PydanticField(
        alias="isInternalGroup", default=None
    )
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    public_link: typing.Optional[str] = _PydanticField(alias="publicLink", default=None)
    public_link_enabled: typing.Optional[bool] = _PydanticField(
        alias="publicLinkEnabled", default=None
    )
    public_link_id: typing.Optional[str] = _PydanticField(
        alias="publicLinkId", default=None
    )
    public_link_limit: typing.Optional[int] = _PydanticField(
        alias="publicLinkLimit", default=None
    )
    public_link_limit_enabled: typing.Optional[bool] = _PydanticField(
        alias="publicLinkLimitEnabled", default=None
    )


class BetaGroupRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class BetaGroupRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaGroupRelationshipsBetaTestersDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaTesters"] = _PydanticField(alias="type")


class BetaGroupRelationshipsBetaTestersLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaGroupRelationshipsBuildsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class BetaGroupRelationshipsBuildsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_store_state: typing.Optional[
        typing_extensions.Literal[
            "ACCEPTED",
            "DEVELOPER_REMOVED_FROM_SALE",
            "DEVELOPER_REJECTED",
            "IN_REVIEW",
            "INVALID_BINARY",
            "METADATA_REJECTED",
            "PENDING_APPLE_RELEASE",
            "PENDING_CONTRACT",
            "PENDING_DEVELOPER_RELEASE",
            "PREPARE_FOR_SUBMISSION",
            "PREORDER_READY_FOR_SALE",
            "PROCESSING_FOR_APP_STORE",
            "READY_FOR_REVIEW",
            "READY_FOR_SALE",
            "REJECTED",
            "REMOVED_FROM_SALE",
            "WAITING_FOR_EXPORT_COMPLIANCE",
            "WAITING_FOR_REVIEW",
            "REPLACED_WITH_NEW_VERSION",
            "NOT_APPLICABLE",
        ]
    ] = _PydanticField(alias="appStoreState", default=None)
    app_version_state: typing.Optional[
        typing_extensions.Literal[
            "ACCEPTED",
            "DEVELOPER_REJECTED",
            "IN_REVIEW",
            "INVALID_BINARY",
            "METADATA_REJECTED",
            "PENDING_APPLE_RELEASE",
            "PENDING_DEVELOPER_RELEASE",
            "PREPARE_FOR_SUBMISSION",
            "PROCESSING_FOR_DISTRIBUTION",
            "READY_FOR_DISTRIBUTION",
            "READY_FOR_REVIEW",
            "REJECTED",
            "REPLACED_WITH_NEW_VERSION",
            "WAITING_FOR_EXPORT_COMPLIANCE",
            "WAITING_FOR_REVIEW",
        ]
    ] = _PydanticField(alias="appVersionState", default=None)
    copyright: typing.Optional[str] = _PydanticField(alias="copyright", default=None)
    created_date: typing.Optional[str] = _PydanticField(
        alias="createdDate", default=None
    )
    downloadable: typing.Optional[bool] = _PydanticField(
        alias="downloadable", default=None
    )
    earliest_release_date: typing.Optional[str] = _PydanticField(
        alias="earliestReleaseDate", default=None
    )
    platform_field: typing.Optional[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ] = _PydanticField(alias="platform", default=None)
    release_type: typing.Optional[
        typing_extensions.Literal["MANUAL", "AFTER_APPROVAL", "SCHEDULED"]
    ] = _PydanticField(alias="releaseType", default=None)
    review_type: typing.Optional[
        typing_extensions.Literal["APP_STORE", "NOTARIZATION"]
    ] = _PydanticField(alias="reviewType", default=None)
    version_string: typing.Optional[str] = _PydanticField(
        alias="versionString", default=None
    )


class AppStoreVersionRelationshipsAgeRatingDeclarationData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["ageRatingDeclarations"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAgeRatingDeclarationLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAlternativeDistributionPackageData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["alternativeDistributionPackages"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAlternativeDistributionPackageLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppStoreVersionRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppClipDefaultExperienceData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipDefaultExperiences"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppClipDefaultExperienceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreReviewDetailData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreReviewDetails"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreReviewDetailLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreVersionExperimentsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreVersionExperimentsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreVersionExperimentsV2DataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreVersionExperimentsV2Links(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreVersionLocalizationsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionLocalizations"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreVersionLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionPhasedReleases"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreVersionSubmissionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionSubmissions"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreVersionSubmissionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsBuildData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class AppStoreVersionRelationshipsBuildLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsRoutingAppCoverageData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["routingAppCoverages"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsRoutingAppCoverageLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PrereleaseVersionAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    platform_field: typing.Optional[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ] = _PydanticField(alias="platform", default=None)
    version: typing.Optional[str] = _PydanticField(alias="version", default=None)


class PrereleaseVersionRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class PrereleaseVersionRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PrereleaseVersionRelationshipsBuildsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class PrereleaseVersionRelationshipsBuildsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaAppLocalizationAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    description: typing.Optional[str] = _PydanticField(
        alias="description", default=None
    )
    feedback_email: typing.Optional[str] = _PydanticField(
        alias="feedbackEmail", default=None
    )
    locale_field: typing.Optional[str] = _PydanticField(alias="locale", default=None)
    marketing_url: typing.Optional[str] = _PydanticField(
        alias="marketingUrl", default=None
    )
    privacy_policy_url: typing.Optional[str] = _PydanticField(
        alias="privacyPolicyUrl", default=None
    )
    tv_os_privacy_policy: typing.Optional[str] = _PydanticField(
        alias="tvOsPrivacyPolicy", default=None
    )


class BetaAppLocalizationRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class BetaAppLocalizationRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class ImageAsset(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    height: typing.Optional[int] = _PydanticField(alias="height", default=None)
    template_url: typing.Optional[str] = _PydanticField(
        alias="templateUrl", default=None
    )
    width: typing.Optional[int] = _PydanticField(alias="width", default=None)


class BuildRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class BuildRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsAppEncryptionDeclarationData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEncryptionDeclarations"] = _PydanticField(
        alias="type"
    )


class BuildRelationshipsAppEncryptionDeclarationLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsAppStoreVersionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = _PydanticField(alias="type")


class BuildRelationshipsAppStoreVersionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsBetaAppReviewSubmissionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaAppReviewSubmissions"] = _PydanticField(
        alias="type"
    )


class BuildRelationshipsBetaAppReviewSubmissionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsBetaBuildLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaBuildLocalizations"] = _PydanticField(
        alias="type"
    )


class BuildRelationshipsBetaBuildLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsBetaGroupsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaGroups"] = _PydanticField(alias="type")


class BuildRelationshipsBetaGroupsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsBuildBetaDetailData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["buildBetaDetails"] = _PydanticField(alias="type")


class BuildRelationshipsBuildBetaDetailLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsBuildBundlesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["buildBundles"] = _PydanticField(alias="type")


class BuildRelationshipsBuildBundlesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsIconsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["buildIcons"] = _PydanticField(alias="type")


class BuildRelationshipsIconsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsIndividualTestersDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaTesters"] = _PydanticField(alias="type")


class BuildRelationshipsIndividualTestersLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsPreReleaseVersionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["preReleaseVersions"] = _PydanticField(alias="type")


class BuildRelationshipsPreReleaseVersionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaLicenseAgreementAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    agreement_text: typing.Optional[str] = _PydanticField(
        alias="agreementText", default=None
    )


class BetaLicenseAgreementRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class BetaLicenseAgreementRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaAppReviewDetailAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    contact_email: typing.Optional[str] = _PydanticField(
        alias="contactEmail", default=None
    )
    contact_first_name: typing.Optional[str] = _PydanticField(
        alias="contactFirstName", default=None
    )
    contact_last_name: typing.Optional[str] = _PydanticField(
        alias="contactLastName", default=None
    )
    contact_phone: typing.Optional[str] = _PydanticField(
        alias="contactPhone", default=None
    )
    demo_account_name: typing.Optional[str] = _PydanticField(
        alias="demoAccountName", default=None
    )
    demo_account_password: typing.Optional[str] = _PydanticField(
        alias="demoAccountPassword", default=None
    )
    demo_account_required: typing.Optional[bool] = _PydanticField(
        alias="demoAccountRequired", default=None
    )
    notes: typing.Optional[str] = _PydanticField(alias="notes", default=None)


class BetaAppReviewDetailRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class BetaAppReviewDetailRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppInfoAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_store_age_rating: typing.Optional[
        typing_extensions.Literal[
            "FOUR_PLUS", "NINE_PLUS", "TWELVE_PLUS", "SEVENTEEN_PLUS", "UNRATED"
        ]
    ] = _PydanticField(alias="appStoreAgeRating", default=None)
    app_store_state: typing.Optional[
        typing_extensions.Literal[
            "ACCEPTED",
            "DEVELOPER_REMOVED_FROM_SALE",
            "DEVELOPER_REJECTED",
            "IN_REVIEW",
            "INVALID_BINARY",
            "METADATA_REJECTED",
            "PENDING_APPLE_RELEASE",
            "PENDING_CONTRACT",
            "PENDING_DEVELOPER_RELEASE",
            "PREPARE_FOR_SUBMISSION",
            "PREORDER_READY_FOR_SALE",
            "PROCESSING_FOR_APP_STORE",
            "READY_FOR_REVIEW",
            "READY_FOR_SALE",
            "REJECTED",
            "REMOVED_FROM_SALE",
            "WAITING_FOR_EXPORT_COMPLIANCE",
            "WAITING_FOR_REVIEW",
            "REPLACED_WITH_NEW_VERSION",
            "NOT_APPLICABLE",
        ]
    ] = _PydanticField(alias="appStoreState", default=None)
    brazil_age_rating: typing.Optional[
        typing_extensions.Literal[
            "L", "TEN", "TWELVE", "FOURTEEN", "SIXTEEN", "EIGHTEEN"
        ]
    ] = _PydanticField(alias="brazilAgeRating", default=None)
    brazil_age_rating_v2: typing.Optional[
        typing_extensions.Literal[
            "SELF_RATED_L",
            "SELF_RATED_TEN",
            "SELF_RATED_TWELVE",
            "SELF_RATED_FOURTEEN",
            "SELF_RATED_SIXTEEN",
            "SELF_RATED_EIGHTEEN",
            "OFFICIAL_L",
            "OFFICIAL_TEN",
            "OFFICIAL_TWELVE",
            "OFFICIAL_FOURTEEN",
            "OFFICIAL_SIXTEEN",
            "OFFICIAL_EIGHTEEN",
        ]
    ] = _PydanticField(alias="brazilAgeRatingV2", default=None)
    kids_age_band: typing.Optional[
        typing_extensions.Literal["FIVE_AND_UNDER", "SIX_TO_EIGHT", "NINE_TO_ELEVEN"]
    ] = _PydanticField(alias="kidsAgeBand", default=None)
    state: typing.Optional[
        typing_extensions.Literal[
            "ACCEPTED",
            "DEVELOPER_REJECTED",
            "IN_REVIEW",
            "PENDING_RELEASE",
            "PREPARE_FOR_SUBMISSION",
            "READY_FOR_DISTRIBUTION",
            "READY_FOR_REVIEW",
            "REJECTED",
            "REPLACED_WITH_NEW_INFO",
            "WAITING_FOR_REVIEW",
        ]
    ] = _PydanticField(alias="state", default=None)


class AppInfoRelationshipsAgeRatingDeclarationData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["ageRatingDeclarations"] = _PydanticField(
        alias="type"
    )


class AppInfoRelationshipsAgeRatingDeclarationLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppInfoRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppInfoRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppInfoRelationshipsAppInfoLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appInfoLocalizations"] = _PydanticField(
        alias="type"
    )


class AppInfoRelationshipsAppInfoLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppInfoRelationshipsPrimaryCategoryData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appCategories"] = _PydanticField(alias="type")


class AppInfoRelationshipsPrimaryCategoryLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppInfoRelationshipsPrimarySubcategoryOneData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appCategories"] = _PydanticField(alias="type")


class AppInfoRelationshipsPrimarySubcategoryOneLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppInfoRelationshipsPrimarySubcategoryTwoData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appCategories"] = _PydanticField(alias="type")


class AppInfoRelationshipsPrimarySubcategoryTwoLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppInfoRelationshipsSecondaryCategoryData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appCategories"] = _PydanticField(alias="type")


class AppInfoRelationshipsSecondaryCategoryLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppInfoRelationshipsSecondarySubcategoryOneData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appCategories"] = _PydanticField(alias="type")


class AppInfoRelationshipsSecondarySubcategoryOneLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppInfoRelationshipsSecondarySubcategoryTwoData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appCategories"] = _PydanticField(alias="type")


class AppInfoRelationshipsSecondarySubcategoryTwoLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppClipAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    bundle_id: typing.Optional[str] = _PydanticField(alias="bundleId", default=None)


class AppClipRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppClipRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppClipRelationshipsAppClipDefaultExperiencesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipDefaultExperiences"] = _PydanticField(
        alias="type"
    )


class AppClipRelationshipsAppClipDefaultExperiencesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class EndUserLicenseAgreementAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    agreement_text: typing.Optional[str] = _PydanticField(
        alias="agreementText", default=None
    )


class EndUserLicenseAgreementRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class EndUserLicenseAgreementRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class EndUserLicenseAgreementRelationshipsTerritoriesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["territories"] = _PydanticField(alias="type")


class EndUserLicenseAgreementRelationshipsTerritoriesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppPreOrderAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_release_date: typing.Optional[str] = _PydanticField(
        alias="appReleaseDate", default=None
    )
    pre_order_available_date: typing.Optional[str] = _PydanticField(
        alias="preOrderAvailableDate", default=None
    )


class AppPreOrderRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppPreOrderRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class InAppPurchaseAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    in_app_purchase_type: typing.Optional[
        typing_extensions.Literal[
            "AUTOMATICALLY_RENEWABLE_SUBSCRIPTION",
            "NON_CONSUMABLE",
            "CONSUMABLE",
            "NON_RENEWING_SUBSCRIPTION",
            "FREE_SUBSCRIPTION",
        ]
    ] = _PydanticField(alias="inAppPurchaseType", default=None)
    product_id: typing.Optional[str] = _PydanticField(alias="productId", default=None)
    reference_name: typing.Optional[str] = _PydanticField(
        alias="referenceName", default=None
    )
    state: typing.Optional[
        typing_extensions.Literal[
            "CREATED",
            "DEVELOPER_SIGNED_OFF",
            "DEVELOPER_ACTION_NEEDED",
            "DELETION_IN_PROGRESS",
            "APPROVED",
            "DELETED",
            "REMOVED_FROM_SALE",
            "DEVELOPER_REMOVED_FROM_SALE",
            "WAITING_FOR_UPLOAD",
            "PROCESSING_CONTENT",
            "REPLACED",
            "REJECTED",
            "WAITING_FOR_SCREENSHOT",
            "PREPARE_FOR_SUBMISSION",
            "MISSING_METADATA",
            "READY_TO_SUBMIT",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "PENDING_DEVELOPER_RELEASE",
        ]
    ] = _PydanticField(alias="state", default=None)


class InAppPurchaseRelationshipsAppsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class InAppPurchaseRelationshipsAppsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionGroupAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    reference_name: typing.Optional[str] = _PydanticField(
        alias="referenceName", default=None
    )


class SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionGroupLocalizations"] = _PydanticField(
        alias="type"
    )


class SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionGroupRelationshipsSubscriptionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionGroupRelationshipsSubscriptionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterEnabledVersionAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    icon_asset: typing.Optional[ImageAsset] = _PydanticField(
        alias="iconAsset", default=None
    )
    platform_field: typing.Optional[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ] = _PydanticField(alias="platform", default=None)
    version_string: typing.Optional[str] = _PydanticField(
        alias="versionString", default=None
    )


class GameCenterEnabledVersionRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class GameCenterEnabledVersionRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterEnabledVersionRelationshipsCompatibleVersionsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterEnabledVersions"] = _PydanticField(
        alias="type"
    )


class GameCenterEnabledVersionRelationshipsCompatibleVersionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppCustomProductPageAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    url: typing.Optional[str] = _PydanticField(alias="url", default=None)
    visible: typing.Optional[bool] = _PydanticField(alias="visible", default=None)


class AppCustomProductPageRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppCustomProductPageRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppCustomProductPageRelationshipsAppCustomProductPageVersionsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appCustomProductPageVersions"] = _PydanticField(
        alias="type"
    )


class AppCustomProductPageRelationshipsAppCustomProductPageVersionsLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class InAppPurchaseV2Attributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    content_hosting: typing.Optional[bool] = _PydanticField(
        alias="contentHosting", default=None
    )
    family_sharable: typing.Optional[bool] = _PydanticField(
        alias="familySharable", default=None
    )
    in_app_purchase_type: typing.Optional[
        typing_extensions.Literal[
            "CONSUMABLE", "NON_CONSUMABLE", "NON_RENEWING_SUBSCRIPTION"
        ]
    ] = _PydanticField(alias="inAppPurchaseType", default=None)
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    product_id: typing.Optional[str] = _PydanticField(alias="productId", default=None)
    review_note: typing.Optional[str] = _PydanticField(alias="reviewNote", default=None)
    state: typing.Optional[
        typing_extensions.Literal[
            "MISSING_METADATA",
            "WAITING_FOR_UPLOAD",
            "PROCESSING_CONTENT",
            "READY_TO_SUBMIT",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "DEVELOPER_ACTION_NEEDED",
            "PENDING_BINARY_APPROVAL",
            "APPROVED",
            "DEVELOPER_REMOVED_FROM_SALE",
            "REMOVED_FROM_SALE",
            "REJECTED",
        ]
    ] = _PydanticField(alias="state", default=None)


class InAppPurchaseV2RelationshipsAppStoreReviewScreenshotData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchaseAppStoreReviewScreenshots"] = (
        _PydanticField(alias="type")
    )


class InAppPurchaseV2RelationshipsAppStoreReviewScreenshotLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class InAppPurchaseV2RelationshipsContentData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchaseContents"] = _PydanticField(
        alias="type"
    )


class InAppPurchaseV2RelationshipsContentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class InAppPurchaseV2RelationshipsIapPriceScheduleData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchasePriceSchedules"] = _PydanticField(
        alias="type"
    )


class InAppPurchaseV2RelationshipsIapPriceScheduleLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class InAppPurchaseV2RelationshipsInAppPurchaseAvailabilityData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchaseAvailabilities"] = _PydanticField(
        alias="type"
    )


class InAppPurchaseV2RelationshipsInAppPurchaseAvailabilityLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class InAppPurchaseV2RelationshipsInAppPurchaseLocalizationsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchaseLocalizations"] = _PydanticField(
        alias="type"
    )


class InAppPurchaseV2RelationshipsInAppPurchaseLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class InAppPurchaseV2RelationshipsPricePointsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchasePricePoints"] = _PydanticField(
        alias="type"
    )


class InAppPurchaseV2RelationshipsPricePointsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class InAppPurchaseV2RelationshipsPromotedPurchaseData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["promotedPurchases"] = _PydanticField(alias="type")


class InAppPurchaseV2RelationshipsPromotedPurchaseLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PromotedPurchaseAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    enabled: typing.Optional[bool] = _PydanticField(alias="enabled", default=None)
    state: typing.Optional[
        typing_extensions.Literal[
            "APPROVED", "IN_REVIEW", "PREPARE_FOR_SUBMISSION", "REJECTED"
        ]
    ] = _PydanticField(alias="state", default=None)
    visible_for_all_users: typing.Optional[bool] = _PydanticField(
        alias="visibleForAllUsers", default=None
    )


class PromotedPurchaseRelationshipsInAppPurchaseV2Data(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchases"] = _PydanticField(alias="type")


class PromotedPurchaseRelationshipsInAppPurchaseV2Links(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PromotedPurchaseRelationshipsPromotionImagesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["promotedPurchaseImages"] = _PydanticField(
        alias="type"
    )


class PromotedPurchaseRelationshipsPromotionImagesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PromotedPurchaseRelationshipsSubscriptionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class PromotedPurchaseRelationshipsSubscriptionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEventAttributesArchivedTerritorySchedulesItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    event_end: typing.Optional[str] = _PydanticField(alias="eventEnd", default=None)
    event_start: typing.Optional[str] = _PydanticField(alias="eventStart", default=None)
    publish_start: typing.Optional[str] = _PydanticField(
        alias="publishStart", default=None
    )
    territories: typing.Optional[typing.List[str]] = _PydanticField(
        alias="territories", default=None
    )


class AppEventAttributesTerritorySchedulesItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    event_end: typing.Optional[str] = _PydanticField(alias="eventEnd", default=None)
    event_start: typing.Optional[str] = _PydanticField(alias="eventStart", default=None)
    publish_start: typing.Optional[str] = _PydanticField(
        alias="publishStart", default=None
    )
    territories: typing.Optional[typing.List[str]] = _PydanticField(
        alias="territories", default=None
    )


class AppEventRelationshipsLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEventLocalizations"] = _PydanticField(
        alias="type"
    )


class AppEventRelationshipsLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class ReviewSubmissionAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    platform_field: typing.Optional[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ] = _PydanticField(alias="platform", default=None)
    state: typing.Optional[
        typing_extensions.Literal[
            "READY_FOR_REVIEW",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "UNRESOLVED_ISSUES",
            "CANCELING",
            "COMPLETING",
            "COMPLETE",
        ]
    ] = _PydanticField(alias="state", default=None)
    submitted_date: typing.Optional[str] = _PydanticField(
        alias="submittedDate", default=None
    )


class ReviewSubmissionRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class ReviewSubmissionRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class ReviewSubmissionRelationshipsAppStoreVersionForReviewData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = _PydanticField(alias="type")


class ReviewSubmissionRelationshipsAppStoreVersionForReviewLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class ReviewSubmissionRelationshipsItemsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["reviewSubmissionItems"] = _PydanticField(
        alias="type"
    )


class ReviewSubmissionRelationshipsItemsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class ReviewSubmissionRelationshipsLastUpdatedByActorData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["actors"] = _PydanticField(alias="type")


class ReviewSubmissionRelationshipsLastUpdatedByActorLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class ReviewSubmissionRelationshipsSubmittedByActorData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["actors"] = _PydanticField(alias="type")


class ReviewSubmissionRelationshipsSubmittedByActorLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionGracePeriodAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    duration: typing.Optional[
        typing_extensions.Literal["THREE_DAYS", "SIXTEEN_DAYS", "TWENTY_EIGHT_DAYS"]
    ] = _PydanticField(alias="duration", default=None)
    opt_in: typing.Optional[bool] = _PydanticField(alias="optIn", default=None)
    renewal_type: typing.Optional[
        typing_extensions.Literal["ALL_RENEWALS", "PAID_TO_PAID_ONLY"]
    ] = _PydanticField(alias="renewalType", default=None)
    sandbox_opt_in: typing.Optional[bool] = _PydanticField(
        alias="sandboxOptIn", default=None
    )


class GameCenterDetailAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    arcade_enabled: typing.Optional[bool] = _PydanticField(
        alias="arcadeEnabled", default=None
    )
    challenge_enabled: typing.Optional[bool] = _PydanticField(
        alias="challengeEnabled", default=None
    )


class GameCenterDetailRelationshipsAchievementReleasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterAchievementReleases"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsAchievementReleasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class GameCenterDetailRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsDefaultGroupLeaderboardData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboards"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsDefaultGroupLeaderboardLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsDefaultLeaderboardData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboards"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsDefaultLeaderboardLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsGameCenterAchievementsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterAchievements"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsGameCenterAchievementsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsGameCenterAppVersionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterAppVersions"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsGameCenterAppVersionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsGameCenterGroupData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterGroups"] = _PydanticField(alias="type")


class GameCenterDetailRelationshipsGameCenterGroupLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsGameCenterLeaderboardSetsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardSets"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsGameCenterLeaderboardSetsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsGameCenterLeaderboardsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboards"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsGameCenterLeaderboardsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsLeaderboardReleasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardReleases"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsLeaderboardReleasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsLeaderboardSetReleasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardSetReleases"] = (
        _PydanticField(alias="type")
    )


class GameCenterDetailRelationshipsLeaderboardSetReleasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionExperimentV2Attributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    end_date: typing.Optional[str] = _PydanticField(alias="endDate", default=None)
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    platform_field: typing.Optional[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ] = _PydanticField(alias="platform", default=None)
    review_required: typing.Optional[bool] = _PydanticField(
        alias="reviewRequired", default=None
    )
    start_date: typing.Optional[str] = _PydanticField(alias="startDate", default=None)
    state: typing.Optional[
        typing_extensions.Literal[
            "PREPARE_FOR_SUBMISSION",
            "READY_FOR_REVIEW",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "ACCEPTED",
            "APPROVED",
            "REJECTED",
            "COMPLETED",
            "STOPPED",
        ]
    ] = _PydanticField(alias="state", default=None)
    traffic_proportion: typing.Optional[int] = _PydanticField(
        alias="trafficProportion", default=None
    )


class AppStoreVersionExperimentV2RelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppStoreVersionExperimentV2RelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatmentsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperimentTreatments"] = (
        _PydanticField(alias="type")
    )


class AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatmentsLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionExperimentV2RelationshipsControlVersionsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = _PydanticField(alias="type")


class AppStoreVersionExperimentV2RelationshipsControlVersionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionExperimentV2RelationshipsLatestControlVersionData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = _PydanticField(alias="type")


class AppStoreVersionExperimentV2RelationshipsLatestControlVersionLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class DocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: str = _PydanticField(alias="self")


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class AppRelationshipsAppCustomProductPages(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppRelationshipsAppCustomProductPagesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppRelationshipsAppCustomProductPagesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsAppEncryptionDeclarations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppRelationshipsAppEncryptionDeclarationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppRelationshipsAppEncryptionDeclarationsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsAppEvents(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsAppEventsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsAppEventsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsAppInfos(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsAppInfosDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsAppInfosLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsAppStoreVersionExperimentsV2(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppRelationshipsAppStoreVersionExperimentsV2DataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppRelationshipsAppStoreVersionExperimentsV2Links] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsAppStoreVersions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsAppStoreVersionsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsAppStoreVersionsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsBetaAppLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsBetaAppLocalizationsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsBetaAppLocalizationsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsBetaAppReviewDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsBetaAppReviewDetailData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsBetaAppReviewDetailLinks] = _PydanticField(
        alias="links", default=None
    )


class AppRelationshipsBetaGroups(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsBetaGroupsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsBetaGroupsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsBetaLicenseAgreement(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsBetaLicenseAgreementData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsBetaLicenseAgreementLinks] = _PydanticField(
        alias="links", default=None
    )


class AppRelationshipsBuilds(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsBuildsDataItem]] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsBuildsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsCiProduct(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsCiProductData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsCiProductLinks] = _PydanticField(
        alias="links", default=None
    )


class AppRelationshipsEndUserLicenseAgreement(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsEndUserLicenseAgreementData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsEndUserLicenseAgreementLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppRelationshipsGameCenterDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsGameCenterDetailData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsGameCenterDetailLinks] = _PydanticField(
        alias="links", default=None
    )


class AppRelationshipsGameCenterEnabledVersions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppRelationshipsGameCenterEnabledVersionsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppRelationshipsGameCenterEnabledVersionsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsInAppPurchases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsInAppPurchasesDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsInAppPurchasesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsInAppPurchasesV2(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsInAppPurchasesV2DataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsInAppPurchasesV2Links] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsPreOrder(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsPreOrderData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsPreOrderLinks] = _PydanticField(
        alias="links", default=None
    )


class AppRelationshipsPreReleaseVersions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsPreReleaseVersionsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsPreReleaseVersionsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsPromotedPurchases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsPromotedPurchasesDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsPromotedPurchasesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsReviewSubmissions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsReviewSubmissionsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsReviewSubmissionsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsSubscriptionGracePeriod(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsSubscriptionGracePeriodData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsSubscriptionGracePeriodLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppRelationshipsSubscriptionGroups(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsSubscriptionGroupsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsSubscriptionGroupsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppEncryptionDeclarationRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppEncryptionDeclarationRelationshipsAppData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppEncryptionDeclarationRelationshipsAppLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocument(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentLinks
    ] = _PydanticField(alias="links", default=None)


class AppEncryptionDeclarationRelationshipsBuilds(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppEncryptionDeclarationRelationshipsBuildsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppEncryptionDeclarationRelationshipsBuildsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class CiProductRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[CiProductRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[CiProductRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class CiProductRelationshipsBundleId(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[CiProductRelationshipsBundleIdData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[CiProductRelationshipsBundleIdLinks] = _PydanticField(
        alias="links", default=None
    )


class CiProductRelationshipsPrimaryRepositories(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[CiProductRelationshipsPrimaryRepositoriesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[CiProductRelationshipsPrimaryRepositoriesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BetaGroupRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BetaGroupRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BetaGroupRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class BetaGroupRelationshipsBetaTesters(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BetaGroupRelationshipsBetaTestersDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BetaGroupRelationshipsBetaTestersLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BetaGroupRelationshipsBuilds(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BetaGroupRelationshipsBuildsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BetaGroupRelationshipsBuildsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppStoreVersionRelationshipsAgeRatingDeclaration(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsAgeRatingDeclarationData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppStoreVersionRelationshipsAgeRatingDeclarationLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppStoreVersionRelationshipsAlternativeDistributionPackage(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppStoreVersionRelationshipsAlternativeDistributionPackageData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionRelationshipsAlternativeDistributionPackageLinks
    ] = _PydanticField(alias="links", default=None)


class AppStoreVersionRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppStoreVersionRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class AppStoreVersionRelationshipsAppClipDefaultExperience(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsAppClipDefaultExperienceData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[
        AppStoreVersionRelationshipsAppClipDefaultExperienceLinks
    ] = _PydanticField(alias="links", default=None)


class AppStoreVersionRelationshipsAppStoreReviewDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsAppStoreReviewDetailData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppStoreVersionRelationshipsAppStoreReviewDetailLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppStoreVersionRelationshipsAppStoreVersionExperiments(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppStoreVersionRelationshipsAppStoreVersionExperimentsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionExperimentsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppStoreVersionRelationshipsAppStoreVersionExperimentsV2(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppStoreVersionRelationshipsAppStoreVersionExperimentsV2DataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionExperimentsV2Links
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppStoreVersionRelationshipsAppStoreVersionLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppStoreVersionRelationshipsAppStoreVersionLocalizationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionLocalizationsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppStoreVersionRelationshipsAppStoreVersionPhasedRelease(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseLinks
    ] = _PydanticField(alias="links", default=None)


class AppStoreVersionRelationshipsAppStoreVersionSubmission(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsAppStoreVersionSubmissionData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionSubmissionLinks
    ] = _PydanticField(alias="links", default=None)


class AppStoreVersionRelationshipsBuild(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsBuildData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppStoreVersionRelationshipsBuildLinks] = _PydanticField(
        alias="links", default=None
    )


class AppStoreVersionRelationshipsRoutingAppCoverage(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsRoutingAppCoverageData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppStoreVersionRelationshipsRoutingAppCoverageLinks] = (
        _PydanticField(alias="links", default=None)
    )


class PrereleaseVersionRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[PrereleaseVersionRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[PrereleaseVersionRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class PrereleaseVersionRelationshipsBuilds(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[PrereleaseVersionRelationshipsBuildsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[PrereleaseVersionRelationshipsBuildsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BetaAppLocalizationRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BetaAppLocalizationRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BetaAppLocalizationRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class BuildAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    build_audience_type: typing.Optional[
        typing_extensions.Literal["INTERNAL_ONLY", "APP_STORE_ELIGIBLE"]
    ] = _PydanticField(alias="buildAudienceType", default=None)
    computed_min_mac_os_version: typing.Optional[str] = _PydanticField(
        alias="computedMinMacOsVersion", default=None
    )
    expiration_date: typing.Optional[str] = _PydanticField(
        alias="expirationDate", default=None
    )
    expired: typing.Optional[bool] = _PydanticField(alias="expired", default=None)
    icon_asset_token: typing.Optional[ImageAsset] = _PydanticField(
        alias="iconAssetToken", default=None
    )
    ls_minimum_system_version: typing.Optional[str] = _PydanticField(
        alias="lsMinimumSystemVersion", default=None
    )
    min_os_version: typing.Optional[str] = _PydanticField(
        alias="minOsVersion", default=None
    )
    processing_state: typing.Optional[
        typing_extensions.Literal["PROCESSING", "FAILED", "INVALID", "VALID"]
    ] = _PydanticField(alias="processingState", default=None)
    uploaded_date: typing.Optional[str] = _PydanticField(
        alias="uploadedDate", default=None
    )
    uses_non_exempt_encryption: typing.Optional[bool] = _PydanticField(
        alias="usesNonExemptEncryption", default=None
    )
    version: typing.Optional[str] = _PydanticField(alias="version", default=None)


class BuildRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BuildRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class BuildRelationshipsAppEncryptionDeclaration(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsAppEncryptionDeclarationData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsAppEncryptionDeclarationLinks] = (
        _PydanticField(alias="links", default=None)
    )


class BuildRelationshipsAppStoreVersion(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsAppStoreVersionData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BuildRelationshipsAppStoreVersionLinks] = _PydanticField(
        alias="links", default=None
    )


class BuildRelationshipsBetaAppReviewSubmission(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsBetaAppReviewSubmissionData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsBetaAppReviewSubmissionLinks] = (
        _PydanticField(alias="links", default=None)
    )


class BuildRelationshipsBetaBuildLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[BuildRelationshipsBetaBuildLocalizationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[BuildRelationshipsBetaBuildLocalizationsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildRelationshipsBetaGroups(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BuildRelationshipsBetaGroupsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsBetaGroupsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildRelationshipsBuildBetaDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsBuildBetaDetailData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BuildRelationshipsBuildBetaDetailLinks] = _PydanticField(
        alias="links", default=None
    )


class BuildRelationshipsBuildBundles(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BuildRelationshipsBuildBundlesDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsBuildBundlesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildRelationshipsIcons(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BuildRelationshipsIconsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsIconsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildRelationshipsIndividualTesters(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BuildRelationshipsIndividualTestersDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsIndividualTestersLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildRelationshipsPreReleaseVersion(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsPreReleaseVersionData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BuildRelationshipsPreReleaseVersionLinks] = _PydanticField(
        alias="links", default=None
    )


class BetaLicenseAgreementRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BetaLicenseAgreementRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BetaLicenseAgreementRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class BetaAppReviewDetailRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BetaAppReviewDetailRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BetaAppReviewDetailRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class AppInfoRelationshipsAgeRatingDeclaration(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppInfoRelationshipsAgeRatingDeclarationData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppInfoRelationshipsAgeRatingDeclarationLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppInfoRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppInfoRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppInfoRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class AppInfoRelationshipsAppInfoLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppInfoRelationshipsAppInfoLocalizationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppInfoRelationshipsAppInfoLocalizationsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppInfoRelationshipsPrimaryCategory(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppInfoRelationshipsPrimaryCategoryData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppInfoRelationshipsPrimaryCategoryLinks] = _PydanticField(
        alias="links", default=None
    )


class AppInfoRelationshipsPrimarySubcategoryOne(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppInfoRelationshipsPrimarySubcategoryOneData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppInfoRelationshipsPrimarySubcategoryOneLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppInfoRelationshipsPrimarySubcategoryTwo(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppInfoRelationshipsPrimarySubcategoryTwoData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppInfoRelationshipsPrimarySubcategoryTwoLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppInfoRelationshipsSecondaryCategory(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppInfoRelationshipsSecondaryCategoryData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppInfoRelationshipsSecondaryCategoryLinks] = _PydanticField(
        alias="links", default=None
    )


class AppInfoRelationshipsSecondarySubcategoryOne(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppInfoRelationshipsSecondarySubcategoryOneData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppInfoRelationshipsSecondarySubcategoryOneLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppInfoRelationshipsSecondarySubcategoryTwo(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppInfoRelationshipsSecondarySubcategoryTwoData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppInfoRelationshipsSecondarySubcategoryTwoLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppClipRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppClipRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppClipRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class AppClipRelationshipsAppClipDefaultExperiences(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppClipRelationshipsAppClipDefaultExperiencesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppClipRelationshipsAppClipDefaultExperiencesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class EndUserLicenseAgreementRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[EndUserLicenseAgreementRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[EndUserLicenseAgreementRelationshipsAppLinks] = (
        _PydanticField(alias="links", default=None)
    )


class EndUserLicenseAgreementRelationshipsTerritories(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[EndUserLicenseAgreementRelationshipsTerritoriesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[EndUserLicenseAgreementRelationshipsTerritoriesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppPreOrderRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppPreOrderRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppPreOrderRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class InAppPurchaseRelationshipsApps(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[InAppPurchaseRelationshipsAppsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[InAppPurchaseRelationshipsAppsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionGroupRelationshipsSubscriptionGroupLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[
            SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsDataItem
        ]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionGroupRelationshipsSubscriptions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionGroupRelationshipsSubscriptionsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionGroupRelationshipsSubscriptionsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterEnabledVersionRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterEnabledVersionRelationshipsAppData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[GameCenterEnabledVersionRelationshipsAppLinks] = (
        _PydanticField(alias="links", default=None)
    )


class GameCenterEnabledVersionRelationshipsCompatibleVersions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterEnabledVersionRelationshipsCompatibleVersionsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        GameCenterEnabledVersionRelationshipsCompatibleVersionsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppCustomProductPageRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppCustomProductPageRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppCustomProductPageRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class AppCustomProductPageRelationshipsAppCustomProductPageVersions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[
            AppCustomProductPageRelationshipsAppCustomProductPageVersionsDataItem
        ]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppCustomProductPageRelationshipsAppCustomProductPageVersionsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class InAppPurchaseV2RelationshipsAppStoreReviewScreenshot(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[InAppPurchaseV2RelationshipsAppStoreReviewScreenshotData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[
        InAppPurchaseV2RelationshipsAppStoreReviewScreenshotLinks
    ] = _PydanticField(alias="links", default=None)


class InAppPurchaseV2RelationshipsContent(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[InAppPurchaseV2RelationshipsContentData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[InAppPurchaseV2RelationshipsContentLinks] = _PydanticField(
        alias="links", default=None
    )


class InAppPurchaseV2RelationshipsIapPriceSchedule(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[InAppPurchaseV2RelationshipsIapPriceScheduleData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[InAppPurchaseV2RelationshipsIapPriceScheduleLinks] = (
        _PydanticField(alias="links", default=None)
    )


class InAppPurchaseV2RelationshipsInAppPurchaseAvailability(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[InAppPurchaseV2RelationshipsInAppPurchaseAvailabilityData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[
        InAppPurchaseV2RelationshipsInAppPurchaseAvailabilityLinks
    ] = _PydanticField(alias="links", default=None)


class InAppPurchaseV2RelationshipsInAppPurchaseLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[InAppPurchaseV2RelationshipsInAppPurchaseLocalizationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        InAppPurchaseV2RelationshipsInAppPurchaseLocalizationsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class InAppPurchaseV2RelationshipsPricePoints(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[InAppPurchaseV2RelationshipsPricePointsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[InAppPurchaseV2RelationshipsPricePointsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class InAppPurchaseV2RelationshipsPromotedPurchase(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[InAppPurchaseV2RelationshipsPromotedPurchaseData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[InAppPurchaseV2RelationshipsPromotedPurchaseLinks] = (
        _PydanticField(alias="links", default=None)
    )


class PromotedPurchaseRelationshipsInAppPurchaseV2(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[PromotedPurchaseRelationshipsInAppPurchaseV2Data] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[PromotedPurchaseRelationshipsInAppPurchaseV2Links] = (
        _PydanticField(alias="links", default=None)
    )


class PromotedPurchaseRelationshipsPromotionImages(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[PromotedPurchaseRelationshipsPromotionImagesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[PromotedPurchaseRelationshipsPromotionImagesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class PromotedPurchaseRelationshipsSubscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[PromotedPurchaseRelationshipsSubscriptionData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[PromotedPurchaseRelationshipsSubscriptionLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppEventAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    archived_territory_schedules: typing.Optional[
        typing.List[AppEventAttributesArchivedTerritorySchedulesItem]
    ] = _PydanticField(alias="archivedTerritorySchedules", default=None)
    badge: typing.Optional[
        typing_extensions.Literal[
            "LIVE_EVENT",
            "PREMIERE",
            "CHALLENGE",
            "COMPETITION",
            "NEW_SEASON",
            "MAJOR_UPDATE",
            "SPECIAL_EVENT",
        ]
    ] = _PydanticField(alias="badge", default=None)
    deep_link: typing.Optional[str] = _PydanticField(alias="deepLink", default=None)
    event_state: typing.Optional[
        typing_extensions.Literal[
            "DRAFT",
            "READY_FOR_REVIEW",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "REJECTED",
            "ACCEPTED",
            "APPROVED",
            "PUBLISHED",
            "PAST",
            "ARCHIVED",
        ]
    ] = _PydanticField(alias="eventState", default=None)
    primary_locale: typing.Optional[str] = _PydanticField(
        alias="primaryLocale", default=None
    )
    priority: typing.Optional[typing_extensions.Literal["HIGH", "NORMAL"]] = (
        _PydanticField(alias="priority", default=None)
    )
    purchase_requirement: typing.Optional[
        typing_extensions.Literal[
            "NO_COST_ASSOCIATED",
            "IN_APP_PURCHASE",
            "SUBSCRIPTION",
            "IN_APP_PURCHASE_AND_SUBSCRIPTION",
            "IN_APP_PURCHASE_OR_SUBSCRIPTION",
        ]
    ] = _PydanticField(alias="purchaseRequirement", default=None)
    purpose: typing.Optional[
        typing_extensions.Literal[
            "APPROPRIATE_FOR_ALL_USERS",
            "ATTRACT_NEW_USERS",
            "KEEP_ACTIVE_USERS_INFORMED",
            "BRING_BACK_LAPSED_USERS",
        ]
    ] = _PydanticField(alias="purpose", default=None)
    reference_name: typing.Optional[str] = _PydanticField(
        alias="referenceName", default=None
    )
    territory_schedules: typing.Optional[
        typing.List[AppEventAttributesTerritorySchedulesItem]
    ] = _PydanticField(alias="territorySchedules", default=None)


class AppEventRelationshipsLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppEventRelationshipsLocalizationsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppEventRelationshipsLocalizationsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class ReviewSubmissionRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[ReviewSubmissionRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[ReviewSubmissionRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class ReviewSubmissionRelationshipsAppStoreVersionForReview(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[ReviewSubmissionRelationshipsAppStoreVersionForReviewData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[
        ReviewSubmissionRelationshipsAppStoreVersionForReviewLinks
    ] = _PydanticField(alias="links", default=None)


class ReviewSubmissionRelationshipsItems(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[ReviewSubmissionRelationshipsItemsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[ReviewSubmissionRelationshipsItemsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class ReviewSubmissionRelationshipsLastUpdatedByActor(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[ReviewSubmissionRelationshipsLastUpdatedByActorData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[ReviewSubmissionRelationshipsLastUpdatedByActorLinks] = (
        _PydanticField(alias="links", default=None)
    )


class ReviewSubmissionRelationshipsSubmittedByActor(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[ReviewSubmissionRelationshipsSubmittedByActorData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[ReviewSubmissionRelationshipsSubmittedByActorLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionGracePeriod(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionGracePeriodAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    type: typing_extensions.Literal["subscriptionGracePeriods"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsAchievementReleases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsAchievementReleasesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsAchievementReleasesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterDetailRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterDetailRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[GameCenterDetailRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class GameCenterDetailRelationshipsDefaultGroupLeaderboard(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterDetailRelationshipsDefaultGroupLeaderboardData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[
        GameCenterDetailRelationshipsDefaultGroupLeaderboardLinks
    ] = _PydanticField(alias="links", default=None)


class GameCenterDetailRelationshipsDefaultLeaderboard(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterDetailRelationshipsDefaultLeaderboardData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[GameCenterDetailRelationshipsDefaultLeaderboardLinks] = (
        _PydanticField(alias="links", default=None)
    )


class GameCenterDetailRelationshipsGameCenterAchievements(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsGameCenterAchievementsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsGameCenterAchievementsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterDetailRelationshipsGameCenterAppVersions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsGameCenterAppVersionsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsGameCenterAppVersionsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterDetailRelationshipsGameCenterGroup(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterDetailRelationshipsGameCenterGroupData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[GameCenterDetailRelationshipsGameCenterGroupLinks] = (
        _PydanticField(alias="links", default=None)
    )


class GameCenterDetailRelationshipsGameCenterLeaderboardSets(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsGameCenterLeaderboardSetsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        GameCenterDetailRelationshipsGameCenterLeaderboardSetsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterDetailRelationshipsGameCenterLeaderboards(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsGameCenterLeaderboardsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsGameCenterLeaderboardsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterDetailRelationshipsLeaderboardReleases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsLeaderboardReleasesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsLeaderboardReleasesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterDetailRelationshipsLeaderboardSetReleases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsLeaderboardSetReleasesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsLeaderboardSetReleasesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppStoreVersionExperimentV2RelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionExperimentV2RelationshipsAppData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppStoreVersionExperimentV2RelationshipsAppLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[
            AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatmentsDataItem
        ]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatmentsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppStoreVersionExperimentV2RelationshipsControlVersions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppStoreVersionExperimentV2RelationshipsControlVersionsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionExperimentV2RelationshipsControlVersionsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppStoreVersionExperimentV2RelationshipsLatestControlVersion(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppStoreVersionExperimentV2RelationshipsLatestControlVersionData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionExperimentV2RelationshipsLatestControlVersionLinks
    ] = _PydanticField(alias="links", default=None)


class AppRelationshipsAppClips(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsAppClipsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsAppClipsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppEncryptionDeclarationRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[AppEncryptionDeclarationRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_encryption_declaration_document: typing.Optional[
        AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocument
    ] = _PydanticField(alias="appEncryptionDeclarationDocument", default=None)
    builds: typing.Optional[AppEncryptionDeclarationRelationshipsBuilds] = (
        _PydanticField(alias="builds", default=None)
    )


class CiProductRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[CiProductRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    bundle_id: typing.Optional[CiProductRelationshipsBundleId] = _PydanticField(
        alias="bundleId", default=None
    )
    primary_repositories: typing.Optional[CiProductRelationshipsPrimaryRepositories] = (
        _PydanticField(alias="primaryRepositories", default=None)
    )


class BetaGroupRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[BetaGroupRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    beta_testers: typing.Optional[BetaGroupRelationshipsBetaTesters] = _PydanticField(
        alias="betaTesters", default=None
    )
    builds: typing.Optional[BetaGroupRelationshipsBuilds] = _PydanticField(
        alias="builds", default=None
    )


class AppStoreVersionRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    age_rating_declaration: typing.Optional[
        AppStoreVersionRelationshipsAgeRatingDeclaration
    ] = _PydanticField(alias="ageRatingDeclaration", default=None)
    alternative_distribution_package: typing.Optional[
        AppStoreVersionRelationshipsAlternativeDistributionPackage
    ] = _PydanticField(alias="alternativeDistributionPackage", default=None)
    app: typing.Optional[AppStoreVersionRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_clip_default_experience: typing.Optional[
        AppStoreVersionRelationshipsAppClipDefaultExperience
    ] = _PydanticField(alias="appClipDefaultExperience", default=None)
    app_store_review_detail: typing.Optional[
        AppStoreVersionRelationshipsAppStoreReviewDetail
    ] = _PydanticField(alias="appStoreReviewDetail", default=None)
    app_store_version_experiments: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionExperiments
    ] = _PydanticField(alias="appStoreVersionExperiments", default=None)
    app_store_version_experiments_v2: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionExperimentsV2
    ] = _PydanticField(alias="appStoreVersionExperimentsV2", default=None)
    app_store_version_localizations: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionLocalizations
    ] = _PydanticField(alias="appStoreVersionLocalizations", default=None)
    app_store_version_phased_release: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionPhasedRelease
    ] = _PydanticField(alias="appStoreVersionPhasedRelease", default=None)
    app_store_version_submission: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionSubmission
    ] = _PydanticField(alias="appStoreVersionSubmission", default=None)
    build: typing.Optional[AppStoreVersionRelationshipsBuild] = _PydanticField(
        alias="build", default=None
    )
    routing_app_coverage: typing.Optional[
        AppStoreVersionRelationshipsRoutingAppCoverage
    ] = _PydanticField(alias="routingAppCoverage", default=None)


class PrereleaseVersionRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[PrereleaseVersionRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    builds: typing.Optional[PrereleaseVersionRelationshipsBuilds] = _PydanticField(
        alias="builds", default=None
    )


class BetaAppLocalizationRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[BetaAppLocalizationRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )


class BuildRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[BuildRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_encryption_declaration: typing.Optional[
        BuildRelationshipsAppEncryptionDeclaration
    ] = _PydanticField(alias="appEncryptionDeclaration", default=None)
    app_store_version: typing.Optional[BuildRelationshipsAppStoreVersion] = (
        _PydanticField(alias="appStoreVersion", default=None)
    )
    beta_app_review_submission: typing.Optional[
        BuildRelationshipsBetaAppReviewSubmission
    ] = _PydanticField(alias="betaAppReviewSubmission", default=None)
    beta_build_localizations: typing.Optional[
        BuildRelationshipsBetaBuildLocalizations
    ] = _PydanticField(alias="betaBuildLocalizations", default=None)
    beta_groups: typing.Optional[BuildRelationshipsBetaGroups] = _PydanticField(
        alias="betaGroups", default=None
    )
    build_beta_detail: typing.Optional[BuildRelationshipsBuildBetaDetail] = (
        _PydanticField(alias="buildBetaDetail", default=None)
    )
    build_bundles: typing.Optional[BuildRelationshipsBuildBundles] = _PydanticField(
        alias="buildBundles", default=None
    )
    icons: typing.Optional[BuildRelationshipsIcons] = _PydanticField(
        alias="icons", default=None
    )
    individual_testers: typing.Optional[BuildRelationshipsIndividualTesters] = (
        _PydanticField(alias="individualTesters", default=None)
    )
    pre_release_version: typing.Optional[BuildRelationshipsPreReleaseVersion] = (
        _PydanticField(alias="preReleaseVersion", default=None)
    )


class BetaLicenseAgreementRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[BetaLicenseAgreementRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )


class BetaAppReviewDetailRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[BetaAppReviewDetailRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )


class AppInfoRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    age_rating_declaration: typing.Optional[
        AppInfoRelationshipsAgeRatingDeclaration
    ] = _PydanticField(alias="ageRatingDeclaration", default=None)
    app: typing.Optional[AppInfoRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_info_localizations: typing.Optional[
        AppInfoRelationshipsAppInfoLocalizations
    ] = _PydanticField(alias="appInfoLocalizations", default=None)
    primary_category: typing.Optional[AppInfoRelationshipsPrimaryCategory] = (
        _PydanticField(alias="primaryCategory", default=None)
    )
    primary_subcategory_one: typing.Optional[
        AppInfoRelationshipsPrimarySubcategoryOne
    ] = _PydanticField(alias="primarySubcategoryOne", default=None)
    primary_subcategory_two: typing.Optional[
        AppInfoRelationshipsPrimarySubcategoryTwo
    ] = _PydanticField(alias="primarySubcategoryTwo", default=None)
    secondary_category: typing.Optional[AppInfoRelationshipsSecondaryCategory] = (
        _PydanticField(alias="secondaryCategory", default=None)
    )
    secondary_subcategory_one: typing.Optional[
        AppInfoRelationshipsSecondarySubcategoryOne
    ] = _PydanticField(alias="secondarySubcategoryOne", default=None)
    secondary_subcategory_two: typing.Optional[
        AppInfoRelationshipsSecondarySubcategoryTwo
    ] = _PydanticField(alias="secondarySubcategoryTwo", default=None)


class AppClipRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[AppClipRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_clip_default_experiences: typing.Optional[
        AppClipRelationshipsAppClipDefaultExperiences
    ] = _PydanticField(alias="appClipDefaultExperiences", default=None)


class EndUserLicenseAgreementRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[EndUserLicenseAgreementRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    territories: typing.Optional[EndUserLicenseAgreementRelationshipsTerritories] = (
        _PydanticField(alias="territories", default=None)
    )


class AppPreOrderRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[AppPreOrderRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )


class InAppPurchaseRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    apps: typing.Optional[InAppPurchaseRelationshipsApps] = _PydanticField(
        alias="apps", default=None
    )


class SubscriptionGroupRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    subscription_group_localizations: typing.Optional[
        SubscriptionGroupRelationshipsSubscriptionGroupLocalizations
    ] = _PydanticField(alias="subscriptionGroupLocalizations", default=None)
    subscriptions: typing.Optional[SubscriptionGroupRelationshipsSubscriptions] = (
        _PydanticField(alias="subscriptions", default=None)
    )


class GameCenterEnabledVersionRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[GameCenterEnabledVersionRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    compatible_versions: typing.Optional[
        GameCenterEnabledVersionRelationshipsCompatibleVersions
    ] = _PydanticField(alias="compatibleVersions", default=None)


class AppCustomProductPageRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[AppCustomProductPageRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_custom_product_page_versions: typing.Optional[
        AppCustomProductPageRelationshipsAppCustomProductPageVersions
    ] = _PydanticField(alias="appCustomProductPageVersions", default=None)


class InAppPurchaseV2Relationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_store_review_screenshot: typing.Optional[
        InAppPurchaseV2RelationshipsAppStoreReviewScreenshot
    ] = _PydanticField(alias="appStoreReviewScreenshot", default=None)
    content: typing.Optional[InAppPurchaseV2RelationshipsContent] = _PydanticField(
        alias="content", default=None
    )
    iap_price_schedule: typing.Optional[
        InAppPurchaseV2RelationshipsIapPriceSchedule
    ] = _PydanticField(alias="iapPriceSchedule", default=None)
    in_app_purchase_availability: typing.Optional[
        InAppPurchaseV2RelationshipsInAppPurchaseAvailability
    ] = _PydanticField(alias="inAppPurchaseAvailability", default=None)
    in_app_purchase_localizations: typing.Optional[
        InAppPurchaseV2RelationshipsInAppPurchaseLocalizations
    ] = _PydanticField(alias="inAppPurchaseLocalizations", default=None)
    price_points: typing.Optional[InAppPurchaseV2RelationshipsPricePoints] = (
        _PydanticField(alias="pricePoints", default=None)
    )
    promoted_purchase: typing.Optional[InAppPurchaseV2RelationshipsPromotedPurchase] = (
        _PydanticField(alias="promotedPurchase", default=None)
    )


class PromotedPurchaseRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    in_app_purchase_v2: typing.Optional[
        PromotedPurchaseRelationshipsInAppPurchaseV2
    ] = _PydanticField(alias="inAppPurchaseV2", default=None)
    promotion_images: typing.Optional[PromotedPurchaseRelationshipsPromotionImages] = (
        _PydanticField(alias="promotionImages", default=None)
    )
    subscription: typing.Optional[PromotedPurchaseRelationshipsSubscription] = (
        _PydanticField(alias="subscription", default=None)
    )


class AppEventRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    localizations: typing.Optional[AppEventRelationshipsLocalizations] = _PydanticField(
        alias="localizations", default=None
    )


class ReviewSubmissionRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[ReviewSubmissionRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_store_version_for_review: typing.Optional[
        ReviewSubmissionRelationshipsAppStoreVersionForReview
    ] = _PydanticField(alias="appStoreVersionForReview", default=None)
    items: typing.Optional[ReviewSubmissionRelationshipsItems] = _PydanticField(
        alias="items", default=None
    )
    last_updated_by_actor: typing.Optional[
        ReviewSubmissionRelationshipsLastUpdatedByActor
    ] = _PydanticField(alias="lastUpdatedByActor", default=None)
    submitted_by_actor: typing.Optional[
        ReviewSubmissionRelationshipsSubmittedByActor
    ] = _PydanticField(alias="submittedByActor", default=None)


class GameCenterDetailRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    achievement_releases: typing.Optional[
        GameCenterDetailRelationshipsAchievementReleases
    ] = _PydanticField(alias="achievementReleases", default=None)
    app: typing.Optional[GameCenterDetailRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    default_group_leaderboard: typing.Optional[
        GameCenterDetailRelationshipsDefaultGroupLeaderboard
    ] = _PydanticField(alias="defaultGroupLeaderboard", default=None)
    default_leaderboard: typing.Optional[
        GameCenterDetailRelationshipsDefaultLeaderboard
    ] = _PydanticField(alias="defaultLeaderboard", default=None)
    game_center_achievements: typing.Optional[
        GameCenterDetailRelationshipsGameCenterAchievements
    ] = _PydanticField(alias="gameCenterAchievements", default=None)
    game_center_app_versions: typing.Optional[
        GameCenterDetailRelationshipsGameCenterAppVersions
    ] = _PydanticField(alias="gameCenterAppVersions", default=None)
    game_center_group: typing.Optional[GameCenterDetailRelationshipsGameCenterGroup] = (
        _PydanticField(alias="gameCenterGroup", default=None)
    )
    game_center_leaderboard_sets: typing.Optional[
        GameCenterDetailRelationshipsGameCenterLeaderboardSets
    ] = _PydanticField(alias="gameCenterLeaderboardSets", default=None)
    game_center_leaderboards: typing.Optional[
        GameCenterDetailRelationshipsGameCenterLeaderboards
    ] = _PydanticField(alias="gameCenterLeaderboards", default=None)
    leaderboard_releases: typing.Optional[
        GameCenterDetailRelationshipsLeaderboardReleases
    ] = _PydanticField(alias="leaderboardReleases", default=None)
    leaderboard_set_releases: typing.Optional[
        GameCenterDetailRelationshipsLeaderboardSetReleases
    ] = _PydanticField(alias="leaderboardSetReleases", default=None)


class AppStoreVersionExperimentV2Relationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[AppStoreVersionExperimentV2RelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_store_version_experiment_treatments: typing.Optional[
        AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments
    ] = _PydanticField(alias="appStoreVersionExperimentTreatments", default=None)
    control_versions: typing.Optional[
        AppStoreVersionExperimentV2RelationshipsControlVersions
    ] = _PydanticField(alias="controlVersions", default=None)
    latest_control_version: typing.Optional[
        AppStoreVersionExperimentV2RelationshipsLatestControlVersion
    ] = _PydanticField(alias="latestControlVersion", default=None)


class AppRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_clips: typing.Optional[AppRelationshipsAppClips] = _PydanticField(
        alias="appClips", default=None
    )
    app_custom_product_pages: typing.Optional[AppRelationshipsAppCustomProductPages] = (
        _PydanticField(alias="appCustomProductPages", default=None)
    )
    app_encryption_declarations: typing.Optional[
        AppRelationshipsAppEncryptionDeclarations
    ] = _PydanticField(alias="appEncryptionDeclarations", default=None)
    app_events: typing.Optional[AppRelationshipsAppEvents] = _PydanticField(
        alias="appEvents", default=None
    )
    app_infos: typing.Optional[AppRelationshipsAppInfos] = _PydanticField(
        alias="appInfos", default=None
    )
    app_store_version_experiments_v2: typing.Optional[
        AppRelationshipsAppStoreVersionExperimentsV2
    ] = _PydanticField(alias="appStoreVersionExperimentsV2", default=None)
    app_store_versions: typing.Optional[AppRelationshipsAppStoreVersions] = (
        _PydanticField(alias="appStoreVersions", default=None)
    )
    beta_app_localizations: typing.Optional[AppRelationshipsBetaAppLocalizations] = (
        _PydanticField(alias="betaAppLocalizations", default=None)
    )
    beta_app_review_detail: typing.Optional[AppRelationshipsBetaAppReviewDetail] = (
        _PydanticField(alias="betaAppReviewDetail", default=None)
    )
    beta_groups: typing.Optional[AppRelationshipsBetaGroups] = _PydanticField(
        alias="betaGroups", default=None
    )
    beta_license_agreement: typing.Optional[AppRelationshipsBetaLicenseAgreement] = (
        _PydanticField(alias="betaLicenseAgreement", default=None)
    )
    builds: typing.Optional[AppRelationshipsBuilds] = _PydanticField(
        alias="builds", default=None
    )
    ci_product: typing.Optional[AppRelationshipsCiProduct] = _PydanticField(
        alias="ciProduct", default=None
    )
    end_user_license_agreement: typing.Optional[
        AppRelationshipsEndUserLicenseAgreement
    ] = _PydanticField(alias="endUserLicenseAgreement", default=None)
    game_center_detail: typing.Optional[AppRelationshipsGameCenterDetail] = (
        _PydanticField(alias="gameCenterDetail", default=None)
    )
    game_center_enabled_versions: typing.Optional[
        AppRelationshipsGameCenterEnabledVersions
    ] = _PydanticField(alias="gameCenterEnabledVersions", default=None)
    in_app_purchases: typing.Optional[AppRelationshipsInAppPurchases] = _PydanticField(
        alias="inAppPurchases", default=None
    )
    in_app_purchases_v2: typing.Optional[AppRelationshipsInAppPurchasesV2] = (
        _PydanticField(alias="inAppPurchasesV2", default=None)
    )
    pre_order: typing.Optional[AppRelationshipsPreOrder] = _PydanticField(
        alias="preOrder", default=None
    )
    pre_release_versions: typing.Optional[AppRelationshipsPreReleaseVersions] = (
        _PydanticField(alias="preReleaseVersions", default=None)
    )
    promoted_purchases: typing.Optional[AppRelationshipsPromotedPurchases] = (
        _PydanticField(alias="promotedPurchases", default=None)
    )
    review_submissions: typing.Optional[AppRelationshipsReviewSubmissions] = (
        _PydanticField(alias="reviewSubmissions", default=None)
    )
    subscription_grace_period: typing.Optional[
        AppRelationshipsSubscriptionGracePeriod
    ] = _PydanticField(alias="subscriptionGracePeriod", default=None)
    subscription_groups: typing.Optional[AppRelationshipsSubscriptionGroups] = (
        _PydanticField(alias="subscriptionGroups", default=None)
    )


class AppEncryptionDeclaration(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppEncryptionDeclarationAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppEncryptionDeclarationRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["appEncryptionDeclarations"] = _PydanticField(
        alias="type"
    )


class CiProduct(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[CiProductAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[CiProductRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["ciProducts"] = _PydanticField(alias="type")


class BetaGroup(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BetaGroupAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BetaGroupRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["betaGroups"] = _PydanticField(alias="type")


class AppStoreVersion(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppStoreVersionAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppStoreVersionRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appStoreVersions"] = _PydanticField(alias="type")


class PrereleaseVersion(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[PrereleaseVersionAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[PrereleaseVersionRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["preReleaseVersions"] = _PydanticField(alias="type")


class BetaAppLocalization(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BetaAppLocalizationAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BetaAppLocalizationRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["betaAppLocalizations"] = _PydanticField(
        alias="type"
    )


class Build(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BuildAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BuildRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class BetaLicenseAgreement(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BetaLicenseAgreementAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BetaLicenseAgreementRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["betaLicenseAgreements"] = _PydanticField(
        alias="type"
    )


class BetaAppReviewDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BetaAppReviewDetailAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BetaAppReviewDetailRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["betaAppReviewDetails"] = _PydanticField(
        alias="type"
    )


class AppInfo(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppInfoAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppInfoRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appInfos"] = _PydanticField(alias="type")


class AppClip(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppClipAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppClipRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appClips"] = _PydanticField(alias="type")


class EndUserLicenseAgreement(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[EndUserLicenseAgreementAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[EndUserLicenseAgreementRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["endUserLicenseAgreements"] = _PydanticField(
        alias="type"
    )


class AppPreOrder(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppPreOrderAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppPreOrderRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appPreOrders"] = _PydanticField(alias="type")


class InAppPurchase(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[InAppPurchaseAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[InAppPurchaseRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["inAppPurchases"] = _PydanticField(alias="type")


class SubscriptionGroup(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionGroupAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionGroupRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["subscriptionGroups"] = _PydanticField(alias="type")


class GameCenterEnabledVersion(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[GameCenterEnabledVersionAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[GameCenterEnabledVersionRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["gameCenterEnabledVersions"] = _PydanticField(
        alias="type"
    )


class AppCustomProductPage(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppCustomProductPageAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppCustomProductPageRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appCustomProductPages"] = _PydanticField(
        alias="type"
    )


class InAppPurchaseV2(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[InAppPurchaseV2Attributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[InAppPurchaseV2Relationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["inAppPurchases"] = _PydanticField(alias="type")


class PromotedPurchase(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[PromotedPurchaseAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[PromotedPurchaseRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["promotedPurchases"] = _PydanticField(alias="type")


class AppEvent(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppEventAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppEventRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appEvents"] = _PydanticField(alias="type")


class ReviewSubmission(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[ReviewSubmissionAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[ReviewSubmissionRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["reviewSubmissions"] = _PydanticField(alias="type")


class GameCenterDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[GameCenterDetailAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[GameCenterDetailRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["gameCenterDetails"] = _PydanticField(alias="type")


class AppStoreVersionExperimentV2(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppStoreVersionExperimentV2Attributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppStoreVersionExperimentV2Relationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["appStoreVersionExperiments"] = _PydanticField(
        alias="type"
    )


class App(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: App = _PydanticField(alias="data")
    included: typing.Optional[
        typing.List[
            typing.Union[
                AppEncryptionDeclaration,
                CiProduct,
                BetaGroup,
                AppStoreVersion,
                PrereleaseVersion,
                BetaAppLocalization,
                Build,
                BetaLicenseAgreement,
                BetaAppReviewDetail,
                AppInfo,
                AppClip,
                EndUserLicenseAgreement,
                AppPreOrder,
                InAppPurchase,
                SubscriptionGroup,
                GameCenterEnabledVersion,
                AppCustomProductPage,
                InAppPurchaseV2,
                PromotedPurchase,
                AppEvent,
                ReviewSubmission,
                SubscriptionGracePeriod,
                GameCenterDetail,
                AppStoreVersionExperimentV2,
            ]
        ]
    ] = _PydanticField(alias="included", default=None)
    links: DocumentLinks = _PydanticField(alias="links")
