"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppStoreVersionExperimentTreatmentUpdateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    app_icon_name: typing_extensions.NotRequired[str]
    name: typing_extensions.NotRequired[str]


class _SerializerAppStoreVersionExperimentTreatmentUpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_icon_name: typing.Optional[str] = pydantic.Field(
        alias="appIconName", default=None
    )
    name: typing.Optional[str] = pydantic.Field(alias="name", default=None)


class AppStoreVersionExperimentTreatmentCreateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    app_icon_name: typing_extensions.NotRequired[str]
    name: typing_extensions.Required[str]


class _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_icon_name: typing.Optional[str] = pydantic.Field(
        alias="appIconName", default=None
    )
    name: str = pydantic.Field(alias="name")


class AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperiments"]
    ]


class _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentV2Data(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperiments"]
    ]


class _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentV2Data(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentV2Data handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionExperimentTreatmentUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppStoreVersionExperimentTreatmentUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperimentTreatments"]
    ]


class _SerializerAppStoreVersionExperimentTreatmentUpdateRequestData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppStoreVersionExperimentTreatmentUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperimentTreatments"] = (
        pydantic.Field(alias="type")
    )


class AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperiment(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentData
    ]


class _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperiment(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperiment handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentData = pydantic.Field(
        alias="data"
    )


class AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentV2(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentV2Data
    ]


class _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentV2(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentV2 handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentV2Data
    ] = pydantic.Field(alias="data", default=None)


class AppStoreVersionExperimentTreatmentUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppStoreVersionExperimentTreatmentUpdateRequestData
    ]


class _SerializerAppStoreVersionExperimentTreatmentUpdateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionExperimentTreatmentUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionExperimentTreatmentUpdateRequestData = (
        pydantic.Field(alias="data")
    )


class AppStoreVersionExperimentTreatmentCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    app_store_version_experiment: typing_extensions.Required[
        AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperiment
    ]
    app_store_version_experiment_v2: typing_extensions.NotRequired[
        AppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentV2
    ]


class _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_store_version_experiment: _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperiment = pydantic.Field(
        alias="appStoreVersionExperiment"
    )
    app_store_version_experiment_v2: typing.Optional[
        _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataRelationshipsAppStoreVersionExperimentV2
    ] = pydantic.Field(alias="appStoreVersionExperimentV2", default=None)


class AppStoreVersionExperimentTreatmentCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        AppStoreVersionExperimentTreatmentCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        AppStoreVersionExperimentTreatmentCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperimentTreatments"]
    ]


class _SerializerAppStoreVersionExperimentTreatmentCreateRequestData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentTreatmentCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataAttributes = pydantic.Field(
        alias="attributes"
    )
    relationships: _SerializerAppStoreVersionExperimentTreatmentCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["appStoreVersionExperimentTreatments"] = (
        pydantic.Field(alias="type")
    )


class AppStoreVersionExperimentTreatmentCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppStoreVersionExperimentTreatmentCreateRequestData
    ]


class _SerializerAppStoreVersionExperimentTreatmentCreateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionExperimentTreatmentCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionExperimentTreatmentCreateRequestData = (
        pydantic.Field(alias="data")
    )
