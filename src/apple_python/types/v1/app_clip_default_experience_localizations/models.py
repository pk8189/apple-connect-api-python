"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class AppClipDefaultExperienceLocalizationAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    locale_field: typing.Optional[str] = _PydanticField(alias="locale", default=None)
    subtitle: typing.Optional[str] = _PydanticField(alias="subtitle", default=None)


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppClipDefaultExperienceLocalizationRelationshipsAppClipDefaultExperienceData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipDefaultExperiences"] = _PydanticField(
        alias="type"
    )


class AppClipDefaultExperienceLocalizationRelationshipsAppClipDefaultExperienceLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppClipDefaultExperienceLocalizationRelationshipsAppClipHeaderImageData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipHeaderImages"] = _PydanticField(
        alias="type"
    )


class AppClipDefaultExperienceLocalizationRelationshipsAppClipHeaderImageLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppClipDefaultExperienceAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    action: typing.Optional[typing_extensions.Literal["OPEN", "VIEW", "PLAY"]] = (
        _PydanticField(alias="action", default=None)
    )


class AppClipDefaultExperienceRelationshipsAppClipData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClips"] = _PydanticField(alias="type")


class AppClipDefaultExperienceRelationshipsAppClipLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetailData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipAppStoreReviewDetails"] = _PydanticField(
        alias="type"
    )


class AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetailLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizationsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipDefaultExperienceLocalizations"] = (
        _PydanticField(alias="type")
    )


class AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizationsLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersionData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = _PydanticField(alias="type")


class AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersionLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppMediaStateError(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    code_field: typing.Optional[str] = _PydanticField(alias="code", default=None)
    description: typing.Optional[str] = _PydanticField(
        alias="description", default=None
    )


class ImageAsset(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    height: typing.Optional[int] = _PydanticField(alias="height", default=None)
    template_url: typing.Optional[str] = _PydanticField(
        alias="templateUrl", default=None
    )
    width: typing.Optional[int] = _PydanticField(alias="width", default=None)


class HttpHeader(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    value: typing.Optional[str] = _PydanticField(alias="value", default=None)


class AppClipHeaderImageRelationshipsAppClipDefaultExperienceLocalizationData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipDefaultExperienceLocalizations"] = (
        _PydanticField(alias="type")
    )


class AppClipHeaderImageRelationshipsAppClipDefaultExperienceLocalizationLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class DocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: str = _PydanticField(alias="self")


class AppClipDefaultExperienceLocalizationRelationshipsAppClipDefaultExperience(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppClipDefaultExperienceLocalizationRelationshipsAppClipDefaultExperienceData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppClipDefaultExperienceLocalizationRelationshipsAppClipDefaultExperienceLinks
    ] = _PydanticField(alias="links", default=None)


class AppClipDefaultExperienceLocalizationRelationshipsAppClipHeaderImage(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppClipDefaultExperienceLocalizationRelationshipsAppClipHeaderImageData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppClipDefaultExperienceLocalizationRelationshipsAppClipHeaderImageLinks
    ] = _PydanticField(alias="links", default=None)


class AppClipDefaultExperienceRelationshipsAppClip(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppClipDefaultExperienceRelationshipsAppClipData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppClipDefaultExperienceRelationshipsAppClipLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetail(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetailData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetailLinks
    ] = _PydanticField(alias="links", default=None)


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersionData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersionLinks
    ] = _PydanticField(alias="links", default=None)


class AppMediaAssetState(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    errors: typing.Optional[typing.List[AppMediaStateError]] = _PydanticField(
        alias="errors", default=None
    )
    state: typing.Optional[
        typing_extensions.Literal[
            "AWAITING_UPLOAD", "UPLOAD_COMPLETE", "COMPLETE", "FAILED"
        ]
    ] = _PydanticField(alias="state", default=None)
    warnings_field: typing.Optional[typing.List[AppMediaStateError]] = _PydanticField(
        alias="warnings", default=None
    )


class UploadOperation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    length: typing.Optional[int] = _PydanticField(alias="length", default=None)
    method: typing.Optional[str] = _PydanticField(alias="method", default=None)
    offset: typing.Optional[int] = _PydanticField(alias="offset", default=None)
    request_headers: typing.Optional[typing.List[HttpHeader]] = _PydanticField(
        alias="requestHeaders", default=None
    )
    url: typing.Optional[str] = _PydanticField(alias="url", default=None)


class AppClipHeaderImageRelationshipsAppClipDefaultExperienceLocalization(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppClipHeaderImageRelationshipsAppClipDefaultExperienceLocalizationData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppClipHeaderImageRelationshipsAppClipDefaultExperienceLocalizationLinks
    ] = _PydanticField(alias="links", default=None)


class AppClipDefaultExperienceLocalizationRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_clip_default_experience: typing.Optional[
        AppClipDefaultExperienceLocalizationRelationshipsAppClipDefaultExperience
    ] = _PydanticField(alias="appClipDefaultExperience", default=None)
    app_clip_header_image: typing.Optional[
        AppClipDefaultExperienceLocalizationRelationshipsAppClipHeaderImage
    ] = _PydanticField(alias="appClipHeaderImage", default=None)


class AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizations(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[
            AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizationsDataItem
        ]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizationsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppClipHeaderImageAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    asset_delivery_state: typing.Optional[AppMediaAssetState] = _PydanticField(
        alias="assetDeliveryState", default=None
    )
    file_name: typing.Optional[str] = _PydanticField(alias="fileName", default=None)
    file_size: typing.Optional[int] = _PydanticField(alias="fileSize", default=None)
    image_asset: typing.Optional[ImageAsset] = _PydanticField(
        alias="imageAsset", default=None
    )
    source_file_checksum: typing.Optional[str] = _PydanticField(
        alias="sourceFileChecksum", default=None
    )
    upload_operations: typing.Optional[typing.List[UploadOperation]] = _PydanticField(
        alias="uploadOperations", default=None
    )


class AppClipHeaderImageRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_clip_default_experience_localization: typing.Optional[
        AppClipHeaderImageRelationshipsAppClipDefaultExperienceLocalization
    ] = _PydanticField(alias="appClipDefaultExperienceLocalization", default=None)


class AppClipDefaultExperienceLocalization(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppClipDefaultExperienceLocalizationAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[
        AppClipDefaultExperienceLocalizationRelationships
    ] = _PydanticField(alias="relationships", default=None)
    type: typing_extensions.Literal["appClipDefaultExperienceLocalizations"] = (
        _PydanticField(alias="type")
    )


class AppClipDefaultExperienceRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_clip: typing.Optional[AppClipDefaultExperienceRelationshipsAppClip] = (
        _PydanticField(alias="appClip", default=None)
    )
    app_clip_app_store_review_detail: typing.Optional[
        AppClipDefaultExperienceRelationshipsAppClipAppStoreReviewDetail
    ] = _PydanticField(alias="appClipAppStoreReviewDetail", default=None)
    app_clip_default_experience_localizations: typing.Optional[
        AppClipDefaultExperienceRelationshipsAppClipDefaultExperienceLocalizations
    ] = _PydanticField(alias="appClipDefaultExperienceLocalizations", default=None)
    release_with_app_store_version: typing.Optional[
        AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion
    ] = _PydanticField(alias="releaseWithAppStoreVersion", default=None)


class AppClipHeaderImage(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppClipHeaderImageAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppClipHeaderImageRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appClipHeaderImages"] = _PydanticField(
        alias="type"
    )


class AppClipDefaultExperience(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppClipDefaultExperienceAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppClipDefaultExperienceRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["appClipDefaultExperiences"] = _PydanticField(
        alias="type"
    )


class AppClipDefaultExperienceLocalizationResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: AppClipDefaultExperienceLocalization = _PydanticField(alias="data")
    included: typing.Optional[
        typing.List[typing.Union[AppClipDefaultExperience, AppClipHeaderImage]]
    ] = _PydanticField(alias="included", default=None)
    links: DocumentLinks = _PydanticField(alias="links")
