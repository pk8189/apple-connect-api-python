"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class AppEncryptionDeclarationAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_description: typing.Optional[str] = _PydanticField(
        alias="appDescription", default=None
    )
    app_encryption_declaration_state: typing.Optional[
        typing_extensions.Literal[
            "CREATED", "IN_REVIEW", "APPROVED", "REJECTED", "INVALID", "EXPIRED"
        ]
    ] = _PydanticField(alias="appEncryptionDeclarationState", default=None)
    available_on_french_store: typing.Optional[bool] = _PydanticField(
        alias="availableOnFrenchStore", default=None
    )
    code_value: typing.Optional[str] = _PydanticField(alias="codeValue", default=None)
    contains_proprietary_cryptography: typing.Optional[bool] = _PydanticField(
        alias="containsProprietaryCryptography", default=None
    )
    contains_third_party_cryptography: typing.Optional[bool] = _PydanticField(
        alias="containsThirdPartyCryptography", default=None
    )
    created_date: typing.Optional[str] = _PydanticField(
        alias="createdDate", default=None
    )
    document_name: typing.Optional[str] = _PydanticField(
        alias="documentName", default=None
    )
    document_type: typing.Optional[str] = _PydanticField(
        alias="documentType", default=None
    )
    document_url: typing.Optional[str] = _PydanticField(
        alias="documentUrl", default=None
    )
    exempt: typing.Optional[bool] = _PydanticField(alias="exempt", default=None)
    platform_field: typing.Optional[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ] = _PydanticField(alias="platform", default=None)
    uploaded_date: typing.Optional[str] = _PydanticField(
        alias="uploadedDate", default=None
    )
    uses_encryption: typing.Optional[bool] = _PydanticField(
        alias="usesEncryption", default=None
    )


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEncryptionDeclarationRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppEncryptionDeclarationRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEncryptionDeclarationDocuments"] = (
        _PydanticField(alias="type")
    )


class AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEncryptionDeclarationRelationshipsBuildsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class AppEncryptionDeclarationRelationshipsBuildsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class DocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: str = _PydanticField(alias="self")


class AppEncryptionDeclarationRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppEncryptionDeclarationRelationshipsAppData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppEncryptionDeclarationRelationshipsAppLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocument(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentLinks
    ] = _PydanticField(alias="links", default=None)


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class AppEncryptionDeclarationRelationshipsBuilds(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppEncryptionDeclarationRelationshipsBuildsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppEncryptionDeclarationRelationshipsBuildsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppEncryptionDeclarationRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[AppEncryptionDeclarationRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_encryption_declaration_document: typing.Optional[
        AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocument
    ] = _PydanticField(alias="appEncryptionDeclarationDocument", default=None)
    builds: typing.Optional[AppEncryptionDeclarationRelationshipsBuilds] = (
        _PydanticField(alias="builds", default=None)
    )


class AppEncryptionDeclaration(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppEncryptionDeclarationAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppEncryptionDeclarationRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["appEncryptionDeclarations"] = _PydanticField(
        alias="type"
    )


class AppEncryptionDeclarationWithoutIncludesResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: AppEncryptionDeclaration = _PydanticField(alias="data")
    links: DocumentLinks = _PydanticField(alias="links")
