"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class InAppPurchaseLocalizationUpdateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    description: typing_extensions.NotRequired[str]
    name: typing_extensions.NotRequired[str]


class _SerializerInAppPurchaseLocalizationUpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchaseLocalizationUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    description: typing.Optional[str] = pydantic.Field(
        alias="description", default=None
    )
    name: typing.Optional[str] = pydantic.Field(alias="name", default=None)


class InAppPurchaseLocalizationCreateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    description: typing_extensions.NotRequired[str]
    locale_field: typing_extensions.Required[str]
    name: typing_extensions.Required[str]


class _SerializerInAppPurchaseLocalizationCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchaseLocalizationCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    description: typing.Optional[str] = pydantic.Field(
        alias="description", default=None
    )
    locale_field: str = pydantic.Field(alias="locale")
    name: str = pydantic.Field(alias="name")


class InAppPurchaseLocalizationCreateRequestDataRelationshipsInAppPurchaseV2Data(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["inAppPurchases"]]


class _SerializerInAppPurchaseLocalizationCreateRequestDataRelationshipsInAppPurchaseV2Data(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchaseLocalizationCreateRequestDataRelationshipsInAppPurchaseV2Data handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["inAppPurchases"] = pydantic.Field(alias="type")


class InAppPurchaseLocalizationUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        InAppPurchaseLocalizationUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["inAppPurchaseLocalizations"]
    ]


class _SerializerInAppPurchaseLocalizationUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for InAppPurchaseLocalizationUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerInAppPurchaseLocalizationUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["inAppPurchaseLocalizations"] = pydantic.Field(
        alias="type"
    )


class InAppPurchaseLocalizationCreateRequestDataRelationshipsInAppPurchaseV2(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        InAppPurchaseLocalizationCreateRequestDataRelationshipsInAppPurchaseV2Data
    ]


class _SerializerInAppPurchaseLocalizationCreateRequestDataRelationshipsInAppPurchaseV2(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchaseLocalizationCreateRequestDataRelationshipsInAppPurchaseV2 handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerInAppPurchaseLocalizationCreateRequestDataRelationshipsInAppPurchaseV2Data = pydantic.Field(
        alias="data"
    )


class InAppPurchaseLocalizationUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[InAppPurchaseLocalizationUpdateRequestData]


class _SerializerInAppPurchaseLocalizationUpdateRequest(pydantic.BaseModel):
    """
    Serializer for InAppPurchaseLocalizationUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerInAppPurchaseLocalizationUpdateRequestData = pydantic.Field(
        alias="data"
    )


class InAppPurchaseLocalizationCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    in_app_purchase_v2: typing_extensions.Required[
        InAppPurchaseLocalizationCreateRequestDataRelationshipsInAppPurchaseV2
    ]


class _SerializerInAppPurchaseLocalizationCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchaseLocalizationCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    in_app_purchase_v2: _SerializerInAppPurchaseLocalizationCreateRequestDataRelationshipsInAppPurchaseV2 = pydantic.Field(
        alias="inAppPurchaseV2"
    )


class InAppPurchaseLocalizationCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        InAppPurchaseLocalizationCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        InAppPurchaseLocalizationCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["inAppPurchaseLocalizations"]
    ]


class _SerializerInAppPurchaseLocalizationCreateRequestData(pydantic.BaseModel):
    """
    Serializer for InAppPurchaseLocalizationCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerInAppPurchaseLocalizationCreateRequestDataAttributes = (
        pydantic.Field(alias="attributes")
    )
    relationships: _SerializerInAppPurchaseLocalizationCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["inAppPurchaseLocalizations"] = pydantic.Field(
        alias="type"
    )


class InAppPurchaseLocalizationCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[InAppPurchaseLocalizationCreateRequestData]


class _SerializerInAppPurchaseLocalizationCreateRequest(pydantic.BaseModel):
    """
    Serializer for InAppPurchaseLocalizationCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerInAppPurchaseLocalizationCreateRequestData = pydantic.Field(
        alias="data"
    )
