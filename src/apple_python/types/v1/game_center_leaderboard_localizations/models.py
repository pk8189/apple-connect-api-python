"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class GameCenterLeaderboardLocalizationAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    formatter_override: typing.Optional[
        typing_extensions.Literal[
            "INTEGER",
            "DECIMAL_POINT_1_PLACE",
            "DECIMAL_POINT_2_PLACE",
            "DECIMAL_POINT_3_PLACE",
            "ELAPSED_TIME_MILLISECOND",
            "ELAPSED_TIME_CENTISECOND",
            "ELAPSED_TIME_MINUTE",
            "ELAPSED_TIME_SECOND",
            "MONEY_POUND_DECIMAL",
            "MONEY_POUND",
            "MONEY_DOLLAR_DECIMAL",
            "MONEY_DOLLAR",
            "MONEY_EURO_DECIMAL",
            "MONEY_EURO",
            "MONEY_FRANC_DECIMAL",
            "MONEY_FRANC",
            "MONEY_KRONER_DECIMAL",
            "MONEY_KRONER",
            "MONEY_YEN",
        ]
    ] = _PydanticField(alias="formatterOverride", default=None)
    formatter_suffix: typing.Optional[str] = _PydanticField(
        alias="formatterSuffix", default=None
    )
    formatter_suffix_singular: typing.Optional[str] = _PydanticField(
        alias="formatterSuffixSingular", default=None
    )
    locale_field: typing.Optional[str] = _PydanticField(alias="locale", default=None)
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboardData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboards"] = _PydanticField(
        alias="type"
    )


class GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboardLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboardImageData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardImages"] = _PydanticField(
        alias="type"
    )


class GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboardImageLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterLeaderboardAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    archived: typing.Optional[bool] = _PydanticField(alias="archived", default=None)
    default_formatter: typing.Optional[
        typing_extensions.Literal[
            "INTEGER",
            "DECIMAL_POINT_1_PLACE",
            "DECIMAL_POINT_2_PLACE",
            "DECIMAL_POINT_3_PLACE",
            "ELAPSED_TIME_MILLISECOND",
            "ELAPSED_TIME_CENTISECOND",
            "ELAPSED_TIME_MINUTE",
            "ELAPSED_TIME_SECOND",
            "MONEY_POUND_DECIMAL",
            "MONEY_POUND",
            "MONEY_DOLLAR_DECIMAL",
            "MONEY_DOLLAR",
            "MONEY_EURO_DECIMAL",
            "MONEY_EURO",
            "MONEY_FRANC_DECIMAL",
            "MONEY_FRANC",
            "MONEY_KRONER_DECIMAL",
            "MONEY_KRONER",
            "MONEY_YEN",
        ]
    ] = _PydanticField(alias="defaultFormatter", default=None)
    recurrence_duration: typing.Optional[str] = _PydanticField(
        alias="recurrenceDuration", default=None
    )
    recurrence_rule: typing.Optional[str] = _PydanticField(
        alias="recurrenceRule", default=None
    )
    recurrence_start_date: typing.Optional[str] = _PydanticField(
        alias="recurrenceStartDate", default=None
    )
    reference_name: typing.Optional[str] = _PydanticField(
        alias="referenceName", default=None
    )
    score_range_end: typing.Optional[str] = _PydanticField(
        alias="scoreRangeEnd", default=None
    )
    score_range_start: typing.Optional[str] = _PydanticField(
        alias="scoreRangeStart", default=None
    )
    score_sort_type: typing.Optional[typing_extensions.Literal["ASC", "DESC"]] = (
        _PydanticField(alias="scoreSortType", default=None)
    )
    submission_type: typing.Optional[
        typing_extensions.Literal["BEST_SCORE", "MOST_RECENT_SCORE"]
    ] = _PydanticField(alias="submissionType", default=None)
    vendor_identifier: typing.Optional[str] = _PydanticField(
        alias="vendorIdentifier", default=None
    )


class GameCenterLeaderboardRelationshipsGameCenterDetailData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterDetails"] = _PydanticField(alias="type")


class GameCenterLeaderboardRelationshipsGameCenterDetailLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterLeaderboardRelationshipsGameCenterGroupData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterGroups"] = _PydanticField(alias="type")


class GameCenterLeaderboardRelationshipsGameCenterGroupLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterLeaderboardRelationshipsGameCenterLeaderboardSetsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardSets"] = _PydanticField(
        alias="type"
    )


class GameCenterLeaderboardRelationshipsGameCenterLeaderboardSetsLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class GameCenterLeaderboardRelationshipsGroupLeaderboardData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboards"] = _PydanticField(
        alias="type"
    )


class GameCenterLeaderboardRelationshipsGroupLeaderboardLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterLeaderboardRelationshipsLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardLocalizations"] = (
        _PydanticField(alias="type")
    )


class GameCenterLeaderboardRelationshipsLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterLeaderboardRelationshipsReleasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardReleases"] = _PydanticField(
        alias="type"
    )


class GameCenterLeaderboardRelationshipsReleasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppMediaStateError(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    code_field: typing.Optional[str] = _PydanticField(alias="code", default=None)
    description: typing.Optional[str] = _PydanticField(
        alias="description", default=None
    )


class ImageAsset(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    height: typing.Optional[int] = _PydanticField(alias="height", default=None)
    template_url: typing.Optional[str] = _PydanticField(
        alias="templateUrl", default=None
    )
    width: typing.Optional[int] = _PydanticField(alias="width", default=None)


class HttpHeader(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    value: typing.Optional[str] = _PydanticField(alias="value", default=None)


class GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardLocalizations"] = (
        _PydanticField(alias="type")
    )


class GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class DocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: str = _PydanticField(alias="self")


class GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboard(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboardData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboardLinks
    ] = _PydanticField(alias="links", default=None)


class GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboardImage(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboardImageData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboardImageLinks
    ] = _PydanticField(alias="links", default=None)


class GameCenterLeaderboardRelationshipsGameCenterDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterLeaderboardRelationshipsGameCenterDetailData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[GameCenterLeaderboardRelationshipsGameCenterDetailLinks] = (
        _PydanticField(alias="links", default=None)
    )


class GameCenterLeaderboardRelationshipsGameCenterGroup(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterLeaderboardRelationshipsGameCenterGroupData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[GameCenterLeaderboardRelationshipsGameCenterGroupLinks] = (
        _PydanticField(alias="links", default=None)
    )


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class GameCenterLeaderboardRelationshipsGroupLeaderboard(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterLeaderboardRelationshipsGroupLeaderboardData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[GameCenterLeaderboardRelationshipsGroupLeaderboardLinks] = (
        _PydanticField(alias="links", default=None)
    )


class GameCenterLeaderboardRelationshipsLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterLeaderboardRelationshipsLocalizationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterLeaderboardRelationshipsLocalizationsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterLeaderboardRelationshipsReleases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterLeaderboardRelationshipsReleasesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterLeaderboardRelationshipsReleasesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppMediaAssetState(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    errors: typing.Optional[typing.List[AppMediaStateError]] = _PydanticField(
        alias="errors", default=None
    )
    state: typing.Optional[
        typing_extensions.Literal[
            "AWAITING_UPLOAD", "UPLOAD_COMPLETE", "COMPLETE", "FAILED"
        ]
    ] = _PydanticField(alias="state", default=None)
    warnings_field: typing.Optional[typing.List[AppMediaStateError]] = _PydanticField(
        alias="warnings", default=None
    )


class UploadOperation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    length: typing.Optional[int] = _PydanticField(alias="length", default=None)
    method: typing.Optional[str] = _PydanticField(alias="method", default=None)
    offset: typing.Optional[int] = _PydanticField(alias="offset", default=None)
    request_headers: typing.Optional[typing.List[HttpHeader]] = _PydanticField(
        alias="requestHeaders", default=None
    )
    url: typing.Optional[str] = _PydanticField(alias="url", default=None)


class GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalizationLinks
    ] = _PydanticField(alias="links", default=None)


class GameCenterLeaderboardLocalizationRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    game_center_leaderboard: typing.Optional[
        GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboard
    ] = _PydanticField(alias="gameCenterLeaderboard", default=None)
    game_center_leaderboard_image: typing.Optional[
        GameCenterLeaderboardLocalizationRelationshipsGameCenterLeaderboardImage
    ] = _PydanticField(alias="gameCenterLeaderboardImage", default=None)


class GameCenterLeaderboardRelationshipsGameCenterLeaderboardSets(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterLeaderboardRelationshipsGameCenterLeaderboardSetsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        GameCenterLeaderboardRelationshipsGameCenterLeaderboardSetsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterLeaderboardImageAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    asset_delivery_state: typing.Optional[AppMediaAssetState] = _PydanticField(
        alias="assetDeliveryState", default=None
    )
    file_name: typing.Optional[str] = _PydanticField(alias="fileName", default=None)
    file_size: typing.Optional[int] = _PydanticField(alias="fileSize", default=None)
    image_asset: typing.Optional[ImageAsset] = _PydanticField(
        alias="imageAsset", default=None
    )
    upload_operations: typing.Optional[typing.List[UploadOperation]] = _PydanticField(
        alias="uploadOperations", default=None
    )


class GameCenterLeaderboardImageRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    game_center_leaderboard_localization: typing.Optional[
        GameCenterLeaderboardImageRelationshipsGameCenterLeaderboardLocalization
    ] = _PydanticField(alias="gameCenterLeaderboardLocalization", default=None)


class GameCenterLeaderboardLocalization(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[GameCenterLeaderboardLocalizationAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[GameCenterLeaderboardLocalizationRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["gameCenterLeaderboardLocalizations"] = (
        _PydanticField(alias="type")
    )


class GameCenterLeaderboardRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    game_center_detail: typing.Optional[
        GameCenterLeaderboardRelationshipsGameCenterDetail
    ] = _PydanticField(alias="gameCenterDetail", default=None)
    game_center_group: typing.Optional[
        GameCenterLeaderboardRelationshipsGameCenterGroup
    ] = _PydanticField(alias="gameCenterGroup", default=None)
    game_center_leaderboard_sets: typing.Optional[
        GameCenterLeaderboardRelationshipsGameCenterLeaderboardSets
    ] = _PydanticField(alias="gameCenterLeaderboardSets", default=None)
    group_leaderboard: typing.Optional[
        GameCenterLeaderboardRelationshipsGroupLeaderboard
    ] = _PydanticField(alias="groupLeaderboard", default=None)
    localizations: typing.Optional[GameCenterLeaderboardRelationshipsLocalizations] = (
        _PydanticField(alias="localizations", default=None)
    )
    releases: typing.Optional[GameCenterLeaderboardRelationshipsReleases] = (
        _PydanticField(alias="releases", default=None)
    )


class GameCenterLeaderboardImage(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[GameCenterLeaderboardImageAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[GameCenterLeaderboardImageRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["gameCenterLeaderboardImages"] = _PydanticField(
        alias="type"
    )


class GameCenterLeaderboard(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[GameCenterLeaderboardAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[GameCenterLeaderboardRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["gameCenterLeaderboards"] = _PydanticField(
        alias="type"
    )


class GameCenterLeaderboardLocalizationResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: GameCenterLeaderboardLocalization = _PydanticField(alias="data")
    included: typing.Optional[
        typing.List[typing.Union[GameCenterLeaderboard, GameCenterLeaderboardImage]]
    ] = _PydanticField(alias="included", default=None)
    links: DocumentLinks = _PydanticField(alias="links")
