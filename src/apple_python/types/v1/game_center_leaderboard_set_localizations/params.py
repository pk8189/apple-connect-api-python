"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class GameCenterLeaderboardSetLocalizationUpdateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    name: typing_extensions.NotRequired[str]


class _SerializerGameCenterLeaderboardSetLocalizationUpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetLocalizationUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    name: typing.Optional[str] = pydantic.Field(alias="name", default=None)


class GameCenterLeaderboardSetLocalizationCreateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    locale_field: typing_extensions.Required[str]
    name: typing_extensions.Required[str]


class _SerializerGameCenterLeaderboardSetLocalizationCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetLocalizationCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    locale_field: str = pydantic.Field(alias="locale")
    name: str = pydantic.Field(alias="name")


class GameCenterLeaderboardSetLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSetData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboardSets"]
    ]


class _SerializerGameCenterLeaderboardSetLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSetData(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSetData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardSets"] = pydantic.Field(
        alias="type"
    )


class GameCenterLeaderboardSetLocalizationUpdateRequestData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        GameCenterLeaderboardSetLocalizationUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboardSetLocalizations"]
    ]


class _SerializerGameCenterLeaderboardSetLocalizationUpdateRequestData(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetLocalizationUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerGameCenterLeaderboardSetLocalizationUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardSetLocalizations"] = (
        pydantic.Field(alias="type")
    )


class GameCenterLeaderboardSetLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSet(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        GameCenterLeaderboardSetLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSetData
    ]


class _SerializerGameCenterLeaderboardSetLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSet(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSet handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardSetLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSetData = pydantic.Field(
        alias="data"
    )


class GameCenterLeaderboardSetLocalizationUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[
        GameCenterLeaderboardSetLocalizationUpdateRequestData
    ]


class _SerializerGameCenterLeaderboardSetLocalizationUpdateRequest(pydantic.BaseModel):
    """
    Serializer for GameCenterLeaderboardSetLocalizationUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardSetLocalizationUpdateRequestData = (
        pydantic.Field(alias="data")
    )


class GameCenterLeaderboardSetLocalizationCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    game_center_leaderboard_set: typing_extensions.Required[
        GameCenterLeaderboardSetLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSet
    ]


class _SerializerGameCenterLeaderboardSetLocalizationCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetLocalizationCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    game_center_leaderboard_set: _SerializerGameCenterLeaderboardSetLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSet = pydantic.Field(
        alias="gameCenterLeaderboardSet"
    )


class GameCenterLeaderboardSetLocalizationCreateRequestData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        GameCenterLeaderboardSetLocalizationCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        GameCenterLeaderboardSetLocalizationCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboardSetLocalizations"]
    ]


class _SerializerGameCenterLeaderboardSetLocalizationCreateRequestData(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetLocalizationCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerGameCenterLeaderboardSetLocalizationCreateRequestDataAttributes = pydantic.Field(
        alias="attributes"
    )
    relationships: _SerializerGameCenterLeaderboardSetLocalizationCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["gameCenterLeaderboardSetLocalizations"] = (
        pydantic.Field(alias="type")
    )


class GameCenterLeaderboardSetLocalizationCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[
        GameCenterLeaderboardSetLocalizationCreateRequestData
    ]


class _SerializerGameCenterLeaderboardSetLocalizationCreateRequest(pydantic.BaseModel):
    """
    Serializer for GameCenterLeaderboardSetLocalizationCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardSetLocalizationCreateRequestData = (
        pydantic.Field(alias="data")
    )
