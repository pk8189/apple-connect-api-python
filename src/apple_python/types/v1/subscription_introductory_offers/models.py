"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class SubscriptionIntroductoryOfferAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    duration: typing.Optional[
        typing_extensions.Literal[
            "ONE_DAY",
            "THREE_DAYS",
            "ONE_WEEK",
            "TWO_WEEKS",
            "ONE_MONTH",
            "TWO_MONTHS",
            "THREE_MONTHS",
            "SIX_MONTHS",
            "ONE_YEAR",
        ]
    ] = _PydanticField(alias="duration", default=None)
    end_date: typing.Optional[str] = _PydanticField(alias="endDate", default=None)
    number_of_periods: typing.Optional[int] = _PydanticField(
        alias="numberOfPeriods", default=None
    )
    offer_mode: typing.Optional[
        typing_extensions.Literal["PAY_AS_YOU_GO", "PAY_UP_FRONT", "FREE_TRIAL"]
    ] = _PydanticField(alias="offerMode", default=None)
    start_date: typing.Optional[str] = _PydanticField(alias="startDate", default=None)


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionIntroductoryOfferRelationshipsSubscriptionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionIntroductoryOfferRelationshipsSubscriptionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePointData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionPricePoints"] = _PydanticField(
        alias="type"
    )


class SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePointLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionIntroductoryOfferRelationshipsTerritoryData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["territories"] = _PydanticField(alias="type")


class SubscriptionIntroductoryOfferRelationshipsTerritoryLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    family_sharable: typing.Optional[bool] = _PydanticField(
        alias="familySharable", default=None
    )
    group_level: typing.Optional[int] = _PydanticField(alias="groupLevel", default=None)
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    product_id: typing.Optional[str] = _PydanticField(alias="productId", default=None)
    review_note: typing.Optional[str] = _PydanticField(alias="reviewNote", default=None)
    state: typing.Optional[
        typing_extensions.Literal[
            "MISSING_METADATA",
            "READY_TO_SUBMIT",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "DEVELOPER_ACTION_NEEDED",
            "PENDING_BINARY_APPROVAL",
            "APPROVED",
            "DEVELOPER_REMOVED_FROM_SALE",
            "REMOVED_FROM_SALE",
            "REJECTED",
        ]
    ] = _PydanticField(alias="state", default=None)
    subscription_period: typing.Optional[
        typing_extensions.Literal[
            "ONE_WEEK",
            "ONE_MONTH",
            "TWO_MONTHS",
            "THREE_MONTHS",
            "SIX_MONTHS",
            "ONE_YEAR",
        ]
    ] = _PydanticField(alias="subscriptionPeriod", default=None)


class SubscriptionRelationshipsAppStoreReviewScreenshotData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionAppStoreReviewScreenshots"] = (
        _PydanticField(alias="type")
    )


class SubscriptionRelationshipsAppStoreReviewScreenshotLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsGroupData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionGroups"] = _PydanticField(alias="type")


class SubscriptionRelationshipsGroupLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsIntroductoryOffersDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionIntroductoryOffers"] = _PydanticField(
        alias="type"
    )


class SubscriptionRelationshipsIntroductoryOffersLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class SubscriptionRelationshipsOfferCodesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionOfferCodes"] = _PydanticField(
        alias="type"
    )


class SubscriptionRelationshipsOfferCodesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsPricesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionPrices"] = _PydanticField(alias="type")


class SubscriptionRelationshipsPricesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsPromotedPurchaseData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["promotedPurchases"] = _PydanticField(alias="type")


class SubscriptionRelationshipsPromotedPurchaseLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsPromotionalOffersDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionPromotionalOffers"] = _PydanticField(
        alias="type"
    )


class SubscriptionRelationshipsPromotionalOffersLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsSubscriptionAvailabilityData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionAvailabilities"] = _PydanticField(
        alias="type"
    )


class SubscriptionRelationshipsSubscriptionAvailabilityLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsSubscriptionLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionLocalizations"] = _PydanticField(
        alias="type"
    )


class SubscriptionRelationshipsSubscriptionLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class TerritoryAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    currency: typing.Optional[str] = _PydanticField(alias="currency", default=None)


class SubscriptionPricePointAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    customer_price: typing.Optional[str] = _PydanticField(
        alias="customerPrice", default=None
    )
    proceeds: typing.Optional[str] = _PydanticField(alias="proceeds", default=None)
    proceeds_year2: typing.Optional[str] = _PydanticField(
        alias="proceedsYear2", default=None
    )


class SubscriptionPricePointRelationshipsTerritoryData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["territories"] = _PydanticField(alias="type")


class SubscriptionPricePointRelationshipsTerritoryLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class DocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: str = _PydanticField(alias="self")


class SubscriptionIntroductoryOfferRelationshipsSubscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscriptionData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscriptionLinks
    ] = _PydanticField(alias="links", default=None)


class SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePoint(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePointData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePointLinks
    ] = _PydanticField(alias="links", default=None)


class SubscriptionIntroductoryOfferRelationshipsTerritory(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionIntroductoryOfferRelationshipsTerritoryData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionIntroductoryOfferRelationshipsTerritoryLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionRelationshipsAppStoreReviewScreenshot(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionRelationshipsAppStoreReviewScreenshotData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionRelationshipsAppStoreReviewScreenshotLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionRelationshipsGroup(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionRelationshipsGroupData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[SubscriptionRelationshipsGroupLinks] = _PydanticField(
        alias="links", default=None
    )


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class SubscriptionRelationshipsOfferCodes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[SubscriptionRelationshipsOfferCodesDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionRelationshipsOfferCodesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionRelationshipsPrices(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[SubscriptionRelationshipsPricesDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionRelationshipsPricesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionRelationshipsPromotedPurchase(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionRelationshipsPromotedPurchaseData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionRelationshipsPromotedPurchaseLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionRelationshipsPromotionalOffers(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionRelationshipsPromotionalOffersDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionRelationshipsPromotionalOffersLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionRelationshipsSubscriptionAvailability(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionRelationshipsSubscriptionAvailabilityData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionRelationshipsSubscriptionAvailabilityLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionRelationshipsSubscriptionLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionRelationshipsSubscriptionLocalizationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionRelationshipsSubscriptionLocalizationsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class Territory(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[TerritoryAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    type: typing_extensions.Literal["territories"] = _PydanticField(alias="type")


class SubscriptionPricePointRelationshipsTerritory(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionPricePointRelationshipsTerritoryData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionPricePointRelationshipsTerritoryLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionIntroductoryOfferRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    subscription: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscription
    ] = _PydanticField(alias="subscription", default=None)
    subscription_price_point: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePoint
    ] = _PydanticField(alias="subscriptionPricePoint", default=None)
    territory: typing.Optional[SubscriptionIntroductoryOfferRelationshipsTerritory] = (
        _PydanticField(alias="territory", default=None)
    )


class SubscriptionRelationshipsIntroductoryOffers(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionRelationshipsIntroductoryOffersDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionRelationshipsIntroductoryOffersLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionPricePointRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    territory: typing.Optional[SubscriptionPricePointRelationshipsTerritory] = (
        _PydanticField(alias="territory", default=None)
    )


class SubscriptionIntroductoryOffer(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionIntroductoryOfferAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionIntroductoryOfferRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["subscriptionIntroductoryOffers"] = _PydanticField(
        alias="type"
    )


class SubscriptionRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_store_review_screenshot: typing.Optional[
        SubscriptionRelationshipsAppStoreReviewScreenshot
    ] = _PydanticField(alias="appStoreReviewScreenshot", default=None)
    group: typing.Optional[SubscriptionRelationshipsGroup] = _PydanticField(
        alias="group", default=None
    )
    introductory_offers: typing.Optional[
        SubscriptionRelationshipsIntroductoryOffers
    ] = _PydanticField(alias="introductoryOffers", default=None)
    offer_codes: typing.Optional[SubscriptionRelationshipsOfferCodes] = _PydanticField(
        alias="offerCodes", default=None
    )
    prices: typing.Optional[SubscriptionRelationshipsPrices] = _PydanticField(
        alias="prices", default=None
    )
    promoted_purchase: typing.Optional[SubscriptionRelationshipsPromotedPurchase] = (
        _PydanticField(alias="promotedPurchase", default=None)
    )
    promotional_offers: typing.Optional[SubscriptionRelationshipsPromotionalOffers] = (
        _PydanticField(alias="promotionalOffers", default=None)
    )
    subscription_availability: typing.Optional[
        SubscriptionRelationshipsSubscriptionAvailability
    ] = _PydanticField(alias="subscriptionAvailability", default=None)
    subscription_localizations: typing.Optional[
        SubscriptionRelationshipsSubscriptionLocalizations
    ] = _PydanticField(alias="subscriptionLocalizations", default=None)


class SubscriptionPricePoint(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionPricePointAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionPricePointRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["subscriptionPricePoints"] = _PydanticField(
        alias="type"
    )


class Subscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionIntroductoryOfferResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: SubscriptionIntroductoryOffer = _PydanticField(alias="data")
    included: typing.Optional[
        typing.List[typing.Union[Subscription, Territory, SubscriptionPricePoint]]
    ] = _PydanticField(alias="included", default=None)
    links: DocumentLinks = _PydanticField(alias="links")
