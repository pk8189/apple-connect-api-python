"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class AppClipAdvancedExperienceAttributesPlaceDisplayPointCoordinates(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    latitude: typing.Optional[float] = _PydanticField(alias="latitude", default=None)
    longitude: typing.Optional[float] = _PydanticField(alias="longitude", default=None)


class AppClipAdvancedExperienceAttributesPlaceMainAddressStructuredAddress(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    country_code: typing.Optional[str] = _PydanticField(
        alias="countryCode", default=None
    )
    floor: typing.Optional[str] = _PydanticField(alias="floor", default=None)
    locality: typing.Optional[str] = _PydanticField(alias="locality", default=None)
    neighborhood: typing.Optional[str] = _PydanticField(
        alias="neighborhood", default=None
    )
    postal_code: typing.Optional[str] = _PydanticField(alias="postalCode", default=None)
    state_province: typing.Optional[str] = _PydanticField(
        alias="stateProvince", default=None
    )
    street_address: typing.Optional[typing.List[str]] = _PydanticField(
        alias="streetAddress", default=None
    )


class AppClipAdvancedExperienceAttributesPlacePhoneNumber(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    intent: typing.Optional[str] = _PydanticField(alias="intent", default=None)
    number: typing.Optional[str] = _PydanticField(alias="number", default=None)
    type: typing.Optional[
        typing_extensions.Literal["FAX", "LANDLINE", "MOBILE", "TOLLFREE"]
    ] = _PydanticField(alias="type", default=None)


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppClipAdvancedExperienceRelationshipsAppClipData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClips"] = _PydanticField(alias="type")


class AppClipAdvancedExperienceRelationshipsAppClipLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppClipAdvancedExperienceRelationshipsHeaderImageData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipAdvancedExperienceImages"] = _PydanticField(
        alias="type"
    )


class AppClipAdvancedExperienceRelationshipsHeaderImageLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppClipAdvancedExperienceRelationshipsLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipAdvancedExperienceLocalizations"] = (
        _PydanticField(alias="type")
    )


class AppClipAdvancedExperienceRelationshipsLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class AppClipAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    bundle_id: typing.Optional[str] = _PydanticField(alias="bundleId", default=None)


class AppClipRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppClipRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppClipRelationshipsAppClipDefaultExperiencesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipDefaultExperiences"] = _PydanticField(
        alias="type"
    )


class AppClipRelationshipsAppClipDefaultExperiencesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppMediaStateError(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    code_field: typing.Optional[str] = _PydanticField(alias="code", default=None)
    description: typing.Optional[str] = _PydanticField(
        alias="description", default=None
    )


class ImageAsset(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    height: typing.Optional[int] = _PydanticField(alias="height", default=None)
    template_url: typing.Optional[str] = _PydanticField(
        alias="templateUrl", default=None
    )
    width: typing.Optional[int] = _PydanticField(alias="width", default=None)


class HttpHeader(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    value: typing.Optional[str] = _PydanticField(alias="value", default=None)


class AppClipAdvancedExperienceLocalizationAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    language: typing.Optional[
        typing_extensions.Literal[
            "AR",
            "CA",
            "CS",
            "DA",
            "DE",
            "EL",
            "EN",
            "ES",
            "FI",
            "FR",
            "HE",
            "HI",
            "HR",
            "HU",
            "ID",
            "IT",
            "JA",
            "KO",
            "MS",
            "NL",
            "NO",
            "PL",
            "PT",
            "RO",
            "RU",
            "SK",
            "SV",
            "TH",
            "TR",
            "UK",
            "VI",
            "ZH",
        ]
    ] = _PydanticField(alias="language", default=None)
    subtitle: typing.Optional[str] = _PydanticField(alias="subtitle", default=None)
    title: typing.Optional[str] = _PydanticField(alias="title", default=None)


class DocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: str = _PydanticField(alias="self")


class AppClipAdvancedExperienceAttributesPlaceDisplayPoint(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    coordinates: typing.Optional[
        AppClipAdvancedExperienceAttributesPlaceDisplayPointCoordinates
    ] = _PydanticField(alias="coordinates", default=None)
    source: typing.Optional[
        typing_extensions.Literal["CALCULATED", "MANUALLY_PLACED"]
    ] = _PydanticField(alias="source", default=None)


class AppClipAdvancedExperienceAttributesPlaceMainAddress(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    full_address: typing.Optional[str] = _PydanticField(
        alias="fullAddress", default=None
    )
    structured_address: typing.Optional[
        AppClipAdvancedExperienceAttributesPlaceMainAddressStructuredAddress
    ] = _PydanticField(alias="structuredAddress", default=None)


class AppClipAdvancedExperienceRelationshipsAppClip(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppClipAdvancedExperienceRelationshipsAppClipData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppClipAdvancedExperienceRelationshipsAppClipLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppClipAdvancedExperienceRelationshipsHeaderImage(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppClipAdvancedExperienceRelationshipsHeaderImageData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppClipAdvancedExperienceRelationshipsHeaderImageLinks] = (
        _PydanticField(alias="links", default=None)
    )


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class AppClipRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppClipRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppClipRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class AppClipRelationshipsAppClipDefaultExperiences(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppClipRelationshipsAppClipDefaultExperiencesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppClipRelationshipsAppClipDefaultExperiencesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppMediaAssetState(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    errors: typing.Optional[typing.List[AppMediaStateError]] = _PydanticField(
        alias="errors", default=None
    )
    state: typing.Optional[
        typing_extensions.Literal[
            "AWAITING_UPLOAD", "UPLOAD_COMPLETE", "COMPLETE", "FAILED"
        ]
    ] = _PydanticField(alias="state", default=None)
    warnings_field: typing.Optional[typing.List[AppMediaStateError]] = _PydanticField(
        alias="warnings", default=None
    )


class UploadOperation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    length: typing.Optional[int] = _PydanticField(alias="length", default=None)
    method: typing.Optional[str] = _PydanticField(alias="method", default=None)
    offset: typing.Optional[int] = _PydanticField(alias="offset", default=None)
    request_headers: typing.Optional[typing.List[HttpHeader]] = _PydanticField(
        alias="requestHeaders", default=None
    )
    url: typing.Optional[str] = _PydanticField(alias="url", default=None)


class AppClipAdvancedExperienceLocalization(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppClipAdvancedExperienceLocalizationAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    type: typing_extensions.Literal["appClipAdvancedExperienceLocalizations"] = (
        _PydanticField(alias="type")
    )


class AppClipAdvancedExperienceAttributesPlace(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    categories: typing.Optional[typing.List[str]] = _PydanticField(
        alias="categories", default=None
    )
    display_point: typing.Optional[
        AppClipAdvancedExperienceAttributesPlaceDisplayPoint
    ] = _PydanticField(alias="displayPoint", default=None)
    home_page: typing.Optional[str] = _PydanticField(alias="homePage", default=None)
    main_address: typing.Optional[
        AppClipAdvancedExperienceAttributesPlaceMainAddress
    ] = _PydanticField(alias="mainAddress", default=None)
    map_action: typing.Optional[
        typing_extensions.Literal[
            "BUY_TICKETS",
            "VIEW_AVAILABILITY",
            "VIEW_PRICING",
            "HOTEL_BOOK_ROOM",
            "PARKING_RESERVE_PARKING",
            "RESTAURANT_JOIN_WAITLIST",
            "RESTAURANT_ORDER_DELIVERY",
            "RESTAURANT_ORDER_FOOD",
            "RESTAURANT_ORDER_TAKEOUT",
            "RESTAURANT_RESERVATION",
            "SCHEDULE_APPOINTMENT",
            "RESTAURANT_VIEW_MENU",
            "THEATER_NOW_PLAYING",
        ]
    ] = _PydanticField(alias="mapAction", default=None)
    names: typing.Optional[typing.List[str]] = _PydanticField(
        alias="names", default=None
    )
    phone_number: typing.Optional[
        AppClipAdvancedExperienceAttributesPlacePhoneNumber
    ] = _PydanticField(alias="phoneNumber", default=None)
    place_id: typing.Optional[str] = _PydanticField(alias="placeId", default=None)
    relationship: typing.Optional[
        typing_extensions.Literal["OWNER", "AUTHORIZED", "OTHER"]
    ] = _PydanticField(alias="relationship", default=None)


class AppClipAdvancedExperienceRelationshipsLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppClipAdvancedExperienceRelationshipsLocalizationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppClipAdvancedExperienceRelationshipsLocalizationsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppClipRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[AppClipRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_clip_default_experiences: typing.Optional[
        AppClipRelationshipsAppClipDefaultExperiences
    ] = _PydanticField(alias="appClipDefaultExperiences", default=None)


class AppClipAdvancedExperienceImageAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    asset_delivery_state: typing.Optional[AppMediaAssetState] = _PydanticField(
        alias="assetDeliveryState", default=None
    )
    file_name: typing.Optional[str] = _PydanticField(alias="fileName", default=None)
    file_size: typing.Optional[int] = _PydanticField(alias="fileSize", default=None)
    image_asset: typing.Optional[ImageAsset] = _PydanticField(
        alias="imageAsset", default=None
    )
    source_file_checksum: typing.Optional[str] = _PydanticField(
        alias="sourceFileChecksum", default=None
    )
    upload_operations: typing.Optional[typing.List[UploadOperation]] = _PydanticField(
        alias="uploadOperations", default=None
    )


class AppClipAdvancedExperienceAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    action: typing.Optional[typing_extensions.Literal["OPEN", "VIEW", "PLAY"]] = (
        _PydanticField(alias="action", default=None)
    )
    business_category: typing.Optional[
        typing_extensions.Literal[
            "AUTOMOTIVE",
            "BEAUTY",
            "BIKES",
            "BOOKS",
            "CASINO",
            "EDUCATION",
            "EDUCATION_JAPAN",
            "ENTERTAINMENT",
            "EV_CHARGER",
            "FINANCIAL_USD",
            "FINANCIAL_CNY",
            "FINANCIAL_GBP",
            "FINANCIAL_JPY",
            "FINANCIAL_EUR",
            "FITNESS",
            "FOOD_AND_DRINK",
            "GAS",
            "GROCERY",
            "HEALTH_AND_MEDICAL",
            "HOTEL_AND_TRAVEL",
            "MUSIC",
            "PARKING",
            "PET_SERVICES",
            "PROFESSIONAL_SERVICES",
            "SHOPPING",
            "TICKETING",
            "TRANSIT",
        ]
    ] = _PydanticField(alias="businessCategory", default=None)
    default_language: typing.Optional[
        typing_extensions.Literal[
            "AR",
            "CA",
            "CS",
            "DA",
            "DE",
            "EL",
            "EN",
            "ES",
            "FI",
            "FR",
            "HE",
            "HI",
            "HR",
            "HU",
            "ID",
            "IT",
            "JA",
            "KO",
            "MS",
            "NL",
            "NO",
            "PL",
            "PT",
            "RO",
            "RU",
            "SK",
            "SV",
            "TH",
            "TR",
            "UK",
            "VI",
            "ZH",
        ]
    ] = _PydanticField(alias="defaultLanguage", default=None)
    is_powered_by: typing.Optional[bool] = _PydanticField(
        alias="isPoweredBy", default=None
    )
    link: typing.Optional[str] = _PydanticField(alias="link", default=None)
    place: typing.Optional[AppClipAdvancedExperienceAttributesPlace] = _PydanticField(
        alias="place", default=None
    )
    place_status: typing.Optional[
        typing_extensions.Literal["PENDING", "MATCHED", "NO_MATCH"]
    ] = _PydanticField(alias="placeStatus", default=None)
    status: typing.Optional[
        typing_extensions.Literal["RECEIVED", "DEACTIVATED", "APP_TRANSFER_IN_PROGRESS"]
    ] = _PydanticField(alias="status", default=None)
    version: typing.Optional[int] = _PydanticField(alias="version", default=None)


class AppClipAdvancedExperienceRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_clip: typing.Optional[AppClipAdvancedExperienceRelationshipsAppClip] = (
        _PydanticField(alias="appClip", default=None)
    )
    header_image: typing.Optional[AppClipAdvancedExperienceRelationshipsHeaderImage] = (
        _PydanticField(alias="headerImage", default=None)
    )
    localizations: typing.Optional[
        AppClipAdvancedExperienceRelationshipsLocalizations
    ] = _PydanticField(alias="localizations", default=None)


class AppClip(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppClipAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppClipRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appClips"] = _PydanticField(alias="type")


class AppClipAdvancedExperienceImage(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppClipAdvancedExperienceImageAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    type: typing_extensions.Literal["appClipAdvancedExperienceImages"] = _PydanticField(
        alias="type"
    )


class AppClipAdvancedExperience(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppClipAdvancedExperienceAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppClipAdvancedExperienceRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["appClipAdvancedExperiences"] = _PydanticField(
        alias="type"
    )


class AppClipAdvancedExperienceResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: AppClipAdvancedExperience = _PydanticField(alias="data")
    included: typing.Optional[
        typing.List[
            typing.Union[
                AppClip,
                AppClipAdvancedExperienceImage,
                AppClipAdvancedExperienceLocalization,
            ]
        ]
    ] = _PydanticField(alias="included", default=None)
    links: DocumentLinks = _PydanticField(alias="links")
