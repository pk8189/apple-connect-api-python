"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class InAppPurchasePriceScheduleCreateRequestDataRelationshipsBaseTerritoryData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["territories"]]


class _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsBaseTerritoryData(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchasePriceScheduleCreateRequestDataRelationshipsBaseTerritoryData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["territories"] = pydantic.Field(alias="type")


class InAppPurchasePriceScheduleCreateRequestDataRelationshipsInAppPurchaseData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["inAppPurchases"]]


class _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsInAppPurchaseData(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchasePriceScheduleCreateRequestDataRelationshipsInAppPurchaseData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["inAppPurchases"] = pydantic.Field(alias="type")


class InAppPurchasePriceScheduleCreateRequestDataRelationshipsManualPricesDataItem(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["inAppPurchasePrices"]]


class _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsManualPricesDataItem(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchasePriceScheduleCreateRequestDataRelationshipsManualPricesDataItem handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["inAppPurchasePrices"] = pydantic.Field(
        alias="type"
    )


class InAppPurchasePriceInlineCreateAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    end_date: typing_extensions.NotRequired[str]
    start_date: typing_extensions.NotRequired[str]


class _SerializerInAppPurchasePriceInlineCreateAttributes(pydantic.BaseModel):
    """
    Serializer for InAppPurchasePriceInlineCreateAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    end_date: typing.Optional[str] = pydantic.Field(alias="endDate", default=None)
    start_date: typing.Optional[str] = pydantic.Field(alias="startDate", default=None)


class InAppPurchasePriceInlineCreateRelationshipsInAppPurchasePricePointData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["inAppPurchasePricePoints"]
    ]


class _SerializerInAppPurchasePriceInlineCreateRelationshipsInAppPurchasePricePointData(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchasePriceInlineCreateRelationshipsInAppPurchasePricePointData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["inAppPurchasePricePoints"] = pydantic.Field(
        alias="type"
    )


class InAppPurchasePriceInlineCreateRelationshipsInAppPurchaseV2Data(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["inAppPurchases"]]


class _SerializerInAppPurchasePriceInlineCreateRelationshipsInAppPurchaseV2Data(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchasePriceInlineCreateRelationshipsInAppPurchaseV2Data handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["inAppPurchases"] = pydantic.Field(alias="type")


class TerritoryInlineCreate(typing_extensions.TypedDict):
    """
    No description specified
    """

    id: typing_extensions.NotRequired[str]
    type: typing_extensions.Required[typing_extensions.Literal["territories"]]


class _SerializerTerritoryInlineCreate(pydantic.BaseModel):
    """
    Serializer for TerritoryInlineCreate handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: typing.Optional[str] = pydantic.Field(alias="id", default=None)
    type: typing_extensions.Literal["territories"] = pydantic.Field(alias="type")


class InAppPurchasePriceScheduleCreateRequestDataRelationshipsBaseTerritory(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        InAppPurchasePriceScheduleCreateRequestDataRelationshipsBaseTerritoryData
    ]


class _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsBaseTerritory(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchasePriceScheduleCreateRequestDataRelationshipsBaseTerritory handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsBaseTerritoryData = pydantic.Field(
        alias="data"
    )


class InAppPurchasePriceScheduleCreateRequestDataRelationshipsInAppPurchase(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        InAppPurchasePriceScheduleCreateRequestDataRelationshipsInAppPurchaseData
    ]


class _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsInAppPurchase(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchasePriceScheduleCreateRequestDataRelationshipsInAppPurchase handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsInAppPurchaseData = pydantic.Field(
        alias="data"
    )


class InAppPurchasePriceScheduleCreateRequestDataRelationshipsManualPrices(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        typing.List[
            InAppPurchasePriceScheduleCreateRequestDataRelationshipsManualPricesDataItem
        ]
    ]


class _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsManualPrices(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchasePriceScheduleCreateRequestDataRelationshipsManualPrices handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.List[
        _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsManualPricesDataItem
    ] = pydantic.Field(alias="data")


class InAppPurchasePriceInlineCreateRelationshipsInAppPurchasePricePoint(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        InAppPurchasePriceInlineCreateRelationshipsInAppPurchasePricePointData
    ]


class _SerializerInAppPurchasePriceInlineCreateRelationshipsInAppPurchasePricePoint(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchasePriceInlineCreateRelationshipsInAppPurchasePricePoint handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerInAppPurchasePriceInlineCreateRelationshipsInAppPurchasePricePointData
    ] = pydantic.Field(alias="data", default=None)


class InAppPurchasePriceInlineCreateRelationshipsInAppPurchaseV2(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        InAppPurchasePriceInlineCreateRelationshipsInAppPurchaseV2Data
    ]


class _SerializerInAppPurchasePriceInlineCreateRelationshipsInAppPurchaseV2(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchasePriceInlineCreateRelationshipsInAppPurchaseV2 handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerInAppPurchasePriceInlineCreateRelationshipsInAppPurchaseV2Data
    ] = pydantic.Field(alias="data", default=None)


class InAppPurchasePriceScheduleCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    base_territory: typing_extensions.Required[
        InAppPurchasePriceScheduleCreateRequestDataRelationshipsBaseTerritory
    ]
    in_app_purchase: typing_extensions.Required[
        InAppPurchasePriceScheduleCreateRequestDataRelationshipsInAppPurchase
    ]
    manual_prices: typing_extensions.Required[
        InAppPurchasePriceScheduleCreateRequestDataRelationshipsManualPrices
    ]


class _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for InAppPurchasePriceScheduleCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    base_territory: _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsBaseTerritory = pydantic.Field(
        alias="baseTerritory"
    )
    in_app_purchase: _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsInAppPurchase = pydantic.Field(
        alias="inAppPurchase"
    )
    manual_prices: _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationshipsManualPrices = pydantic.Field(
        alias="manualPrices"
    )


class InAppPurchasePriceInlineCreateRelationships(typing_extensions.TypedDict):
    """
    No description specified
    """

    in_app_purchase_price_point: typing_extensions.NotRequired[
        InAppPurchasePriceInlineCreateRelationshipsInAppPurchasePricePoint
    ]
    in_app_purchase_v2: typing_extensions.NotRequired[
        InAppPurchasePriceInlineCreateRelationshipsInAppPurchaseV2
    ]


class _SerializerInAppPurchasePriceInlineCreateRelationships(pydantic.BaseModel):
    """
    Serializer for InAppPurchasePriceInlineCreateRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    in_app_purchase_price_point: typing.Optional[
        _SerializerInAppPurchasePriceInlineCreateRelationshipsInAppPurchasePricePoint
    ] = pydantic.Field(alias="inAppPurchasePricePoint", default=None)
    in_app_purchase_v2: typing.Optional[
        _SerializerInAppPurchasePriceInlineCreateRelationshipsInAppPurchaseV2
    ] = pydantic.Field(alias="inAppPurchaseV2", default=None)


class InAppPurchasePriceScheduleCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    relationships: typing_extensions.Required[
        InAppPurchasePriceScheduleCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["inAppPurchasePriceSchedules"]
    ]


class _SerializerInAppPurchasePriceScheduleCreateRequestData(pydantic.BaseModel):
    """
    Serializer for InAppPurchasePriceScheduleCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    relationships: _SerializerInAppPurchasePriceScheduleCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["inAppPurchasePriceSchedules"] = pydantic.Field(
        alias="type"
    )


class InAppPurchasePriceInlineCreate(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[InAppPurchasePriceInlineCreateAttributes]
    id: typing_extensions.NotRequired[str]
    relationships: typing_extensions.NotRequired[
        InAppPurchasePriceInlineCreateRelationships
    ]
    type: typing_extensions.Required[typing_extensions.Literal["inAppPurchasePrices"]]


class _SerializerInAppPurchasePriceInlineCreate(pydantic.BaseModel):
    """
    Serializer for InAppPurchasePriceInlineCreate handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[_SerializerInAppPurchasePriceInlineCreateAttributes] = (
        pydantic.Field(alias="attributes", default=None)
    )
    id: typing.Optional[str] = pydantic.Field(alias="id", default=None)
    relationships: typing.Optional[
        _SerializerInAppPurchasePriceInlineCreateRelationships
    ] = pydantic.Field(alias="relationships", default=None)
    type: typing_extensions.Literal["inAppPurchasePrices"] = pydantic.Field(
        alias="type"
    )


class InAppPurchasePriceScheduleCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[InAppPurchasePriceScheduleCreateRequestData]
    included: typing_extensions.NotRequired[
        typing.List[typing.Union[InAppPurchasePriceInlineCreate, TerritoryInlineCreate]]
    ]


class _SerializerInAppPurchasePriceScheduleCreateRequest(pydantic.BaseModel):
    """
    Serializer for InAppPurchasePriceScheduleCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerInAppPurchasePriceScheduleCreateRequestData = pydantic.Field(
        alias="data"
    )
    included: typing.Optional[
        typing.List[
            typing.Union[
                _SerializerInAppPurchasePriceInlineCreate,
                _SerializerTerritoryInlineCreate,
            ]
        ]
    ] = pydantic.Field(alias="included", default=None)
