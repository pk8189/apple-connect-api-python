"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class SubscriptionOfferCodeOneTimeUseCodeAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    active: typing.Optional[bool] = _PydanticField(alias="active", default=None)
    created_date: typing.Optional[str] = _PydanticField(
        alias="createdDate", default=None
    )
    expiration_date: typing.Optional[str] = _PydanticField(
        alias="expirationDate", default=None
    )
    number_of_codes: typing.Optional[int] = _PydanticField(
        alias="numberOfCodes", default=None
    )


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionOfferCodeOneTimeUseCodeRelationshipsOfferCodeData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionOfferCodes"] = _PydanticField(
        alias="type"
    )


class SubscriptionOfferCodeOneTimeUseCodeRelationshipsOfferCodeLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionOfferCodeAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    active: typing.Optional[bool] = _PydanticField(alias="active", default=None)
    customer_eligibilities: typing.Optional[
        typing.List[typing_extensions.Literal["NEW", "EXISTING", "EXPIRED"]]
    ] = _PydanticField(alias="customerEligibilities", default=None)
    duration: typing.Optional[
        typing_extensions.Literal[
            "ONE_DAY",
            "THREE_DAYS",
            "ONE_WEEK",
            "TWO_WEEKS",
            "ONE_MONTH",
            "TWO_MONTHS",
            "THREE_MONTHS",
            "SIX_MONTHS",
            "ONE_YEAR",
        ]
    ] = _PydanticField(alias="duration", default=None)
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    number_of_periods: typing.Optional[int] = _PydanticField(
        alias="numberOfPeriods", default=None
    )
    offer_eligibility: typing.Optional[
        typing_extensions.Literal["STACK_WITH_INTRO_OFFERS", "REPLACE_INTRO_OFFERS"]
    ] = _PydanticField(alias="offerEligibility", default=None)
    offer_mode: typing.Optional[
        typing_extensions.Literal["PAY_AS_YOU_GO", "PAY_UP_FRONT", "FREE_TRIAL"]
    ] = _PydanticField(alias="offerMode", default=None)
    total_number_of_codes: typing.Optional[int] = _PydanticField(
        alias="totalNumberOfCodes", default=None
    )


class SubscriptionOfferCodeRelationshipsCustomCodesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionOfferCodeCustomCodes"] = (
        _PydanticField(alias="type")
    )


class SubscriptionOfferCodeRelationshipsCustomCodesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class SubscriptionOfferCodeRelationshipsOneTimeUseCodesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionOfferCodeOneTimeUseCodes"] = (
        _PydanticField(alias="type")
    )


class SubscriptionOfferCodeRelationshipsOneTimeUseCodesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionOfferCodeRelationshipsPricesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionOfferCodePrices"] = _PydanticField(
        alias="type"
    )


class SubscriptionOfferCodeRelationshipsPricesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionOfferCodeRelationshipsSubscriptionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionOfferCodeRelationshipsSubscriptionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagedDocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    first: typing.Optional[str] = _PydanticField(alias="first", default=None)
    next: typing.Optional[str] = _PydanticField(alias="next", default=None)
    self: str = _PydanticField(alias="self")


class SubscriptionOfferCodeOneTimeUseCodeRelationshipsOfferCode(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        SubscriptionOfferCodeOneTimeUseCodeRelationshipsOfferCodeData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        SubscriptionOfferCodeOneTimeUseCodeRelationshipsOfferCodeLinks
    ] = _PydanticField(alias="links", default=None)


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class SubscriptionOfferCodeRelationshipsOneTimeUseCodes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionOfferCodeRelationshipsOneTimeUseCodesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionOfferCodeRelationshipsOneTimeUseCodesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionOfferCodeRelationshipsPrices(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionOfferCodeRelationshipsPricesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionOfferCodeRelationshipsPricesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionOfferCodeRelationshipsSubscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionOfferCodeRelationshipsSubscriptionData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionOfferCodeRelationshipsSubscriptionLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionOfferCodeOneTimeUseCodeRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    offer_code: typing.Optional[
        SubscriptionOfferCodeOneTimeUseCodeRelationshipsOfferCode
    ] = _PydanticField(alias="offerCode", default=None)


class SubscriptionOfferCodeRelationshipsCustomCodes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionOfferCodeRelationshipsCustomCodesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionOfferCodeRelationshipsCustomCodesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionOfferCodeOneTimeUseCode(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionOfferCodeOneTimeUseCodeAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionOfferCodeOneTimeUseCodeRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["subscriptionOfferCodeOneTimeUseCodes"] = (
        _PydanticField(alias="type")
    )


class SubscriptionOfferCodeRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    custom_codes: typing.Optional[SubscriptionOfferCodeRelationshipsCustomCodes] = (
        _PydanticField(alias="customCodes", default=None)
    )
    one_time_use_codes: typing.Optional[
        SubscriptionOfferCodeRelationshipsOneTimeUseCodes
    ] = _PydanticField(alias="oneTimeUseCodes", default=None)
    prices: typing.Optional[SubscriptionOfferCodeRelationshipsPrices] = _PydanticField(
        alias="prices", default=None
    )
    subscription: typing.Optional[SubscriptionOfferCodeRelationshipsSubscription] = (
        _PydanticField(alias="subscription", default=None)
    )


class SubscriptionOfferCode(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionOfferCodeAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionOfferCodeRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["subscriptionOfferCodes"] = _PydanticField(
        alias="type"
    )


class SubscriptionOfferCodeOneTimeUseCodesResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.List[SubscriptionOfferCodeOneTimeUseCode] = _PydanticField(
        alias="data"
    )
    included: typing.Optional[typing.List[SubscriptionOfferCode]] = _PydanticField(
        alias="included", default=None
    )
    links: PagedDocumentLinks = _PydanticField(alias="links")
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )
