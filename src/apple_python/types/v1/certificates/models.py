"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class CertificateAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    certificate_content: typing.Optional[str] = _PydanticField(
        alias="certificateContent", default=None
    )
    certificate_type: typing.Optional[
        typing_extensions.Literal[
            "IOS_DEVELOPMENT",
            "IOS_DISTRIBUTION",
            "MAC_APP_DISTRIBUTION",
            "MAC_INSTALLER_DISTRIBUTION",
            "MAC_APP_DEVELOPMENT",
            "DEVELOPER_ID_KEXT",
            "DEVELOPER_ID_APPLICATION",
            "DEVELOPMENT",
            "DISTRIBUTION",
            "PASS_TYPE_ID",
            "PASS_TYPE_ID_WITH_NFC",
        ]
    ] = _PydanticField(alias="certificateType", default=None)
    display_name: typing.Optional[str] = _PydanticField(
        alias="displayName", default=None
    )
    expiration_date: typing.Optional[str] = _PydanticField(
        alias="expirationDate", default=None
    )
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    platform_field: typing.Optional[typing_extensions.Literal["IOS", "MAC_OS"]] = (
        _PydanticField(alias="platform", default=None)
    )
    serial_number: typing.Optional[str] = _PydanticField(
        alias="serialNumber", default=None
    )


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagedDocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    first: typing.Optional[str] = _PydanticField(alias="first", default=None)
    next: typing.Optional[str] = _PydanticField(alias="next", default=None)
    self: str = _PydanticField(alias="self")


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class DocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: str = _PydanticField(alias="self")


class Certificate(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[CertificateAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    type: typing_extensions.Literal["certificates"] = _PydanticField(alias="type")


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class CertificateResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: Certificate = _PydanticField(alias="data")
    links: DocumentLinks = _PydanticField(alias="links")


class CertificatesResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.List[Certificate] = _PydanticField(alias="data")
    links: PagedDocumentLinks = _PydanticField(alias="links")
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )
