"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class BetaAppClipInvocationUpdateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    url: typing_extensions.NotRequired[str]


class _SerializerBetaAppClipInvocationUpdateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for BetaAppClipInvocationUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    url: typing.Optional[str] = pydantic.Field(alias="url", default=None)


class BetaAppClipInvocationCreateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    url: typing_extensions.Required[str]


class _SerializerBetaAppClipInvocationCreateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for BetaAppClipInvocationCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    url: str = pydantic.Field(alias="url")


class BetaAppClipInvocationCreateRequestDataRelationshipsBetaAppClipInvocationLocalizationsDataItem(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["betaAppClipInvocationLocalizations"]
    ]


class _SerializerBetaAppClipInvocationCreateRequestDataRelationshipsBetaAppClipInvocationLocalizationsDataItem(
    pydantic.BaseModel
):
    """
    Serializer for BetaAppClipInvocationCreateRequestDataRelationshipsBetaAppClipInvocationLocalizationsDataItem handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["betaAppClipInvocationLocalizations"] = (
        pydantic.Field(alias="type")
    )


class BetaAppClipInvocationCreateRequestDataRelationshipsBuildBundleData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["buildBundles"]]


class _SerializerBetaAppClipInvocationCreateRequestDataRelationshipsBuildBundleData(
    pydantic.BaseModel
):
    """
    Serializer for BetaAppClipInvocationCreateRequestDataRelationshipsBuildBundleData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["buildBundles"] = pydantic.Field(alias="type")


class BetaAppClipInvocationLocalizationInlineCreateAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    locale_field: typing_extensions.Required[str]
    title: typing_extensions.Required[str]


class _SerializerBetaAppClipInvocationLocalizationInlineCreateAttributes(
    pydantic.BaseModel
):
    """
    Serializer for BetaAppClipInvocationLocalizationInlineCreateAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    locale_field: str = pydantic.Field(alias="locale")
    title: str = pydantic.Field(alias="title")


class BetaAppClipInvocationLocalizationInlineCreateRelationshipsBetaAppClipInvocationData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["betaAppClipInvocations"]
    ]


class _SerializerBetaAppClipInvocationLocalizationInlineCreateRelationshipsBetaAppClipInvocationData(
    pydantic.BaseModel
):
    """
    Serializer for BetaAppClipInvocationLocalizationInlineCreateRelationshipsBetaAppClipInvocationData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["betaAppClipInvocations"] = pydantic.Field(
        alias="type"
    )


class BetaAppClipInvocationUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        BetaAppClipInvocationUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["betaAppClipInvocations"]
    ]


class _SerializerBetaAppClipInvocationUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for BetaAppClipInvocationUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerBetaAppClipInvocationUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["betaAppClipInvocations"] = pydantic.Field(
        alias="type"
    )


class BetaAppClipInvocationCreateRequestDataRelationshipsBetaAppClipInvocationLocalizations(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        typing.List[
            BetaAppClipInvocationCreateRequestDataRelationshipsBetaAppClipInvocationLocalizationsDataItem
        ]
    ]


class _SerializerBetaAppClipInvocationCreateRequestDataRelationshipsBetaAppClipInvocationLocalizations(
    pydantic.BaseModel
):
    """
    Serializer for BetaAppClipInvocationCreateRequestDataRelationshipsBetaAppClipInvocationLocalizations handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.List[
        _SerializerBetaAppClipInvocationCreateRequestDataRelationshipsBetaAppClipInvocationLocalizationsDataItem
    ] = pydantic.Field(alias="data")


class BetaAppClipInvocationCreateRequestDataRelationshipsBuildBundle(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        BetaAppClipInvocationCreateRequestDataRelationshipsBuildBundleData
    ]


class _SerializerBetaAppClipInvocationCreateRequestDataRelationshipsBuildBundle(
    pydantic.BaseModel
):
    """
    Serializer for BetaAppClipInvocationCreateRequestDataRelationshipsBuildBundle handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerBetaAppClipInvocationCreateRequestDataRelationshipsBuildBundleData = pydantic.Field(
        alias="data"
    )


class BetaAppClipInvocationLocalizationInlineCreateRelationshipsBetaAppClipInvocation(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        BetaAppClipInvocationLocalizationInlineCreateRelationshipsBetaAppClipInvocationData
    ]


class _SerializerBetaAppClipInvocationLocalizationInlineCreateRelationshipsBetaAppClipInvocation(
    pydantic.BaseModel
):
    """
    Serializer for BetaAppClipInvocationLocalizationInlineCreateRelationshipsBetaAppClipInvocation handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerBetaAppClipInvocationLocalizationInlineCreateRelationshipsBetaAppClipInvocationData
    ] = pydantic.Field(alias="data", default=None)


class BetaAppClipInvocationUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[BetaAppClipInvocationUpdateRequestData]


class _SerializerBetaAppClipInvocationUpdateRequest(pydantic.BaseModel):
    """
    Serializer for BetaAppClipInvocationUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerBetaAppClipInvocationUpdateRequestData = pydantic.Field(
        alias="data"
    )


class BetaAppClipInvocationCreateRequestDataRelationships(typing_extensions.TypedDict):
    """
    No description specified
    """

    beta_app_clip_invocation_localizations: typing_extensions.Required[
        BetaAppClipInvocationCreateRequestDataRelationshipsBetaAppClipInvocationLocalizations
    ]
    build_bundle: typing_extensions.Required[
        BetaAppClipInvocationCreateRequestDataRelationshipsBuildBundle
    ]


class _SerializerBetaAppClipInvocationCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for BetaAppClipInvocationCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    beta_app_clip_invocation_localizations: _SerializerBetaAppClipInvocationCreateRequestDataRelationshipsBetaAppClipInvocationLocalizations = pydantic.Field(
        alias="betaAppClipInvocationLocalizations"
    )
    build_bundle: _SerializerBetaAppClipInvocationCreateRequestDataRelationshipsBuildBundle = pydantic.Field(
        alias="buildBundle"
    )


class BetaAppClipInvocationLocalizationInlineCreateRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    beta_app_clip_invocation: typing_extensions.NotRequired[
        BetaAppClipInvocationLocalizationInlineCreateRelationshipsBetaAppClipInvocation
    ]


class _SerializerBetaAppClipInvocationLocalizationInlineCreateRelationships(
    pydantic.BaseModel
):
    """
    Serializer for BetaAppClipInvocationLocalizationInlineCreateRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    beta_app_clip_invocation: typing.Optional[
        _SerializerBetaAppClipInvocationLocalizationInlineCreateRelationshipsBetaAppClipInvocation
    ] = pydantic.Field(alias="betaAppClipInvocation", default=None)


class BetaAppClipInvocationCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        BetaAppClipInvocationCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        BetaAppClipInvocationCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["betaAppClipInvocations"]
    ]


class _SerializerBetaAppClipInvocationCreateRequestData(pydantic.BaseModel):
    """
    Serializer for BetaAppClipInvocationCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerBetaAppClipInvocationCreateRequestDataAttributes = (
        pydantic.Field(alias="attributes")
    )
    relationships: _SerializerBetaAppClipInvocationCreateRequestDataRelationships = (
        pydantic.Field(alias="relationships")
    )
    type: typing_extensions.Literal["betaAppClipInvocations"] = pydantic.Field(
        alias="type"
    )


class BetaAppClipInvocationLocalizationInlineCreate(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        BetaAppClipInvocationLocalizationInlineCreateAttributes
    ]
    id: typing_extensions.NotRequired[str]
    relationships: typing_extensions.NotRequired[
        BetaAppClipInvocationLocalizationInlineCreateRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["betaAppClipInvocationLocalizations"]
    ]


class _SerializerBetaAppClipInvocationLocalizationInlineCreate(pydantic.BaseModel):
    """
    Serializer for BetaAppClipInvocationLocalizationInlineCreate handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerBetaAppClipInvocationLocalizationInlineCreateAttributes = (
        pydantic.Field(alias="attributes")
    )
    id: typing.Optional[str] = pydantic.Field(alias="id", default=None)
    relationships: typing.Optional[
        _SerializerBetaAppClipInvocationLocalizationInlineCreateRelationships
    ] = pydantic.Field(alias="relationships", default=None)
    type: typing_extensions.Literal["betaAppClipInvocationLocalizations"] = (
        pydantic.Field(alias="type")
    )


class BetaAppClipInvocationCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[BetaAppClipInvocationCreateRequestData]
    included: typing_extensions.NotRequired[
        typing.List[BetaAppClipInvocationLocalizationInlineCreate]
    ]


class _SerializerBetaAppClipInvocationCreateRequest(pydantic.BaseModel):
    """
    Serializer for BetaAppClipInvocationCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerBetaAppClipInvocationCreateRequestData = pydantic.Field(
        alias="data"
    )
    included: typing.Optional[
        typing.List[_SerializerBetaAppClipInvocationLocalizationInlineCreate]
    ] = pydantic.Field(alias="included", default=None)
