"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class GameCenterLeaderboardSetMemberLocalizationUpdateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    name: typing_extensions.NotRequired[str]


class _SerializerGameCenterLeaderboardSetMemberLocalizationUpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetMemberLocalizationUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    name: typing.Optional[str] = pydantic.Field(alias="name", default=None)


class GameCenterLeaderboardSetMemberLocalizationCreateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    locale_field: typing_extensions.NotRequired[str]
    name: typing_extensions.NotRequired[str]


class _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetMemberLocalizationCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    locale_field: typing.Optional[str] = pydantic.Field(alias="locale", default=None)
    name: typing.Optional[str] = pydantic.Field(alias="name", default=None)


class GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboards"]
    ]


class _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardData(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboards"] = pydantic.Field(
        alias="type"
    )


class GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSetData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboardSets"]
    ]


class _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSetData(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSetData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardSets"] = pydantic.Field(
        alias="type"
    )


class GameCenterLeaderboardSetMemberLocalizationUpdateRequestData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        GameCenterLeaderboardSetMemberLocalizationUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboardSetMemberLocalizations"]
    ]


class _SerializerGameCenterLeaderboardSetMemberLocalizationUpdateRequestData(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetMemberLocalizationUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerGameCenterLeaderboardSetMemberLocalizationUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardSetMemberLocalizations"] = (
        pydantic.Field(alias="type")
    )


class GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboard(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardData
    ]


class _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboard(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboard handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardData = pydantic.Field(
        alias="data"
    )


class GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSet(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSetData
    ]


class _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSet(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSet handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSetData = pydantic.Field(
        alias="data"
    )


class GameCenterLeaderboardSetMemberLocalizationUpdateRequest(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        GameCenterLeaderboardSetMemberLocalizationUpdateRequestData
    ]


class _SerializerGameCenterLeaderboardSetMemberLocalizationUpdateRequest(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetMemberLocalizationUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardSetMemberLocalizationUpdateRequestData = (
        pydantic.Field(alias="data")
    )


class GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    game_center_leaderboard: typing_extensions.Required[
        GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboard
    ]
    game_center_leaderboard_set: typing_extensions.Required[
        GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSet
    ]


class _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    game_center_leaderboard: _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboard = pydantic.Field(
        alias="gameCenterLeaderboard"
    )
    game_center_leaderboard_set: _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationshipsGameCenterLeaderboardSet = pydantic.Field(
        alias="gameCenterLeaderboardSet"
    )


class GameCenterLeaderboardSetMemberLocalizationCreateRequestData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        GameCenterLeaderboardSetMemberLocalizationCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        GameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboardSetMemberLocalizations"]
    ]


class _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestData(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetMemberLocalizationCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    relationships: _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["gameCenterLeaderboardSetMemberLocalizations"] = (
        pydantic.Field(alias="type")
    )


class GameCenterLeaderboardSetMemberLocalizationCreateRequest(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        GameCenterLeaderboardSetMemberLocalizationCreateRequestData
    ]


class _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequest(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetMemberLocalizationCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardSetMemberLocalizationCreateRequestData = (
        pydantic.Field(alias="data")
    )
