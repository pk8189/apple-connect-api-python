"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class GameCenterPlayerAchievementSubmissionAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    bundle_id: typing.Optional[str] = _PydanticField(alias="bundleId", default=None)
    challenge_ids: typing.Optional[typing.List[str]] = _PydanticField(
        alias="challengeIds", default=None
    )
    percentage_achieved: typing.Optional[int] = _PydanticField(
        alias="percentageAchieved", default=None
    )
    scoped_player_id: typing.Optional[str] = _PydanticField(
        alias="scopedPlayerId", default=None
    )
    submitted_date: typing.Optional[str] = _PydanticField(
        alias="submittedDate", default=None
    )
    vendor_identifier: typing.Optional[str] = _PydanticField(
        alias="vendorIdentifier", default=None
    )


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class DocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: str = _PydanticField(alias="self")


class GameCenterPlayerAchievementSubmission(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[GameCenterPlayerAchievementSubmissionAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    type: typing_extensions.Literal["gameCenterPlayerAchievementSubmissions"] = (
        _PydanticField(alias="type")
    )


class GameCenterPlayerAchievementSubmissionResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: GameCenterPlayerAchievementSubmission = _PydanticField(alias="data")
    links: DocumentLinks = _PydanticField(alias="links")
