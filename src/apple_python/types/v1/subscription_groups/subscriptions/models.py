"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class SubscriptionAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    family_sharable: typing.Optional[bool] = _PydanticField(
        alias="familySharable", default=None
    )
    group_level: typing.Optional[int] = _PydanticField(alias="groupLevel", default=None)
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    product_id: typing.Optional[str] = _PydanticField(alias="productId", default=None)
    review_note: typing.Optional[str] = _PydanticField(alias="reviewNote", default=None)
    state: typing.Optional[
        typing_extensions.Literal[
            "MISSING_METADATA",
            "READY_TO_SUBMIT",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "DEVELOPER_ACTION_NEEDED",
            "PENDING_BINARY_APPROVAL",
            "APPROVED",
            "DEVELOPER_REMOVED_FROM_SALE",
            "REMOVED_FROM_SALE",
            "REJECTED",
        ]
    ] = _PydanticField(alias="state", default=None)
    subscription_period: typing.Optional[
        typing_extensions.Literal[
            "ONE_WEEK",
            "ONE_MONTH",
            "TWO_MONTHS",
            "THREE_MONTHS",
            "SIX_MONTHS",
            "ONE_YEAR",
        ]
    ] = _PydanticField(alias="subscriptionPeriod", default=None)


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsAppStoreReviewScreenshotData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionAppStoreReviewScreenshots"] = (
        _PydanticField(alias="type")
    )


class SubscriptionRelationshipsAppStoreReviewScreenshotLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsGroupData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionGroups"] = _PydanticField(alias="type")


class SubscriptionRelationshipsGroupLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsIntroductoryOffersDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionIntroductoryOffers"] = _PydanticField(
        alias="type"
    )


class SubscriptionRelationshipsIntroductoryOffersLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class SubscriptionRelationshipsOfferCodesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionOfferCodes"] = _PydanticField(
        alias="type"
    )


class SubscriptionRelationshipsOfferCodesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsPricesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionPrices"] = _PydanticField(alias="type")


class SubscriptionRelationshipsPricesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsPromotedPurchaseData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["promotedPurchases"] = _PydanticField(alias="type")


class SubscriptionRelationshipsPromotedPurchaseLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsPromotionalOffersDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionPromotionalOffers"] = _PydanticField(
        alias="type"
    )


class SubscriptionRelationshipsPromotionalOffersLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsSubscriptionAvailabilityData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionAvailabilities"] = _PydanticField(
        alias="type"
    )


class SubscriptionRelationshipsSubscriptionAvailabilityLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionRelationshipsSubscriptionLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionLocalizations"] = _PydanticField(
        alias="type"
    )


class SubscriptionRelationshipsSubscriptionLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionLocalizationAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    description: typing.Optional[str] = _PydanticField(
        alias="description", default=None
    )
    locale_field: typing.Optional[str] = _PydanticField(alias="locale", default=None)
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    state: typing.Optional[
        typing_extensions.Literal[
            "PREPARE_FOR_SUBMISSION", "WAITING_FOR_REVIEW", "APPROVED", "REJECTED"
        ]
    ] = _PydanticField(alias="state", default=None)


class SubscriptionLocalizationRelationshipsSubscriptionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionLocalizationRelationshipsSubscriptionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppMediaStateError(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    code_field: typing.Optional[str] = _PydanticField(alias="code", default=None)
    description: typing.Optional[str] = _PydanticField(
        alias="description", default=None
    )


class ImageAsset(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    height: typing.Optional[int] = _PydanticField(alias="height", default=None)
    template_url: typing.Optional[str] = _PydanticField(
        alias="templateUrl", default=None
    )
    width: typing.Optional[int] = _PydanticField(alias="width", default=None)


class HttpHeader(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    value: typing.Optional[str] = _PydanticField(alias="value", default=None)


class SubscriptionAppStoreReviewScreenshotRelationshipsSubscriptionData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionAppStoreReviewScreenshotRelationshipsSubscriptionLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionGroupAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    reference_name: typing.Optional[str] = _PydanticField(
        alias="referenceName", default=None
    )


class SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionGroupLocalizations"] = _PydanticField(
        alias="type"
    )


class SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionGroupRelationshipsSubscriptionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionGroupRelationshipsSubscriptionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionIntroductoryOfferAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    duration: typing.Optional[
        typing_extensions.Literal[
            "ONE_DAY",
            "THREE_DAYS",
            "ONE_WEEK",
            "TWO_WEEKS",
            "ONE_MONTH",
            "TWO_MONTHS",
            "THREE_MONTHS",
            "SIX_MONTHS",
            "ONE_YEAR",
        ]
    ] = _PydanticField(alias="duration", default=None)
    end_date: typing.Optional[str] = _PydanticField(alias="endDate", default=None)
    number_of_periods: typing.Optional[int] = _PydanticField(
        alias="numberOfPeriods", default=None
    )
    offer_mode: typing.Optional[
        typing_extensions.Literal["PAY_AS_YOU_GO", "PAY_UP_FRONT", "FREE_TRIAL"]
    ] = _PydanticField(alias="offerMode", default=None)
    start_date: typing.Optional[str] = _PydanticField(alias="startDate", default=None)


class SubscriptionIntroductoryOfferRelationshipsSubscriptionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionIntroductoryOfferRelationshipsSubscriptionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePointData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionPricePoints"] = _PydanticField(
        alias="type"
    )


class SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePointLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionIntroductoryOfferRelationshipsTerritoryData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["territories"] = _PydanticField(alias="type")


class SubscriptionIntroductoryOfferRelationshipsTerritoryLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionPromotionalOfferAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    duration: typing.Optional[
        typing_extensions.Literal[
            "ONE_DAY",
            "THREE_DAYS",
            "ONE_WEEK",
            "TWO_WEEKS",
            "ONE_MONTH",
            "TWO_MONTHS",
            "THREE_MONTHS",
            "SIX_MONTHS",
            "ONE_YEAR",
        ]
    ] = _PydanticField(alias="duration", default=None)
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    number_of_periods: typing.Optional[int] = _PydanticField(
        alias="numberOfPeriods", default=None
    )
    offer_code: typing.Optional[str] = _PydanticField(alias="offerCode", default=None)
    offer_mode: typing.Optional[
        typing_extensions.Literal["PAY_AS_YOU_GO", "PAY_UP_FRONT", "FREE_TRIAL"]
    ] = _PydanticField(alias="offerMode", default=None)


class SubscriptionPromotionalOfferRelationshipsPricesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionPromotionalOfferPrices"] = (
        _PydanticField(alias="type")
    )


class SubscriptionPromotionalOfferRelationshipsPricesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionPromotionalOfferRelationshipsSubscriptionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionPromotionalOfferRelationshipsSubscriptionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionOfferCodeAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    active: typing.Optional[bool] = _PydanticField(alias="active", default=None)
    customer_eligibilities: typing.Optional[
        typing.List[typing_extensions.Literal["NEW", "EXISTING", "EXPIRED"]]
    ] = _PydanticField(alias="customerEligibilities", default=None)
    duration: typing.Optional[
        typing_extensions.Literal[
            "ONE_DAY",
            "THREE_DAYS",
            "ONE_WEEK",
            "TWO_WEEKS",
            "ONE_MONTH",
            "TWO_MONTHS",
            "THREE_MONTHS",
            "SIX_MONTHS",
            "ONE_YEAR",
        ]
    ] = _PydanticField(alias="duration", default=None)
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    number_of_periods: typing.Optional[int] = _PydanticField(
        alias="numberOfPeriods", default=None
    )
    offer_eligibility: typing.Optional[
        typing_extensions.Literal["STACK_WITH_INTRO_OFFERS", "REPLACE_INTRO_OFFERS"]
    ] = _PydanticField(alias="offerEligibility", default=None)
    offer_mode: typing.Optional[
        typing_extensions.Literal["PAY_AS_YOU_GO", "PAY_UP_FRONT", "FREE_TRIAL"]
    ] = _PydanticField(alias="offerMode", default=None)
    total_number_of_codes: typing.Optional[int] = _PydanticField(
        alias="totalNumberOfCodes", default=None
    )


class SubscriptionOfferCodeRelationshipsCustomCodesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionOfferCodeCustomCodes"] = (
        _PydanticField(alias="type")
    )


class SubscriptionOfferCodeRelationshipsCustomCodesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionOfferCodeRelationshipsOneTimeUseCodesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionOfferCodeOneTimeUseCodes"] = (
        _PydanticField(alias="type")
    )


class SubscriptionOfferCodeRelationshipsOneTimeUseCodesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionOfferCodeRelationshipsPricesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionOfferCodePrices"] = _PydanticField(
        alias="type"
    )


class SubscriptionOfferCodeRelationshipsPricesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionOfferCodeRelationshipsSubscriptionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionOfferCodeRelationshipsSubscriptionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionPriceAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    preserved: typing.Optional[bool] = _PydanticField(alias="preserved", default=None)
    start_date: typing.Optional[str] = _PydanticField(alias="startDate", default=None)


class SubscriptionPriceRelationshipsSubscriptionPricePointData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionPricePoints"] = _PydanticField(
        alias="type"
    )


class SubscriptionPriceRelationshipsSubscriptionPricePointLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionPriceRelationshipsTerritoryData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["territories"] = _PydanticField(alias="type")


class SubscriptionPriceRelationshipsTerritoryLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PromotedPurchaseAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    enabled: typing.Optional[bool] = _PydanticField(alias="enabled", default=None)
    state: typing.Optional[
        typing_extensions.Literal[
            "APPROVED", "IN_REVIEW", "PREPARE_FOR_SUBMISSION", "REJECTED"
        ]
    ] = _PydanticField(alias="state", default=None)
    visible_for_all_users: typing.Optional[bool] = _PydanticField(
        alias="visibleForAllUsers", default=None
    )


class PromotedPurchaseRelationshipsInAppPurchaseV2Data(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchases"] = _PydanticField(alias="type")


class PromotedPurchaseRelationshipsInAppPurchaseV2Links(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PromotedPurchaseRelationshipsPromotionImagesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["promotedPurchaseImages"] = _PydanticField(
        alias="type"
    )


class PromotedPurchaseRelationshipsPromotionImagesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PromotedPurchaseRelationshipsSubscriptionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class PromotedPurchaseRelationshipsSubscriptionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionAvailabilityAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    available_in_new_territories: typing.Optional[bool] = _PydanticField(
        alias="availableInNewTerritories", default=None
    )


class SubscriptionAvailabilityRelationshipsAvailableTerritoriesDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["territories"] = _PydanticField(alias="type")


class SubscriptionAvailabilityRelationshipsAvailableTerritoriesLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class SubscriptionAvailabilityRelationshipsSubscriptionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionAvailabilityRelationshipsSubscriptionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagedDocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    first: typing.Optional[str] = _PydanticField(alias="first", default=None)
    next: typing.Optional[str] = _PydanticField(alias="next", default=None)
    self: str = _PydanticField(alias="self")


class SubscriptionRelationshipsAppStoreReviewScreenshot(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionRelationshipsAppStoreReviewScreenshotData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionRelationshipsAppStoreReviewScreenshotLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionRelationshipsGroup(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionRelationshipsGroupData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[SubscriptionRelationshipsGroupLinks] = _PydanticField(
        alias="links", default=None
    )


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class SubscriptionRelationshipsOfferCodes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[SubscriptionRelationshipsOfferCodesDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionRelationshipsOfferCodesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionRelationshipsPrices(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[SubscriptionRelationshipsPricesDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionRelationshipsPricesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionRelationshipsPromotedPurchase(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionRelationshipsPromotedPurchaseData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionRelationshipsPromotedPurchaseLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionRelationshipsPromotionalOffers(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionRelationshipsPromotionalOffersDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionRelationshipsPromotionalOffersLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionRelationshipsSubscriptionAvailability(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionRelationshipsSubscriptionAvailabilityData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionRelationshipsSubscriptionAvailabilityLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionRelationshipsSubscriptionLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionRelationshipsSubscriptionLocalizationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionRelationshipsSubscriptionLocalizationsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionLocalizationRelationshipsSubscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionLocalizationRelationshipsSubscriptionData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionLocalizationRelationshipsSubscriptionLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppMediaAssetState(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    errors: typing.Optional[typing.List[AppMediaStateError]] = _PydanticField(
        alias="errors", default=None
    )
    state: typing.Optional[
        typing_extensions.Literal[
            "AWAITING_UPLOAD", "UPLOAD_COMPLETE", "COMPLETE", "FAILED"
        ]
    ] = _PydanticField(alias="state", default=None)
    warnings_field: typing.Optional[typing.List[AppMediaStateError]] = _PydanticField(
        alias="warnings", default=None
    )


class UploadOperation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    length: typing.Optional[int] = _PydanticField(alias="length", default=None)
    method: typing.Optional[str] = _PydanticField(alias="method", default=None)
    offset: typing.Optional[int] = _PydanticField(alias="offset", default=None)
    request_headers: typing.Optional[typing.List[HttpHeader]] = _PydanticField(
        alias="requestHeaders", default=None
    )
    url: typing.Optional[str] = _PydanticField(alias="url", default=None)


class SubscriptionAppStoreReviewScreenshotRelationshipsSubscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        SubscriptionAppStoreReviewScreenshotRelationshipsSubscriptionData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        SubscriptionAppStoreReviewScreenshotRelationshipsSubscriptionLinks
    ] = _PydanticField(alias="links", default=None)


class SubscriptionGroupRelationshipsSubscriptionGroupLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[
            SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsDataItem
        ]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        SubscriptionGroupRelationshipsSubscriptionGroupLocalizationsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionGroupRelationshipsSubscriptions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionGroupRelationshipsSubscriptionsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionGroupRelationshipsSubscriptionsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionIntroductoryOfferRelationshipsSubscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscriptionData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscriptionLinks
    ] = _PydanticField(alias="links", default=None)


class SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePoint(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePointData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePointLinks
    ] = _PydanticField(alias="links", default=None)


class SubscriptionIntroductoryOfferRelationshipsTerritory(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionIntroductoryOfferRelationshipsTerritoryData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionIntroductoryOfferRelationshipsTerritoryLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionPromotionalOfferRelationshipsPrices(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionPromotionalOfferRelationshipsPricesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionPromotionalOfferRelationshipsPricesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionPromotionalOfferRelationshipsSubscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionPromotionalOfferRelationshipsSubscriptionData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[
        SubscriptionPromotionalOfferRelationshipsSubscriptionLinks
    ] = _PydanticField(alias="links", default=None)


class SubscriptionOfferCodeRelationshipsCustomCodes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionOfferCodeRelationshipsCustomCodesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionOfferCodeRelationshipsCustomCodesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionOfferCodeRelationshipsOneTimeUseCodes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionOfferCodeRelationshipsOneTimeUseCodesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionOfferCodeRelationshipsOneTimeUseCodesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionOfferCodeRelationshipsPrices(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionOfferCodeRelationshipsPricesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionOfferCodeRelationshipsPricesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionOfferCodeRelationshipsSubscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionOfferCodeRelationshipsSubscriptionData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionOfferCodeRelationshipsSubscriptionLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionPriceRelationshipsSubscriptionPricePoint(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionPriceRelationshipsSubscriptionPricePointData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[
        SubscriptionPriceRelationshipsSubscriptionPricePointLinks
    ] = _PydanticField(alias="links", default=None)


class SubscriptionPriceRelationshipsTerritory(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionPriceRelationshipsTerritoryData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[SubscriptionPriceRelationshipsTerritoryLinks] = (
        _PydanticField(alias="links", default=None)
    )


class PromotedPurchaseRelationshipsInAppPurchaseV2(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[PromotedPurchaseRelationshipsInAppPurchaseV2Data] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[PromotedPurchaseRelationshipsInAppPurchaseV2Links] = (
        _PydanticField(alias="links", default=None)
    )


class PromotedPurchaseRelationshipsPromotionImages(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[PromotedPurchaseRelationshipsPromotionImagesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[PromotedPurchaseRelationshipsPromotionImagesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class PromotedPurchaseRelationshipsSubscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[PromotedPurchaseRelationshipsSubscriptionData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[PromotedPurchaseRelationshipsSubscriptionLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionAvailabilityRelationshipsAvailableTerritories(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionAvailabilityRelationshipsAvailableTerritoriesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        SubscriptionAvailabilityRelationshipsAvailableTerritoriesLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionAvailabilityRelationshipsSubscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[SubscriptionAvailabilityRelationshipsSubscriptionData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[SubscriptionAvailabilityRelationshipsSubscriptionLinks] = (
        _PydanticField(alias="links", default=None)
    )


class SubscriptionRelationshipsIntroductoryOffers(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[SubscriptionRelationshipsIntroductoryOffersDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[SubscriptionRelationshipsIntroductoryOffersLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class SubscriptionLocalizationRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    subscription: typing.Optional[SubscriptionLocalizationRelationshipsSubscription] = (
        _PydanticField(alias="subscription", default=None)
    )


class SubscriptionAppStoreReviewScreenshotAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    asset_delivery_state: typing.Optional[AppMediaAssetState] = _PydanticField(
        alias="assetDeliveryState", default=None
    )
    asset_token: typing.Optional[str] = _PydanticField(alias="assetToken", default=None)
    asset_type: typing.Optional[str] = _PydanticField(alias="assetType", default=None)
    file_name: typing.Optional[str] = _PydanticField(alias="fileName", default=None)
    file_size: typing.Optional[int] = _PydanticField(alias="fileSize", default=None)
    image_asset: typing.Optional[ImageAsset] = _PydanticField(
        alias="imageAsset", default=None
    )
    source_file_checksum: typing.Optional[str] = _PydanticField(
        alias="sourceFileChecksum", default=None
    )
    upload_operations: typing.Optional[typing.List[UploadOperation]] = _PydanticField(
        alias="uploadOperations", default=None
    )


class SubscriptionAppStoreReviewScreenshotRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    subscription: typing.Optional[
        SubscriptionAppStoreReviewScreenshotRelationshipsSubscription
    ] = _PydanticField(alias="subscription", default=None)


class SubscriptionGroupRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    subscription_group_localizations: typing.Optional[
        SubscriptionGroupRelationshipsSubscriptionGroupLocalizations
    ] = _PydanticField(alias="subscriptionGroupLocalizations", default=None)
    subscriptions: typing.Optional[SubscriptionGroupRelationshipsSubscriptions] = (
        _PydanticField(alias="subscriptions", default=None)
    )


class SubscriptionIntroductoryOfferRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    subscription: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscription
    ] = _PydanticField(alias="subscription", default=None)
    subscription_price_point: typing.Optional[
        SubscriptionIntroductoryOfferRelationshipsSubscriptionPricePoint
    ] = _PydanticField(alias="subscriptionPricePoint", default=None)
    territory: typing.Optional[SubscriptionIntroductoryOfferRelationshipsTerritory] = (
        _PydanticField(alias="territory", default=None)
    )


class SubscriptionPromotionalOfferRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    prices: typing.Optional[SubscriptionPromotionalOfferRelationshipsPrices] = (
        _PydanticField(alias="prices", default=None)
    )
    subscription: typing.Optional[
        SubscriptionPromotionalOfferRelationshipsSubscription
    ] = _PydanticField(alias="subscription", default=None)


class SubscriptionOfferCodeRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    custom_codes: typing.Optional[SubscriptionOfferCodeRelationshipsCustomCodes] = (
        _PydanticField(alias="customCodes", default=None)
    )
    one_time_use_codes: typing.Optional[
        SubscriptionOfferCodeRelationshipsOneTimeUseCodes
    ] = _PydanticField(alias="oneTimeUseCodes", default=None)
    prices: typing.Optional[SubscriptionOfferCodeRelationshipsPrices] = _PydanticField(
        alias="prices", default=None
    )
    subscription: typing.Optional[SubscriptionOfferCodeRelationshipsSubscription] = (
        _PydanticField(alias="subscription", default=None)
    )


class SubscriptionPriceRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    subscription_price_point: typing.Optional[
        SubscriptionPriceRelationshipsSubscriptionPricePoint
    ] = _PydanticField(alias="subscriptionPricePoint", default=None)
    territory: typing.Optional[SubscriptionPriceRelationshipsTerritory] = (
        _PydanticField(alias="territory", default=None)
    )


class PromotedPurchaseRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    in_app_purchase_v2: typing.Optional[
        PromotedPurchaseRelationshipsInAppPurchaseV2
    ] = _PydanticField(alias="inAppPurchaseV2", default=None)
    promotion_images: typing.Optional[PromotedPurchaseRelationshipsPromotionImages] = (
        _PydanticField(alias="promotionImages", default=None)
    )
    subscription: typing.Optional[PromotedPurchaseRelationshipsSubscription] = (
        _PydanticField(alias="subscription", default=None)
    )


class SubscriptionAvailabilityRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    available_territories: typing.Optional[
        SubscriptionAvailabilityRelationshipsAvailableTerritories
    ] = _PydanticField(alias="availableTerritories", default=None)
    subscription: typing.Optional[SubscriptionAvailabilityRelationshipsSubscription] = (
        _PydanticField(alias="subscription", default=None)
    )


class SubscriptionRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_store_review_screenshot: typing.Optional[
        SubscriptionRelationshipsAppStoreReviewScreenshot
    ] = _PydanticField(alias="appStoreReviewScreenshot", default=None)
    group: typing.Optional[SubscriptionRelationshipsGroup] = _PydanticField(
        alias="group", default=None
    )
    introductory_offers: typing.Optional[
        SubscriptionRelationshipsIntroductoryOffers
    ] = _PydanticField(alias="introductoryOffers", default=None)
    offer_codes: typing.Optional[SubscriptionRelationshipsOfferCodes] = _PydanticField(
        alias="offerCodes", default=None
    )
    prices: typing.Optional[SubscriptionRelationshipsPrices] = _PydanticField(
        alias="prices", default=None
    )
    promoted_purchase: typing.Optional[SubscriptionRelationshipsPromotedPurchase] = (
        _PydanticField(alias="promotedPurchase", default=None)
    )
    promotional_offers: typing.Optional[SubscriptionRelationshipsPromotionalOffers] = (
        _PydanticField(alias="promotionalOffers", default=None)
    )
    subscription_availability: typing.Optional[
        SubscriptionRelationshipsSubscriptionAvailability
    ] = _PydanticField(alias="subscriptionAvailability", default=None)
    subscription_localizations: typing.Optional[
        SubscriptionRelationshipsSubscriptionLocalizations
    ] = _PydanticField(alias="subscriptionLocalizations", default=None)


class SubscriptionLocalization(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionLocalizationAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionLocalizationRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["subscriptionLocalizations"] = _PydanticField(
        alias="type"
    )


class SubscriptionAppStoreReviewScreenshot(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionAppStoreReviewScreenshotAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[
        SubscriptionAppStoreReviewScreenshotRelationships
    ] = _PydanticField(alias="relationships", default=None)
    type: typing_extensions.Literal["subscriptionAppStoreReviewScreenshots"] = (
        _PydanticField(alias="type")
    )


class SubscriptionGroup(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionGroupAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionGroupRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["subscriptionGroups"] = _PydanticField(alias="type")


class SubscriptionIntroductoryOffer(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionIntroductoryOfferAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionIntroductoryOfferRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["subscriptionIntroductoryOffers"] = _PydanticField(
        alias="type"
    )


class SubscriptionPromotionalOffer(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionPromotionalOfferAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionPromotionalOfferRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["subscriptionPromotionalOffers"] = _PydanticField(
        alias="type"
    )


class SubscriptionOfferCode(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionOfferCodeAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionOfferCodeRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["subscriptionOfferCodes"] = _PydanticField(
        alias="type"
    )


class SubscriptionPrice(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionPriceAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionPriceRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["subscriptionPrices"] = _PydanticField(alias="type")


class PromotedPurchase(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[PromotedPurchaseAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[PromotedPurchaseRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["promotedPurchases"] = _PydanticField(alias="type")


class SubscriptionAvailability(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionAvailabilityAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionAvailabilityRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["subscriptionAvailabilities"] = _PydanticField(
        alias="type"
    )


class Subscription(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[SubscriptionAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[SubscriptionRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["subscriptions"] = _PydanticField(alias="type")


class SubscriptionsResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.List[Subscription] = _PydanticField(alias="data")
    included: typing.Optional[
        typing.List[
            typing.Union[
                SubscriptionLocalization,
                SubscriptionAppStoreReviewScreenshot,
                SubscriptionGroup,
                SubscriptionIntroductoryOffer,
                SubscriptionPromotionalOffer,
                SubscriptionOfferCode,
                SubscriptionPrice,
                PromotedPurchase,
                SubscriptionAvailability,
            ]
        ]
    ] = _PydanticField(alias="included", default=None)
    links: PagedDocumentLinks = _PydanticField(alias="links")
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )
