"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class ImageAsset(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    height: typing.Optional[int] = _PydanticField(alias="height", default=None)
    template_url: typing.Optional[str] = _PydanticField(
        alias="templateUrl", default=None
    )
    width: typing.Optional[int] = _PydanticField(alias="width", default=None)


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class BuildRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsAppEncryptionDeclarationData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEncryptionDeclarations"] = _PydanticField(
        alias="type"
    )


class BuildRelationshipsAppEncryptionDeclarationLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsAppStoreVersionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = _PydanticField(alias="type")


class BuildRelationshipsAppStoreVersionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsBetaAppReviewSubmissionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaAppReviewSubmissions"] = _PydanticField(
        alias="type"
    )


class BuildRelationshipsBetaAppReviewSubmissionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsBetaBuildLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaBuildLocalizations"] = _PydanticField(
        alias="type"
    )


class BuildRelationshipsBetaBuildLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class BuildRelationshipsBetaGroupsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaGroups"] = _PydanticField(alias="type")


class BuildRelationshipsBetaGroupsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsBuildBetaDetailData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["buildBetaDetails"] = _PydanticField(alias="type")


class BuildRelationshipsBuildBetaDetailLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsBuildBundlesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["buildBundles"] = _PydanticField(alias="type")


class BuildRelationshipsBuildBundlesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsIconsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["buildIcons"] = _PydanticField(alias="type")


class BuildRelationshipsIconsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsIndividualTestersDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaTesters"] = _PydanticField(alias="type")


class BuildRelationshipsIndividualTestersLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildRelationshipsPreReleaseVersionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["preReleaseVersions"] = _PydanticField(alias="type")


class BuildRelationshipsPreReleaseVersionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PrereleaseVersionAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    platform_field: typing.Optional[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ] = _PydanticField(alias="platform", default=None)
    version: typing.Optional[str] = _PydanticField(alias="version", default=None)


class PrereleaseVersionRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class PrereleaseVersionRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PrereleaseVersionRelationshipsBuildsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class PrereleaseVersionRelationshipsBuildsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaTesterAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    email_field: typing.Optional[str] = _PydanticField(alias="email", default=None)
    first_name: typing.Optional[str] = _PydanticField(alias="firstName", default=None)
    invite_type: typing.Optional[typing_extensions.Literal["EMAIL", "PUBLIC_LINK"]] = (
        _PydanticField(alias="inviteType", default=None)
    )
    last_name: typing.Optional[str] = _PydanticField(alias="lastName", default=None)
    state: typing.Optional[
        typing_extensions.Literal[
            "NOT_INVITED", "INVITED", "ACCEPTED", "INSTALLED", "REVOKED"
        ]
    ] = _PydanticField(alias="state", default=None)


class BetaTesterRelationshipsAppsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class BetaTesterRelationshipsAppsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaTesterRelationshipsBetaGroupsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaGroups"] = _PydanticField(alias="type")


class BetaTesterRelationshipsBetaGroupsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaTesterRelationshipsBuildsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class BetaTesterRelationshipsBuildsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaGroupAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    created_date: typing.Optional[str] = _PydanticField(
        alias="createdDate", default=None
    )
    feedback_enabled: typing.Optional[bool] = _PydanticField(
        alias="feedbackEnabled", default=None
    )
    has_access_to_all_builds: typing.Optional[bool] = _PydanticField(
        alias="hasAccessToAllBuilds", default=None
    )
    ios_builds_available_for_apple_silicon_mac: typing.Optional[bool] = _PydanticField(
        alias="iosBuildsAvailableForAppleSiliconMac", default=None
    )
    is_internal_group: typing.Optional[bool] = _PydanticField(
        alias="isInternalGroup", default=None
    )
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    public_link: typing.Optional[str] = _PydanticField(alias="publicLink", default=None)
    public_link_enabled: typing.Optional[bool] = _PydanticField(
        alias="publicLinkEnabled", default=None
    )
    public_link_id: typing.Optional[str] = _PydanticField(
        alias="publicLinkId", default=None
    )
    public_link_limit: typing.Optional[int] = _PydanticField(
        alias="publicLinkLimit", default=None
    )
    public_link_limit_enabled: typing.Optional[bool] = _PydanticField(
        alias="publicLinkLimitEnabled", default=None
    )


class BetaGroupRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class BetaGroupRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaGroupRelationshipsBetaTestersDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaTesters"] = _PydanticField(alias="type")


class BetaGroupRelationshipsBetaTestersLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaGroupRelationshipsBuildsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class BetaGroupRelationshipsBuildsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaBuildLocalizationAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    locale_field: typing.Optional[str] = _PydanticField(alias="locale", default=None)
    whats_new: typing.Optional[str] = _PydanticField(alias="whatsNew", default=None)


class BetaBuildLocalizationRelationshipsBuildData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class BetaBuildLocalizationRelationshipsBuildLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEncryptionDeclarationAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_description: typing.Optional[str] = _PydanticField(
        alias="appDescription", default=None
    )
    app_encryption_declaration_state: typing.Optional[
        typing_extensions.Literal[
            "CREATED", "IN_REVIEW", "APPROVED", "REJECTED", "INVALID", "EXPIRED"
        ]
    ] = _PydanticField(alias="appEncryptionDeclarationState", default=None)
    available_on_french_store: typing.Optional[bool] = _PydanticField(
        alias="availableOnFrenchStore", default=None
    )
    code_value: typing.Optional[str] = _PydanticField(alias="codeValue", default=None)
    contains_proprietary_cryptography: typing.Optional[bool] = _PydanticField(
        alias="containsProprietaryCryptography", default=None
    )
    contains_third_party_cryptography: typing.Optional[bool] = _PydanticField(
        alias="containsThirdPartyCryptography", default=None
    )
    created_date: typing.Optional[str] = _PydanticField(
        alias="createdDate", default=None
    )
    document_name: typing.Optional[str] = _PydanticField(
        alias="documentName", default=None
    )
    document_type: typing.Optional[str] = _PydanticField(
        alias="documentType", default=None
    )
    document_url: typing.Optional[str] = _PydanticField(
        alias="documentUrl", default=None
    )
    exempt: typing.Optional[bool] = _PydanticField(alias="exempt", default=None)
    platform_field: typing.Optional[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ] = _PydanticField(alias="platform", default=None)
    uploaded_date: typing.Optional[str] = _PydanticField(
        alias="uploadedDate", default=None
    )
    uses_encryption: typing.Optional[bool] = _PydanticField(
        alias="usesEncryption", default=None
    )


class AppEncryptionDeclarationRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppEncryptionDeclarationRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEncryptionDeclarationDocuments"] = (
        _PydanticField(alias="type")
    )


class AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEncryptionDeclarationRelationshipsBuildsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class AppEncryptionDeclarationRelationshipsBuildsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BetaAppReviewSubmissionAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    beta_review_state: typing.Optional[
        typing_extensions.Literal[
            "WAITING_FOR_REVIEW", "IN_REVIEW", "REJECTED", "APPROVED"
        ]
    ] = _PydanticField(alias="betaReviewState", default=None)
    submitted_date: typing.Optional[str] = _PydanticField(
        alias="submittedDate", default=None
    )


class BetaAppReviewSubmissionRelationshipsBuildData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class BetaAppReviewSubmissionRelationshipsBuildLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    bundle_id: typing.Optional[str] = _PydanticField(alias="bundleId", default=None)
    content_rights_declaration: typing.Optional[
        typing_extensions.Literal[
            "DOES_NOT_USE_THIRD_PARTY_CONTENT", "USES_THIRD_PARTY_CONTENT"
        ]
    ] = _PydanticField(alias="contentRightsDeclaration", default=None)
    is_or_ever_was_made_for_kids: typing.Optional[bool] = _PydanticField(
        alias="isOrEverWasMadeForKids", default=None
    )
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    primary_locale: typing.Optional[str] = _PydanticField(
        alias="primaryLocale", default=None
    )
    sku: typing.Optional[str] = _PydanticField(alias="sku", default=None)
    subscription_status_url: typing.Optional[str] = _PydanticField(
        alias="subscriptionStatusUrl", default=None
    )
    subscription_status_url_for_sandbox: typing.Optional[str] = _PydanticField(
        alias="subscriptionStatusUrlForSandbox", default=None
    )
    subscription_status_url_version: typing.Optional[
        typing_extensions.Literal["V1", "V2", "v1", "v2"]
    ] = _PydanticField(alias="subscriptionStatusUrlVersion", default=None)
    subscription_status_url_version_for_sandbox: typing.Optional[
        typing_extensions.Literal["V1", "V2", "v1", "v2"]
    ] = _PydanticField(alias="subscriptionStatusUrlVersionForSandbox", default=None)


class AppRelationshipsAppClipsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClips"] = _PydanticField(alias="type")


class AppRelationshipsAppClipsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppCustomProductPagesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appCustomProductPages"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsAppCustomProductPagesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppEncryptionDeclarationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEncryptionDeclarations"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsAppEncryptionDeclarationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppEventsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEvents"] = _PydanticField(alias="type")


class AppRelationshipsAppEventsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppInfosDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appInfos"] = _PydanticField(alias="type")


class AppRelationshipsAppInfosLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppStoreVersionExperimentsV2DataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsAppStoreVersionExperimentsV2Links(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsAppStoreVersionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = _PydanticField(alias="type")


class AppRelationshipsAppStoreVersionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsBetaAppLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaAppLocalizations"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsBetaAppLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsBetaAppReviewDetailData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaAppReviewDetails"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsBetaAppReviewDetailLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsBetaGroupsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaGroups"] = _PydanticField(alias="type")


class AppRelationshipsBetaGroupsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsBetaLicenseAgreementData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaLicenseAgreements"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsBetaLicenseAgreementLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsBuildsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class AppRelationshipsBuildsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsCiProductData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["ciProducts"] = _PydanticField(alias="type")


class AppRelationshipsCiProductLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsEndUserLicenseAgreementData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["endUserLicenseAgreements"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsEndUserLicenseAgreementLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsGameCenterDetailData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterDetails"] = _PydanticField(alias="type")


class AppRelationshipsGameCenterDetailLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsGameCenterEnabledVersionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterEnabledVersions"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsGameCenterEnabledVersionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsInAppPurchasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchases"] = _PydanticField(alias="type")


class AppRelationshipsInAppPurchasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsInAppPurchasesV2DataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["inAppPurchases"] = _PydanticField(alias="type")


class AppRelationshipsInAppPurchasesV2Links(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsPreOrderData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appPreOrders"] = _PydanticField(alias="type")


class AppRelationshipsPreOrderLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsPreReleaseVersionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["preReleaseVersions"] = _PydanticField(alias="type")


class AppRelationshipsPreReleaseVersionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsPromotedPurchasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["promotedPurchases"] = _PydanticField(alias="type")


class AppRelationshipsPromotedPurchasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsReviewSubmissionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["reviewSubmissions"] = _PydanticField(alias="type")


class AppRelationshipsReviewSubmissionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsSubscriptionGracePeriodData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionGracePeriods"] = _PydanticField(
        alias="type"
    )


class AppRelationshipsSubscriptionGracePeriodLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppRelationshipsSubscriptionGroupsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["subscriptionGroups"] = _PydanticField(alias="type")


class AppRelationshipsSubscriptionGroupsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildBetaDetailAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    auto_notify_enabled: typing.Optional[bool] = _PydanticField(
        alias="autoNotifyEnabled", default=None
    )
    external_build_state: typing.Optional[
        typing_extensions.Literal[
            "PROCESSING",
            "PROCESSING_EXCEPTION",
            "MISSING_EXPORT_COMPLIANCE",
            "READY_FOR_BETA_TESTING",
            "IN_BETA_TESTING",
            "EXPIRED",
            "READY_FOR_BETA_SUBMISSION",
            "IN_EXPORT_COMPLIANCE_REVIEW",
            "WAITING_FOR_BETA_REVIEW",
            "IN_BETA_REVIEW",
            "BETA_REJECTED",
            "BETA_APPROVED",
        ]
    ] = _PydanticField(alias="externalBuildState", default=None)
    internal_build_state: typing.Optional[
        typing_extensions.Literal[
            "PROCESSING",
            "PROCESSING_EXCEPTION",
            "MISSING_EXPORT_COMPLIANCE",
            "READY_FOR_BETA_TESTING",
            "IN_BETA_TESTING",
            "EXPIRED",
            "IN_EXPORT_COMPLIANCE_REVIEW",
        ]
    ] = _PydanticField(alias="internalBuildState", default=None)


class BuildBetaDetailRelationshipsBuildData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class BuildBetaDetailRelationshipsBuildLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_store_state: typing.Optional[
        typing_extensions.Literal[
            "ACCEPTED",
            "DEVELOPER_REMOVED_FROM_SALE",
            "DEVELOPER_REJECTED",
            "IN_REVIEW",
            "INVALID_BINARY",
            "METADATA_REJECTED",
            "PENDING_APPLE_RELEASE",
            "PENDING_CONTRACT",
            "PENDING_DEVELOPER_RELEASE",
            "PREPARE_FOR_SUBMISSION",
            "PREORDER_READY_FOR_SALE",
            "PROCESSING_FOR_APP_STORE",
            "READY_FOR_REVIEW",
            "READY_FOR_SALE",
            "REJECTED",
            "REMOVED_FROM_SALE",
            "WAITING_FOR_EXPORT_COMPLIANCE",
            "WAITING_FOR_REVIEW",
            "REPLACED_WITH_NEW_VERSION",
            "NOT_APPLICABLE",
        ]
    ] = _PydanticField(alias="appStoreState", default=None)
    app_version_state: typing.Optional[
        typing_extensions.Literal[
            "ACCEPTED",
            "DEVELOPER_REJECTED",
            "IN_REVIEW",
            "INVALID_BINARY",
            "METADATA_REJECTED",
            "PENDING_APPLE_RELEASE",
            "PENDING_DEVELOPER_RELEASE",
            "PREPARE_FOR_SUBMISSION",
            "PROCESSING_FOR_DISTRIBUTION",
            "READY_FOR_DISTRIBUTION",
            "READY_FOR_REVIEW",
            "REJECTED",
            "REPLACED_WITH_NEW_VERSION",
            "WAITING_FOR_EXPORT_COMPLIANCE",
            "WAITING_FOR_REVIEW",
        ]
    ] = _PydanticField(alias="appVersionState", default=None)
    copyright: typing.Optional[str] = _PydanticField(alias="copyright", default=None)
    created_date: typing.Optional[str] = _PydanticField(
        alias="createdDate", default=None
    )
    downloadable: typing.Optional[bool] = _PydanticField(
        alias="downloadable", default=None
    )
    earliest_release_date: typing.Optional[str] = _PydanticField(
        alias="earliestReleaseDate", default=None
    )
    platform_field: typing.Optional[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ] = _PydanticField(alias="platform", default=None)
    release_type: typing.Optional[
        typing_extensions.Literal["MANUAL", "AFTER_APPROVAL", "SCHEDULED"]
    ] = _PydanticField(alias="releaseType", default=None)
    review_type: typing.Optional[
        typing_extensions.Literal["APP_STORE", "NOTARIZATION"]
    ] = _PydanticField(alias="reviewType", default=None)
    version_string: typing.Optional[str] = _PydanticField(
        alias="versionString", default=None
    )


class AppStoreVersionRelationshipsAgeRatingDeclarationData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["ageRatingDeclarations"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAgeRatingDeclarationLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAlternativeDistributionPackageData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["alternativeDistributionPackages"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAlternativeDistributionPackageLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class AppStoreVersionRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppClipDefaultExperienceData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipDefaultExperiences"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppClipDefaultExperienceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreReviewDetailData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreReviewDetails"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreReviewDetailLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreVersionExperimentsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreVersionExperimentsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreVersionExperimentsV2DataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreVersionExperimentsV2Links(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreVersionLocalizationsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionLocalizations"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreVersionLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionPhasedReleases"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsAppStoreVersionSubmissionData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appStoreVersionSubmissions"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsAppStoreVersionSubmissionLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsBuildData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class AppStoreVersionRelationshipsBuildLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppStoreVersionRelationshipsRoutingAppCoverageData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["routingAppCoverages"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionRelationshipsRoutingAppCoverageLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildIconAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    icon_asset: typing.Optional[ImageAsset] = _PydanticField(
        alias="iconAsset", default=None
    )
    icon_type: typing.Optional[
        typing_extensions.Literal[
            "APP_STORE",
            "MESSAGES_APP_STORE",
            "WATCH_APP_STORE",
            "TV_OS_HOME_SCREEN",
            "TV_OS_TOP_SHELF",
            "ALTERNATE_EXPERIMENT",
        ]
    ] = _PydanticField(alias="iconType", default=None)
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)


class BuildBundleAttributesEntitlementsAdditionalProps(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
        extra="allow",
    )
    __pydantic_extra__: typing.Dict[str, str]


class BuildBundleRelationshipsAppClipDomainCacheStatusData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipDomainStatuses"] = _PydanticField(
        alias="type"
    )


class BuildBundleRelationshipsAppClipDomainCacheStatusLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildBundleRelationshipsAppClipDomainDebugStatusData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appClipDomainStatuses"] = _PydanticField(
        alias="type"
    )


class BuildBundleRelationshipsAppClipDomainDebugStatusLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildBundleRelationshipsBetaAppClipInvocationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["betaAppClipInvocations"] = _PydanticField(
        alias="type"
    )


class BuildBundleRelationshipsBetaAppClipInvocationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class BuildBundleRelationshipsBuildBundleFileSizesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["buildBundleFileSizes"] = _PydanticField(
        alias="type"
    )


class BuildBundleRelationshipsBuildBundleFileSizesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagedDocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    first: typing.Optional[str] = _PydanticField(alias="first", default=None)
    next: typing.Optional[str] = _PydanticField(alias="next", default=None)
    self: str = _PydanticField(alias="self")


class BuildAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    build_audience_type: typing.Optional[
        typing_extensions.Literal["INTERNAL_ONLY", "APP_STORE_ELIGIBLE"]
    ] = _PydanticField(alias="buildAudienceType", default=None)
    computed_min_mac_os_version: typing.Optional[str] = _PydanticField(
        alias="computedMinMacOsVersion", default=None
    )
    expiration_date: typing.Optional[str] = _PydanticField(
        alias="expirationDate", default=None
    )
    expired: typing.Optional[bool] = _PydanticField(alias="expired", default=None)
    icon_asset_token: typing.Optional[ImageAsset] = _PydanticField(
        alias="iconAssetToken", default=None
    )
    ls_minimum_system_version: typing.Optional[str] = _PydanticField(
        alias="lsMinimumSystemVersion", default=None
    )
    min_os_version: typing.Optional[str] = _PydanticField(
        alias="minOsVersion", default=None
    )
    processing_state: typing.Optional[
        typing_extensions.Literal["PROCESSING", "FAILED", "INVALID", "VALID"]
    ] = _PydanticField(alias="processingState", default=None)
    uploaded_date: typing.Optional[str] = _PydanticField(
        alias="uploadedDate", default=None
    )
    uses_non_exempt_encryption: typing.Optional[bool] = _PydanticField(
        alias="usesNonExemptEncryption", default=None
    )
    version: typing.Optional[str] = _PydanticField(alias="version", default=None)


class BuildRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BuildRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class BuildRelationshipsAppEncryptionDeclaration(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsAppEncryptionDeclarationData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsAppEncryptionDeclarationLinks] = (
        _PydanticField(alias="links", default=None)
    )


class BuildRelationshipsAppStoreVersion(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsAppStoreVersionData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BuildRelationshipsAppStoreVersionLinks] = _PydanticField(
        alias="links", default=None
    )


class BuildRelationshipsBetaAppReviewSubmission(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsBetaAppReviewSubmissionData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsBetaAppReviewSubmissionLinks] = (
        _PydanticField(alias="links", default=None)
    )


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class BuildRelationshipsBetaGroups(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BuildRelationshipsBetaGroupsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsBetaGroupsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildRelationshipsBuildBetaDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsBuildBetaDetailData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BuildRelationshipsBuildBetaDetailLinks] = _PydanticField(
        alias="links", default=None
    )


class BuildRelationshipsBuildBundles(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BuildRelationshipsBuildBundlesDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsBuildBundlesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildRelationshipsIcons(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BuildRelationshipsIconsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsIconsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildRelationshipsIndividualTesters(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BuildRelationshipsIndividualTestersDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildRelationshipsIndividualTestersLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildRelationshipsPreReleaseVersion(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildRelationshipsPreReleaseVersionData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BuildRelationshipsPreReleaseVersionLinks] = _PydanticField(
        alias="links", default=None
    )


class PrereleaseVersionRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[PrereleaseVersionRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[PrereleaseVersionRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class PrereleaseVersionRelationshipsBuilds(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[PrereleaseVersionRelationshipsBuildsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[PrereleaseVersionRelationshipsBuildsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BetaTesterRelationshipsApps(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BetaTesterRelationshipsAppsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BetaTesterRelationshipsAppsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BetaTesterRelationshipsBetaGroups(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BetaTesterRelationshipsBetaGroupsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BetaTesterRelationshipsBetaGroupsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BetaTesterRelationshipsBuilds(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BetaTesterRelationshipsBuildsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BetaTesterRelationshipsBuildsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BetaGroupRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BetaGroupRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BetaGroupRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class BetaGroupRelationshipsBetaTesters(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BetaGroupRelationshipsBetaTestersDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BetaGroupRelationshipsBetaTestersLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BetaGroupRelationshipsBuilds(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[BetaGroupRelationshipsBuildsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BetaGroupRelationshipsBuildsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BetaBuildLocalizationRelationshipsBuild(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BetaBuildLocalizationRelationshipsBuildData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BetaBuildLocalizationRelationshipsBuildLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppEncryptionDeclarationRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppEncryptionDeclarationRelationshipsAppData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppEncryptionDeclarationRelationshipsAppLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocument(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocumentLinks
    ] = _PydanticField(alias="links", default=None)


class AppEncryptionDeclarationRelationshipsBuilds(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppEncryptionDeclarationRelationshipsBuildsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppEncryptionDeclarationRelationshipsBuildsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BetaAppReviewSubmissionRelationshipsBuild(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BetaAppReviewSubmissionRelationshipsBuildData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BetaAppReviewSubmissionRelationshipsBuildLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppRelationshipsAppClips(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsAppClipsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsAppClipsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsAppCustomProductPages(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppRelationshipsAppCustomProductPagesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppRelationshipsAppCustomProductPagesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsAppEncryptionDeclarations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppRelationshipsAppEncryptionDeclarationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppRelationshipsAppEncryptionDeclarationsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsAppEvents(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsAppEventsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsAppEventsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsAppInfos(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsAppInfosDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsAppInfosLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsAppStoreVersionExperimentsV2(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppRelationshipsAppStoreVersionExperimentsV2DataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppRelationshipsAppStoreVersionExperimentsV2Links] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsAppStoreVersions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsAppStoreVersionsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsAppStoreVersionsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsBetaAppLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsBetaAppLocalizationsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsBetaAppLocalizationsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsBetaAppReviewDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsBetaAppReviewDetailData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsBetaAppReviewDetailLinks] = _PydanticField(
        alias="links", default=None
    )


class AppRelationshipsBetaGroups(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsBetaGroupsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsBetaGroupsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsBetaLicenseAgreement(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsBetaLicenseAgreementData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsBetaLicenseAgreementLinks] = _PydanticField(
        alias="links", default=None
    )


class AppRelationshipsBuilds(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsBuildsDataItem]] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsBuildsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsCiProduct(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsCiProductData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsCiProductLinks] = _PydanticField(
        alias="links", default=None
    )


class AppRelationshipsEndUserLicenseAgreement(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsEndUserLicenseAgreementData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsEndUserLicenseAgreementLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppRelationshipsGameCenterDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsGameCenterDetailData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsGameCenterDetailLinks] = _PydanticField(
        alias="links", default=None
    )


class AppRelationshipsGameCenterEnabledVersions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppRelationshipsGameCenterEnabledVersionsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppRelationshipsGameCenterEnabledVersionsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsInAppPurchases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsInAppPurchasesDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsInAppPurchasesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsInAppPurchasesV2(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsInAppPurchasesV2DataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsInAppPurchasesV2Links] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsPreOrder(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsPreOrderData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsPreOrderLinks] = _PydanticField(
        alias="links", default=None
    )


class AppRelationshipsPreReleaseVersions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsPreReleaseVersionsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsPreReleaseVersionsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsPromotedPurchases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsPromotedPurchasesDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsPromotedPurchasesLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsReviewSubmissions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsReviewSubmissionsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsReviewSubmissionsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppRelationshipsSubscriptionGracePeriod(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppRelationshipsSubscriptionGracePeriodData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppRelationshipsSubscriptionGracePeriodLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppRelationshipsSubscriptionGroups(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppRelationshipsSubscriptionGroupsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppRelationshipsSubscriptionGroupsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildBetaDetailRelationshipsBuild(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildBetaDetailRelationshipsBuildData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[BuildBetaDetailRelationshipsBuildLinks] = _PydanticField(
        alias="links", default=None
    )


class AppStoreVersionRelationshipsAgeRatingDeclaration(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsAgeRatingDeclarationData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppStoreVersionRelationshipsAgeRatingDeclarationLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppStoreVersionRelationshipsAlternativeDistributionPackage(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppStoreVersionRelationshipsAlternativeDistributionPackageData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionRelationshipsAlternativeDistributionPackageLinks
    ] = _PydanticField(alias="links", default=None)


class AppStoreVersionRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppStoreVersionRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class AppStoreVersionRelationshipsAppClipDefaultExperience(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsAppClipDefaultExperienceData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[
        AppStoreVersionRelationshipsAppClipDefaultExperienceLinks
    ] = _PydanticField(alias="links", default=None)


class AppStoreVersionRelationshipsAppStoreReviewDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsAppStoreReviewDetailData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppStoreVersionRelationshipsAppStoreReviewDetailLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppStoreVersionRelationshipsAppStoreVersionExperiments(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppStoreVersionRelationshipsAppStoreVersionExperimentsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionExperimentsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppStoreVersionRelationshipsAppStoreVersionExperimentsV2(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppStoreVersionRelationshipsAppStoreVersionExperimentsV2DataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionExperimentsV2Links
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppStoreVersionRelationshipsAppStoreVersionLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppStoreVersionRelationshipsAppStoreVersionLocalizationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionLocalizationsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppStoreVersionRelationshipsAppStoreVersionPhasedRelease(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseLinks
    ] = _PydanticField(alias="links", default=None)


class AppStoreVersionRelationshipsAppStoreVersionSubmission(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsAppStoreVersionSubmissionData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionSubmissionLinks
    ] = _PydanticField(alias="links", default=None)


class AppStoreVersionRelationshipsBuild(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsBuildData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[AppStoreVersionRelationshipsBuildLinks] = _PydanticField(
        alias="links", default=None
    )


class AppStoreVersionRelationshipsRoutingAppCoverage(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppStoreVersionRelationshipsRoutingAppCoverageData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppStoreVersionRelationshipsRoutingAppCoverageLinks] = (
        _PydanticField(alias="links", default=None)
    )


class BuildIcon(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BuildIconAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    type: typing_extensions.Literal["buildIcons"] = _PydanticField(alias="type")


class BuildBundleAttributesEntitlements(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
        extra="allow",
    )
    __pydantic_extra__: typing.Dict[
        str, BuildBundleAttributesEntitlementsAdditionalProps
    ]


class BuildBundleRelationshipsAppClipDomainCacheStatus(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildBundleRelationshipsAppClipDomainCacheStatusData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildBundleRelationshipsAppClipDomainCacheStatusLinks] = (
        _PydanticField(alias="links", default=None)
    )


class BuildBundleRelationshipsAppClipDomainDebugStatus(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[BuildBundleRelationshipsAppClipDomainDebugStatusData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[BuildBundleRelationshipsAppClipDomainDebugStatusLinks] = (
        _PydanticField(alias="links", default=None)
    )


class BuildBundleRelationshipsBetaAppClipInvocations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[BuildBundleRelationshipsBetaAppClipInvocationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[BuildBundleRelationshipsBetaAppClipInvocationsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildBundleRelationshipsBuildBundleFileSizes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[BuildBundleRelationshipsBuildBundleFileSizesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[BuildBundleRelationshipsBuildBundleFileSizesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class BuildRelationshipsBetaBuildLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[BuildRelationshipsBetaBuildLocalizationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[BuildRelationshipsBetaBuildLocalizationsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class PrereleaseVersionRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[PrereleaseVersionRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    builds: typing.Optional[PrereleaseVersionRelationshipsBuilds] = _PydanticField(
        alias="builds", default=None
    )


class BetaTesterRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    apps: typing.Optional[BetaTesterRelationshipsApps] = _PydanticField(
        alias="apps", default=None
    )
    beta_groups: typing.Optional[BetaTesterRelationshipsBetaGroups] = _PydanticField(
        alias="betaGroups", default=None
    )
    builds: typing.Optional[BetaTesterRelationshipsBuilds] = _PydanticField(
        alias="builds", default=None
    )


class BetaGroupRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[BetaGroupRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    beta_testers: typing.Optional[BetaGroupRelationshipsBetaTesters] = _PydanticField(
        alias="betaTesters", default=None
    )
    builds: typing.Optional[BetaGroupRelationshipsBuilds] = _PydanticField(
        alias="builds", default=None
    )


class BetaBuildLocalizationRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    build: typing.Optional[BetaBuildLocalizationRelationshipsBuild] = _PydanticField(
        alias="build", default=None
    )


class AppEncryptionDeclarationRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[AppEncryptionDeclarationRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_encryption_declaration_document: typing.Optional[
        AppEncryptionDeclarationRelationshipsAppEncryptionDeclarationDocument
    ] = _PydanticField(alias="appEncryptionDeclarationDocument", default=None)
    builds: typing.Optional[AppEncryptionDeclarationRelationshipsBuilds] = (
        _PydanticField(alias="builds", default=None)
    )


class BetaAppReviewSubmissionRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    build: typing.Optional[BetaAppReviewSubmissionRelationshipsBuild] = _PydanticField(
        alias="build", default=None
    )


class AppRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_clips: typing.Optional[AppRelationshipsAppClips] = _PydanticField(
        alias="appClips", default=None
    )
    app_custom_product_pages: typing.Optional[AppRelationshipsAppCustomProductPages] = (
        _PydanticField(alias="appCustomProductPages", default=None)
    )
    app_encryption_declarations: typing.Optional[
        AppRelationshipsAppEncryptionDeclarations
    ] = _PydanticField(alias="appEncryptionDeclarations", default=None)
    app_events: typing.Optional[AppRelationshipsAppEvents] = _PydanticField(
        alias="appEvents", default=None
    )
    app_infos: typing.Optional[AppRelationshipsAppInfos] = _PydanticField(
        alias="appInfos", default=None
    )
    app_store_version_experiments_v2: typing.Optional[
        AppRelationshipsAppStoreVersionExperimentsV2
    ] = _PydanticField(alias="appStoreVersionExperimentsV2", default=None)
    app_store_versions: typing.Optional[AppRelationshipsAppStoreVersions] = (
        _PydanticField(alias="appStoreVersions", default=None)
    )
    beta_app_localizations: typing.Optional[AppRelationshipsBetaAppLocalizations] = (
        _PydanticField(alias="betaAppLocalizations", default=None)
    )
    beta_app_review_detail: typing.Optional[AppRelationshipsBetaAppReviewDetail] = (
        _PydanticField(alias="betaAppReviewDetail", default=None)
    )
    beta_groups: typing.Optional[AppRelationshipsBetaGroups] = _PydanticField(
        alias="betaGroups", default=None
    )
    beta_license_agreement: typing.Optional[AppRelationshipsBetaLicenseAgreement] = (
        _PydanticField(alias="betaLicenseAgreement", default=None)
    )
    builds: typing.Optional[AppRelationshipsBuilds] = _PydanticField(
        alias="builds", default=None
    )
    ci_product: typing.Optional[AppRelationshipsCiProduct] = _PydanticField(
        alias="ciProduct", default=None
    )
    end_user_license_agreement: typing.Optional[
        AppRelationshipsEndUserLicenseAgreement
    ] = _PydanticField(alias="endUserLicenseAgreement", default=None)
    game_center_detail: typing.Optional[AppRelationshipsGameCenterDetail] = (
        _PydanticField(alias="gameCenterDetail", default=None)
    )
    game_center_enabled_versions: typing.Optional[
        AppRelationshipsGameCenterEnabledVersions
    ] = _PydanticField(alias="gameCenterEnabledVersions", default=None)
    in_app_purchases: typing.Optional[AppRelationshipsInAppPurchases] = _PydanticField(
        alias="inAppPurchases", default=None
    )
    in_app_purchases_v2: typing.Optional[AppRelationshipsInAppPurchasesV2] = (
        _PydanticField(alias="inAppPurchasesV2", default=None)
    )
    pre_order: typing.Optional[AppRelationshipsPreOrder] = _PydanticField(
        alias="preOrder", default=None
    )
    pre_release_versions: typing.Optional[AppRelationshipsPreReleaseVersions] = (
        _PydanticField(alias="preReleaseVersions", default=None)
    )
    promoted_purchases: typing.Optional[AppRelationshipsPromotedPurchases] = (
        _PydanticField(alias="promotedPurchases", default=None)
    )
    review_submissions: typing.Optional[AppRelationshipsReviewSubmissions] = (
        _PydanticField(alias="reviewSubmissions", default=None)
    )
    subscription_grace_period: typing.Optional[
        AppRelationshipsSubscriptionGracePeriod
    ] = _PydanticField(alias="subscriptionGracePeriod", default=None)
    subscription_groups: typing.Optional[AppRelationshipsSubscriptionGroups] = (
        _PydanticField(alias="subscriptionGroups", default=None)
    )


class BuildBetaDetailRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    build: typing.Optional[BuildBetaDetailRelationshipsBuild] = _PydanticField(
        alias="build", default=None
    )


class AppStoreVersionRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    age_rating_declaration: typing.Optional[
        AppStoreVersionRelationshipsAgeRatingDeclaration
    ] = _PydanticField(alias="ageRatingDeclaration", default=None)
    alternative_distribution_package: typing.Optional[
        AppStoreVersionRelationshipsAlternativeDistributionPackage
    ] = _PydanticField(alias="alternativeDistributionPackage", default=None)
    app: typing.Optional[AppStoreVersionRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_clip_default_experience: typing.Optional[
        AppStoreVersionRelationshipsAppClipDefaultExperience
    ] = _PydanticField(alias="appClipDefaultExperience", default=None)
    app_store_review_detail: typing.Optional[
        AppStoreVersionRelationshipsAppStoreReviewDetail
    ] = _PydanticField(alias="appStoreReviewDetail", default=None)
    app_store_version_experiments: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionExperiments
    ] = _PydanticField(alias="appStoreVersionExperiments", default=None)
    app_store_version_experiments_v2: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionExperimentsV2
    ] = _PydanticField(alias="appStoreVersionExperimentsV2", default=None)
    app_store_version_localizations: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionLocalizations
    ] = _PydanticField(alias="appStoreVersionLocalizations", default=None)
    app_store_version_phased_release: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionPhasedRelease
    ] = _PydanticField(alias="appStoreVersionPhasedRelease", default=None)
    app_store_version_submission: typing.Optional[
        AppStoreVersionRelationshipsAppStoreVersionSubmission
    ] = _PydanticField(alias="appStoreVersionSubmission", default=None)
    build: typing.Optional[AppStoreVersionRelationshipsBuild] = _PydanticField(
        alias="build", default=None
    )
    routing_app_coverage: typing.Optional[
        AppStoreVersionRelationshipsRoutingAppCoverage
    ] = _PydanticField(alias="routingAppCoverage", default=None)


class BuildBundleAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    bundle_id: typing.Optional[str] = _PydanticField(alias="bundleId", default=None)
    bundle_type: typing.Optional[typing_extensions.Literal["APP", "APP_CLIP"]] = (
        _PydanticField(alias="bundleType", default=None)
    )
    d_sym_url: typing.Optional[str] = _PydanticField(alias="dSYMUrl", default=None)
    device_protocols: typing.Optional[typing.List[str]] = _PydanticField(
        alias="deviceProtocols", default=None
    )
    entitlements: typing.Optional[BuildBundleAttributesEntitlements] = _PydanticField(
        alias="entitlements", default=None
    )
    file_name: typing.Optional[str] = _PydanticField(alias="fileName", default=None)
    has_on_demand_resources: typing.Optional[bool] = _PydanticField(
        alias="hasOnDemandResources", default=None
    )
    has_prerendered_icon: typing.Optional[bool] = _PydanticField(
        alias="hasPrerenderedIcon", default=None
    )
    has_sirikit: typing.Optional[bool] = _PydanticField(
        alias="hasSirikit", default=None
    )
    includes_symbols: typing.Optional[bool] = _PydanticField(
        alias="includesSymbols", default=None
    )
    is_ios_build_mac_app_store_compatible: typing.Optional[bool] = _PydanticField(
        alias="isIosBuildMacAppStoreCompatible", default=None
    )
    locales: typing.Optional[typing.List[str]] = _PydanticField(
        alias="locales", default=None
    )
    platform_build: typing.Optional[str] = _PydanticField(
        alias="platformBuild", default=None
    )
    required_capabilities: typing.Optional[typing.List[str]] = _PydanticField(
        alias="requiredCapabilities", default=None
    )
    sdk_build: typing.Optional[str] = _PydanticField(alias="sdkBuild", default=None)
    supported_architectures: typing.Optional[typing.List[str]] = _PydanticField(
        alias="supportedArchitectures", default=None
    )
    uses_location_services: typing.Optional[bool] = _PydanticField(
        alias="usesLocationServices", default=None
    )


class BuildBundleRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_clip_domain_cache_status: typing.Optional[
        BuildBundleRelationshipsAppClipDomainCacheStatus
    ] = _PydanticField(alias="appClipDomainCacheStatus", default=None)
    app_clip_domain_debug_status: typing.Optional[
        BuildBundleRelationshipsAppClipDomainDebugStatus
    ] = _PydanticField(alias="appClipDomainDebugStatus", default=None)
    beta_app_clip_invocations: typing.Optional[
        BuildBundleRelationshipsBetaAppClipInvocations
    ] = _PydanticField(alias="betaAppClipInvocations", default=None)
    build_bundle_file_sizes: typing.Optional[
        BuildBundleRelationshipsBuildBundleFileSizes
    ] = _PydanticField(alias="buildBundleFileSizes", default=None)


class BuildRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app: typing.Optional[BuildRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    app_encryption_declaration: typing.Optional[
        BuildRelationshipsAppEncryptionDeclaration
    ] = _PydanticField(alias="appEncryptionDeclaration", default=None)
    app_store_version: typing.Optional[BuildRelationshipsAppStoreVersion] = (
        _PydanticField(alias="appStoreVersion", default=None)
    )
    beta_app_review_submission: typing.Optional[
        BuildRelationshipsBetaAppReviewSubmission
    ] = _PydanticField(alias="betaAppReviewSubmission", default=None)
    beta_build_localizations: typing.Optional[
        BuildRelationshipsBetaBuildLocalizations
    ] = _PydanticField(alias="betaBuildLocalizations", default=None)
    beta_groups: typing.Optional[BuildRelationshipsBetaGroups] = _PydanticField(
        alias="betaGroups", default=None
    )
    build_beta_detail: typing.Optional[BuildRelationshipsBuildBetaDetail] = (
        _PydanticField(alias="buildBetaDetail", default=None)
    )
    build_bundles: typing.Optional[BuildRelationshipsBuildBundles] = _PydanticField(
        alias="buildBundles", default=None
    )
    icons: typing.Optional[BuildRelationshipsIcons] = _PydanticField(
        alias="icons", default=None
    )
    individual_testers: typing.Optional[BuildRelationshipsIndividualTesters] = (
        _PydanticField(alias="individualTesters", default=None)
    )
    pre_release_version: typing.Optional[BuildRelationshipsPreReleaseVersion] = (
        _PydanticField(alias="preReleaseVersion", default=None)
    )


class PrereleaseVersion(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[PrereleaseVersionAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[PrereleaseVersionRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["preReleaseVersions"] = _PydanticField(alias="type")


class BetaTester(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BetaTesterAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BetaTesterRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["betaTesters"] = _PydanticField(alias="type")


class BetaGroup(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BetaGroupAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BetaGroupRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["betaGroups"] = _PydanticField(alias="type")


class BetaBuildLocalization(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BetaBuildLocalizationAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BetaBuildLocalizationRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["betaBuildLocalizations"] = _PydanticField(
        alias="type"
    )


class AppEncryptionDeclaration(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppEncryptionDeclarationAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppEncryptionDeclarationRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["appEncryptionDeclarations"] = _PydanticField(
        alias="type"
    )


class BetaAppReviewSubmission(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BetaAppReviewSubmissionAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BetaAppReviewSubmissionRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["betaAppReviewSubmissions"] = _PydanticField(
        alias="type"
    )


class App(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class BuildBetaDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BuildBetaDetailAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BuildBetaDetailRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["buildBetaDetails"] = _PydanticField(alias="type")


class AppStoreVersion(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppStoreVersionAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppStoreVersionRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appStoreVersions"] = _PydanticField(alias="type")


class BuildBundle(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BuildBundleAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BuildBundleRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["buildBundles"] = _PydanticField(alias="type")


class Build(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BuildAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[BuildRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class BuildsResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.List[Build] = _PydanticField(alias="data")
    included: typing.Optional[
        typing.List[
            typing.Union[
                PrereleaseVersion,
                BetaTester,
                BetaGroup,
                BetaBuildLocalization,
                AppEncryptionDeclaration,
                BetaAppReviewSubmission,
                App,
                BuildBetaDetail,
                AppStoreVersion,
                BuildIcon,
                BuildBundle,
            ]
        ]
    ] = _PydanticField(alias="included", default=None)
    links: PagedDocumentLinks = _PydanticField(alias="links")
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )
