"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class CiIssueCounts(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    analyzer_warnings: typing.Optional[int] = _PydanticField(
        alias="analyzerWarnings", default=None
    )
    errors: typing.Optional[int] = _PydanticField(alias="errors", default=None)
    test_failures: typing.Optional[int] = _PydanticField(
        alias="testFailures", default=None
    )
    warnings_field: typing.Optional[int] = _PydanticField(
        alias="warnings", default=None
    )


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class CiBuildActionRelationshipsBuildRunData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["ciBuildRuns"] = _PydanticField(alias="type")


class CiBuildActionRelationshipsBuildRunLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class CiGitUser(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    avatar_url: typing.Optional[str] = _PydanticField(alias="avatarUrl", default=None)
    display_name: typing.Optional[str] = _PydanticField(
        alias="displayName", default=None
    )


class CiBuildRunAttributesSourceCommit(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    author: typing.Optional[CiGitUser] = _PydanticField(alias="author", default=None)
    commit_sha: typing.Optional[str] = _PydanticField(alias="commitSha", default=None)
    committer: typing.Optional[CiGitUser] = _PydanticField(
        alias="committer", default=None
    )
    message: typing.Optional[str] = _PydanticField(alias="message", default=None)
    web_url: typing.Optional[str] = _PydanticField(alias="webUrl", default=None)


class CiBuildRunRelationshipsBuildsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["builds"] = _PydanticField(alias="type")


class CiBuildRunRelationshipsBuildsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class CiBuildRunRelationshipsDestinationBranchData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["scmGitReferences"] = _PydanticField(alias="type")


class CiBuildRunRelationshipsDestinationBranchLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class CiBuildRunRelationshipsProductData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["ciProducts"] = _PydanticField(alias="type")


class CiBuildRunRelationshipsProductLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class CiBuildRunRelationshipsPullRequestData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["scmPullRequests"] = _PydanticField(alias="type")


class CiBuildRunRelationshipsPullRequestLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class CiBuildRunRelationshipsSourceBranchOrTagData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["scmGitReferences"] = _PydanticField(alias="type")


class CiBuildRunRelationshipsSourceBranchOrTagLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class CiBuildRunRelationshipsWorkflowData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["ciWorkflows"] = _PydanticField(alias="type")


class CiBuildRunRelationshipsWorkflowLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagedDocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    first: typing.Optional[str] = _PydanticField(alias="first", default=None)
    next: typing.Optional[str] = _PydanticField(alias="next", default=None)
    self: str = _PydanticField(alias="self")


class CiBuildActionAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    action_type: typing.Optional[
        typing_extensions.Literal["BUILD", "ANALYZE", "TEST", "ARCHIVE"]
    ] = _PydanticField(alias="actionType", default=None)
    completion_status: typing.Optional[
        typing_extensions.Literal[
            "SUCCEEDED", "FAILED", "ERRORED", "CANCELED", "SKIPPED"
        ]
    ] = _PydanticField(alias="completionStatus", default=None)
    execution_progress: typing.Optional[
        typing_extensions.Literal["PENDING", "RUNNING", "COMPLETE"]
    ] = _PydanticField(alias="executionProgress", default=None)
    finished_date: typing.Optional[str] = _PydanticField(
        alias="finishedDate", default=None
    )
    is_required_to_pass: typing.Optional[bool] = _PydanticField(
        alias="isRequiredToPass", default=None
    )
    issue_counts: typing.Optional[CiIssueCounts] = _PydanticField(
        alias="issueCounts", default=None
    )
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    started_date: typing.Optional[str] = _PydanticField(
        alias="startedDate", default=None
    )


class CiBuildActionRelationshipsBuildRun(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[CiBuildActionRelationshipsBuildRunData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[CiBuildActionRelationshipsBuildRunLinks] = _PydanticField(
        alias="links", default=None
    )


class CiBuildRunAttributesDestinationCommit(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    author: typing.Optional[CiGitUser] = _PydanticField(alias="author", default=None)
    commit_sha: typing.Optional[str] = _PydanticField(alias="commitSha", default=None)
    committer: typing.Optional[CiGitUser] = _PydanticField(
        alias="committer", default=None
    )
    message: typing.Optional[str] = _PydanticField(alias="message", default=None)
    web_url: typing.Optional[str] = _PydanticField(alias="webUrl", default=None)


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class CiBuildRunRelationshipsDestinationBranch(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[CiBuildRunRelationshipsDestinationBranchData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[CiBuildRunRelationshipsDestinationBranchLinks] = (
        _PydanticField(alias="links", default=None)
    )


class CiBuildRunRelationshipsProduct(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[CiBuildRunRelationshipsProductData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[CiBuildRunRelationshipsProductLinks] = _PydanticField(
        alias="links", default=None
    )


class CiBuildRunRelationshipsPullRequest(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[CiBuildRunRelationshipsPullRequestData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[CiBuildRunRelationshipsPullRequestLinks] = _PydanticField(
        alias="links", default=None
    )


class CiBuildRunRelationshipsSourceBranchOrTag(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[CiBuildRunRelationshipsSourceBranchOrTagData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[CiBuildRunRelationshipsSourceBranchOrTagLinks] = (
        _PydanticField(alias="links", default=None)
    )


class CiBuildRunRelationshipsWorkflow(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[CiBuildRunRelationshipsWorkflowData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[CiBuildRunRelationshipsWorkflowLinks] = _PydanticField(
        alias="links", default=None
    )


class CiBuildActionRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    build_run: typing.Optional[CiBuildActionRelationshipsBuildRun] = _PydanticField(
        alias="buildRun", default=None
    )


class CiBuildRunAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    cancel_reason: typing.Optional[
        typing_extensions.Literal["AUTOMATICALLY_BY_NEWER_BUILD", "MANUALLY_BY_USER"]
    ] = _PydanticField(alias="cancelReason", default=None)
    completion_status: typing.Optional[
        typing_extensions.Literal[
            "SUCCEEDED", "FAILED", "ERRORED", "CANCELED", "SKIPPED"
        ]
    ] = _PydanticField(alias="completionStatus", default=None)
    created_date: typing.Optional[str] = _PydanticField(
        alias="createdDate", default=None
    )
    destination_commit: typing.Optional[CiBuildRunAttributesDestinationCommit] = (
        _PydanticField(alias="destinationCommit", default=None)
    )
    execution_progress: typing.Optional[
        typing_extensions.Literal["PENDING", "RUNNING", "COMPLETE"]
    ] = _PydanticField(alias="executionProgress", default=None)
    finished_date: typing.Optional[str] = _PydanticField(
        alias="finishedDate", default=None
    )
    is_pull_request_build: typing.Optional[bool] = _PydanticField(
        alias="isPullRequestBuild", default=None
    )
    issue_counts: typing.Optional[CiIssueCounts] = _PydanticField(
        alias="issueCounts", default=None
    )
    number: typing.Optional[int] = _PydanticField(alias="number", default=None)
    source_commit: typing.Optional[CiBuildRunAttributesSourceCommit] = _PydanticField(
        alias="sourceCommit", default=None
    )
    start_reason: typing.Optional[
        typing_extensions.Literal[
            "GIT_REF_CHANGE",
            "MANUAL",
            "MANUAL_REBUILD",
            "PULL_REQUEST_OPEN",
            "PULL_REQUEST_UPDATE",
            "SCHEDULE",
        ]
    ] = _PydanticField(alias="startReason", default=None)
    started_date: typing.Optional[str] = _PydanticField(
        alias="startedDate", default=None
    )


class CiBuildRunRelationshipsBuilds(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[CiBuildRunRelationshipsBuildsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[CiBuildRunRelationshipsBuildsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class CiBuildAction(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[CiBuildActionAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[CiBuildActionRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["ciBuildActions"] = _PydanticField(alias="type")


class CiBuildRunRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    builds: typing.Optional[CiBuildRunRelationshipsBuilds] = _PydanticField(
        alias="builds", default=None
    )
    destination_branch: typing.Optional[CiBuildRunRelationshipsDestinationBranch] = (
        _PydanticField(alias="destinationBranch", default=None)
    )
    product: typing.Optional[CiBuildRunRelationshipsProduct] = _PydanticField(
        alias="product", default=None
    )
    pull_request: typing.Optional[CiBuildRunRelationshipsPullRequest] = _PydanticField(
        alias="pullRequest", default=None
    )
    source_branch_or_tag: typing.Optional[CiBuildRunRelationshipsSourceBranchOrTag] = (
        _PydanticField(alias="sourceBranchOrTag", default=None)
    )
    workflow: typing.Optional[CiBuildRunRelationshipsWorkflow] = _PydanticField(
        alias="workflow", default=None
    )


class CiBuildRun(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[CiBuildRunAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[CiBuildRunRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["ciBuildRuns"] = _PydanticField(alias="type")


class CiBuildActionsResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.List[CiBuildAction] = _PydanticField(alias="data")
    included: typing.Optional[typing.List[CiBuildRun]] = _PydanticField(
        alias="included", default=None
    )
    links: PagedDocumentLinks = _PydanticField(alias="links")
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )
