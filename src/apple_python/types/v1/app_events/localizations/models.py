"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class AppEventLocalizationAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    locale_field: typing.Optional[str] = _PydanticField(alias="locale", default=None)
    long_description: typing.Optional[str] = _PydanticField(
        alias="longDescription", default=None
    )
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    short_description: typing.Optional[str] = _PydanticField(
        alias="shortDescription", default=None
    )


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEventLocalizationRelationshipsAppEventData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEvents"] = _PydanticField(alias="type")


class AppEventLocalizationRelationshipsAppEventLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEventLocalizationRelationshipsAppEventScreenshotsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEventScreenshots"] = _PydanticField(
        alias="type"
    )


class AppEventLocalizationRelationshipsAppEventScreenshotsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class AppEventLocalizationRelationshipsAppEventVideoClipsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEventVideoClips"] = _PydanticField(alias="type")


class AppEventLocalizationRelationshipsAppEventVideoClipsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEventAttributesArchivedTerritorySchedulesItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    event_end: typing.Optional[str] = _PydanticField(alias="eventEnd", default=None)
    event_start: typing.Optional[str] = _PydanticField(alias="eventStart", default=None)
    publish_start: typing.Optional[str] = _PydanticField(
        alias="publishStart", default=None
    )
    territories: typing.Optional[typing.List[str]] = _PydanticField(
        alias="territories", default=None
    )


class AppEventAttributesTerritorySchedulesItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    event_end: typing.Optional[str] = _PydanticField(alias="eventEnd", default=None)
    event_start: typing.Optional[str] = _PydanticField(alias="eventStart", default=None)
    publish_start: typing.Optional[str] = _PydanticField(
        alias="publishStart", default=None
    )
    territories: typing.Optional[typing.List[str]] = _PydanticField(
        alias="territories", default=None
    )


class AppEventRelationshipsLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEventLocalizations"] = _PydanticField(
        alias="type"
    )


class AppEventRelationshipsLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppMediaStateError(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    code_field: typing.Optional[str] = _PydanticField(alias="code", default=None)
    description: typing.Optional[str] = _PydanticField(
        alias="description", default=None
    )


class ImageAsset(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    height: typing.Optional[int] = _PydanticField(alias="height", default=None)
    template_url: typing.Optional[str] = _PydanticField(
        alias="templateUrl", default=None
    )
    width: typing.Optional[int] = _PydanticField(alias="width", default=None)


class HttpHeader(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    value: typing.Optional[str] = _PydanticField(alias="value", default=None)


class AppEventScreenshotRelationshipsAppEventLocalizationData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEventLocalizations"] = _PydanticField(
        alias="type"
    )


class AppEventScreenshotRelationshipsAppEventLocalizationLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class AppEventVideoClipRelationshipsAppEventLocalizationData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["appEventLocalizations"] = _PydanticField(
        alias="type"
    )


class AppEventVideoClipRelationshipsAppEventLocalizationLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagedDocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    first: typing.Optional[str] = _PydanticField(alias="first", default=None)
    next: typing.Optional[str] = _PydanticField(alias="next", default=None)
    self: str = _PydanticField(alias="self")


class AppEventLocalizationRelationshipsAppEvent(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppEventLocalizationRelationshipsAppEventData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppEventLocalizationRelationshipsAppEventLinks] = (
        _PydanticField(alias="links", default=None)
    )


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class AppEventLocalizationRelationshipsAppEventVideoClips(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppEventLocalizationRelationshipsAppEventVideoClipsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[AppEventLocalizationRelationshipsAppEventVideoClipsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppEventAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    archived_territory_schedules: typing.Optional[
        typing.List[AppEventAttributesArchivedTerritorySchedulesItem]
    ] = _PydanticField(alias="archivedTerritorySchedules", default=None)
    badge: typing.Optional[
        typing_extensions.Literal[
            "LIVE_EVENT",
            "PREMIERE",
            "CHALLENGE",
            "COMPETITION",
            "NEW_SEASON",
            "MAJOR_UPDATE",
            "SPECIAL_EVENT",
        ]
    ] = _PydanticField(alias="badge", default=None)
    deep_link: typing.Optional[str] = _PydanticField(alias="deepLink", default=None)
    event_state: typing.Optional[
        typing_extensions.Literal[
            "DRAFT",
            "READY_FOR_REVIEW",
            "WAITING_FOR_REVIEW",
            "IN_REVIEW",
            "REJECTED",
            "ACCEPTED",
            "APPROVED",
            "PUBLISHED",
            "PAST",
            "ARCHIVED",
        ]
    ] = _PydanticField(alias="eventState", default=None)
    primary_locale: typing.Optional[str] = _PydanticField(
        alias="primaryLocale", default=None
    )
    priority: typing.Optional[typing_extensions.Literal["HIGH", "NORMAL"]] = (
        _PydanticField(alias="priority", default=None)
    )
    purchase_requirement: typing.Optional[
        typing_extensions.Literal[
            "NO_COST_ASSOCIATED",
            "IN_APP_PURCHASE",
            "SUBSCRIPTION",
            "IN_APP_PURCHASE_AND_SUBSCRIPTION",
            "IN_APP_PURCHASE_OR_SUBSCRIPTION",
        ]
    ] = _PydanticField(alias="purchaseRequirement", default=None)
    purpose: typing.Optional[
        typing_extensions.Literal[
            "APPROPRIATE_FOR_ALL_USERS",
            "ATTRACT_NEW_USERS",
            "KEEP_ACTIVE_USERS_INFORMED",
            "BRING_BACK_LAPSED_USERS",
        ]
    ] = _PydanticField(alias="purpose", default=None)
    reference_name: typing.Optional[str] = _PydanticField(
        alias="referenceName", default=None
    )
    territory_schedules: typing.Optional[
        typing.List[AppEventAttributesTerritorySchedulesItem]
    ] = _PydanticField(alias="territorySchedules", default=None)


class AppEventRelationshipsLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[typing.List[AppEventRelationshipsLocalizationsDataItem]] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppEventRelationshipsLocalizationsLinks] = _PydanticField(
        alias="links", default=None
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppMediaAssetState(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    errors: typing.Optional[typing.List[AppMediaStateError]] = _PydanticField(
        alias="errors", default=None
    )
    state: typing.Optional[
        typing_extensions.Literal[
            "AWAITING_UPLOAD", "UPLOAD_COMPLETE", "COMPLETE", "FAILED"
        ]
    ] = _PydanticField(alias="state", default=None)
    warnings_field: typing.Optional[typing.List[AppMediaStateError]] = _PydanticField(
        alias="warnings", default=None
    )


class UploadOperation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    length: typing.Optional[int] = _PydanticField(alias="length", default=None)
    method: typing.Optional[str] = _PydanticField(alias="method", default=None)
    offset: typing.Optional[int] = _PydanticField(alias="offset", default=None)
    request_headers: typing.Optional[typing.List[HttpHeader]] = _PydanticField(
        alias="requestHeaders", default=None
    )
    url: typing.Optional[str] = _PydanticField(alias="url", default=None)


class AppEventScreenshotRelationshipsAppEventLocalization(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppEventScreenshotRelationshipsAppEventLocalizationData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppEventScreenshotRelationshipsAppEventLocalizationLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppEventVideoClipAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_event_asset_type: typing.Optional[
        typing_extensions.Literal["EVENT_CARD", "EVENT_DETAILS_PAGE"]
    ] = _PydanticField(alias="appEventAssetType", default=None)
    asset_delivery_state: typing.Optional[AppMediaAssetState] = _PydanticField(
        alias="assetDeliveryState", default=None
    )
    file_name: typing.Optional[str] = _PydanticField(alias="fileName", default=None)
    file_size: typing.Optional[int] = _PydanticField(alias="fileSize", default=None)
    preview_frame_time_code: typing.Optional[str] = _PydanticField(
        alias="previewFrameTimeCode", default=None
    )
    preview_image: typing.Optional[ImageAsset] = _PydanticField(
        alias="previewImage", default=None
    )
    upload_operations: typing.Optional[typing.List[UploadOperation]] = _PydanticField(
        alias="uploadOperations", default=None
    )
    video_url: typing.Optional[str] = _PydanticField(alias="videoUrl", default=None)


class AppEventVideoClipRelationshipsAppEventLocalization(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[AppEventVideoClipRelationshipsAppEventLocalizationData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[AppEventVideoClipRelationshipsAppEventLocalizationLinks] = (
        _PydanticField(alias="links", default=None)
    )


class AppEventLocalizationRelationshipsAppEventScreenshots(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[AppEventLocalizationRelationshipsAppEventScreenshotsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        AppEventLocalizationRelationshipsAppEventScreenshotsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class AppEventRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    localizations: typing.Optional[AppEventRelationshipsLocalizations] = _PydanticField(
        alias="localizations", default=None
    )


class AppEventScreenshotAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_event_asset_type: typing.Optional[
        typing_extensions.Literal["EVENT_CARD", "EVENT_DETAILS_PAGE"]
    ] = _PydanticField(alias="appEventAssetType", default=None)
    asset_delivery_state: typing.Optional[AppMediaAssetState] = _PydanticField(
        alias="assetDeliveryState", default=None
    )
    asset_token: typing.Optional[str] = _PydanticField(alias="assetToken", default=None)
    file_name: typing.Optional[str] = _PydanticField(alias="fileName", default=None)
    file_size: typing.Optional[int] = _PydanticField(alias="fileSize", default=None)
    image_asset: typing.Optional[ImageAsset] = _PydanticField(
        alias="imageAsset", default=None
    )
    upload_operations: typing.Optional[typing.List[UploadOperation]] = _PydanticField(
        alias="uploadOperations", default=None
    )


class AppEventScreenshotRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_event_localization: typing.Optional[
        AppEventScreenshotRelationshipsAppEventLocalization
    ] = _PydanticField(alias="appEventLocalization", default=None)


class AppEventVideoClipRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_event_localization: typing.Optional[
        AppEventVideoClipRelationshipsAppEventLocalization
    ] = _PydanticField(alias="appEventLocalization", default=None)


class AppEventLocalizationRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    app_event: typing.Optional[AppEventLocalizationRelationshipsAppEvent] = (
        _PydanticField(alias="appEvent", default=None)
    )
    app_event_screenshots: typing.Optional[
        AppEventLocalizationRelationshipsAppEventScreenshots
    ] = _PydanticField(alias="appEventScreenshots", default=None)
    app_event_video_clips: typing.Optional[
        AppEventLocalizationRelationshipsAppEventVideoClips
    ] = _PydanticField(alias="appEventVideoClips", default=None)


class AppEvent(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppEventAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppEventRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appEvents"] = _PydanticField(alias="type")


class AppEventScreenshot(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppEventScreenshotAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppEventScreenshotRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appEventScreenshots"] = _PydanticField(
        alias="type"
    )


class AppEventVideoClip(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppEventVideoClipAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppEventVideoClipRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appEventVideoClips"] = _PydanticField(alias="type")


class AppEventLocalization(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppEventLocalizationAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[AppEventLocalizationRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["appEventLocalizations"] = _PydanticField(
        alias="type"
    )


class AppEventLocalizationsResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.List[AppEventLocalization] = _PydanticField(alias="data")
    included: typing.Optional[
        typing.List[typing.Union[AppEvent, AppEventScreenshot, AppEventVideoClip]]
    ] = _PydanticField(alias="included", default=None)
    links: PagedDocumentLinks = _PydanticField(alias="links")
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )
