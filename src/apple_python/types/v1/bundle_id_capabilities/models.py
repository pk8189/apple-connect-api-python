"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class CapabilityOption(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    description: typing.Optional[str] = _PydanticField(
        alias="description", default=None
    )
    enabled: typing.Optional[bool] = _PydanticField(alias="enabled", default=None)
    enabled_by_default: typing.Optional[bool] = _PydanticField(
        alias="enabledByDefault", default=None
    )
    key: typing.Optional[
        typing_extensions.Literal[
            "XCODE_5",
            "XCODE_6",
            "COMPLETE_PROTECTION",
            "PROTECTED_UNLESS_OPEN",
            "PROTECTED_UNTIL_FIRST_USER_AUTH",
            "PRIMARY_APP_CONSENT",
        ]
    ] = _PydanticField(alias="key", default=None)
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    supports_wildcard: typing.Optional[bool] = _PydanticField(
        alias="supportsWildcard", default=None
    )


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class DocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: str = _PydanticField(alias="self")


class CapabilitySetting(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    allowed_instances: typing.Optional[
        typing_extensions.Literal["ENTRY", "SINGLE", "MULTIPLE"]
    ] = _PydanticField(alias="allowedInstances", default=None)
    description: typing.Optional[str] = _PydanticField(
        alias="description", default=None
    )
    enabled_by_default: typing.Optional[bool] = _PydanticField(
        alias="enabledByDefault", default=None
    )
    key: typing.Optional[
        typing_extensions.Literal[
            "ICLOUD_VERSION",
            "DATA_PROTECTION_PERMISSION_LEVEL",
            "APPLE_ID_AUTH_APP_CONSENT",
        ]
    ] = _PydanticField(alias="key", default=None)
    min_instances: typing.Optional[int] = _PydanticField(
        alias="minInstances", default=None
    )
    name: typing.Optional[str] = _PydanticField(alias="name", default=None)
    options: typing.Optional[typing.List[CapabilityOption]] = _PydanticField(
        alias="options", default=None
    )
    visible: typing.Optional[bool] = _PydanticField(alias="visible", default=None)


class BundleIdCapabilityAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    capability_type: typing.Optional[
        typing_extensions.Literal[
            "ICLOUD",
            "IN_APP_PURCHASE",
            "GAME_CENTER",
            "PUSH_NOTIFICATIONS",
            "WALLET",
            "INTER_APP_AUDIO",
            "MAPS",
            "ASSOCIATED_DOMAINS",
            "PERSONAL_VPN",
            "APP_GROUPS",
            "HEALTHKIT",
            "HOMEKIT",
            "WIRELESS_ACCESSORY_CONFIGURATION",
            "APPLE_PAY",
            "DATA_PROTECTION",
            "SIRIKIT",
            "NETWORK_EXTENSIONS",
            "MULTIPATH",
            "HOT_SPOT",
            "NFC_TAG_READING",
            "CLASSKIT",
            "AUTOFILL_CREDENTIAL_PROVIDER",
            "ACCESS_WIFI_INFORMATION",
            "NETWORK_CUSTOM_PROTOCOL",
            "COREMEDIA_HLS_LOW_LATENCY",
            "SYSTEM_EXTENSION_INSTALL",
            "USER_MANAGEMENT",
            "APPLE_ID_AUTH",
        ]
    ] = _PydanticField(alias="capabilityType", default=None)
    settings: typing.Optional[typing.List[CapabilitySetting]] = _PydanticField(
        alias="settings", default=None
    )


class BundleIdCapability(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[BundleIdCapabilityAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    type: typing_extensions.Literal["bundleIdCapabilities"] = _PydanticField(
        alias="type"
    )


class BundleIdCapabilityResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: BundleIdCapability = _PydanticField(alias="data")
    links: DocumentLinks = _PydanticField(alias="links")
