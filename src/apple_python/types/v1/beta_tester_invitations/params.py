"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class BetaTesterInvitationCreateRequestDataRelationshipsAppData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["apps"]]


class _SerializerBetaTesterInvitationCreateRequestDataRelationshipsAppData(
    pydantic.BaseModel
):
    """
    Serializer for BetaTesterInvitationCreateRequestDataRelationshipsAppData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["apps"] = pydantic.Field(alias="type")


class BetaTesterInvitationCreateRequestDataRelationshipsBetaTesterData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["betaTesters"]]


class _SerializerBetaTesterInvitationCreateRequestDataRelationshipsBetaTesterData(
    pydantic.BaseModel
):
    """
    Serializer for BetaTesterInvitationCreateRequestDataRelationshipsBetaTesterData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["betaTesters"] = pydantic.Field(alias="type")


class BetaTesterInvitationCreateRequestDataRelationshipsApp(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        BetaTesterInvitationCreateRequestDataRelationshipsAppData
    ]


class _SerializerBetaTesterInvitationCreateRequestDataRelationshipsApp(
    pydantic.BaseModel
):
    """
    Serializer for BetaTesterInvitationCreateRequestDataRelationshipsApp handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerBetaTesterInvitationCreateRequestDataRelationshipsAppData = (
        pydantic.Field(alias="data")
    )


class BetaTesterInvitationCreateRequestDataRelationshipsBetaTester(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        BetaTesterInvitationCreateRequestDataRelationshipsBetaTesterData
    ]


class _SerializerBetaTesterInvitationCreateRequestDataRelationshipsBetaTester(
    pydantic.BaseModel
):
    """
    Serializer for BetaTesterInvitationCreateRequestDataRelationshipsBetaTester handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerBetaTesterInvitationCreateRequestDataRelationshipsBetaTesterData = pydantic.Field(
        alias="data"
    )


class BetaTesterInvitationCreateRequestDataRelationships(typing_extensions.TypedDict):
    """
    No description specified
    """

    app: typing_extensions.Required[
        BetaTesterInvitationCreateRequestDataRelationshipsApp
    ]
    beta_tester: typing_extensions.Required[
        BetaTesterInvitationCreateRequestDataRelationshipsBetaTester
    ]


class _SerializerBetaTesterInvitationCreateRequestDataRelationships(pydantic.BaseModel):
    """
    Serializer for BetaTesterInvitationCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app: _SerializerBetaTesterInvitationCreateRequestDataRelationshipsApp = (
        pydantic.Field(alias="app")
    )
    beta_tester: _SerializerBetaTesterInvitationCreateRequestDataRelationshipsBetaTester = pydantic.Field(
        alias="betaTester"
    )


class BetaTesterInvitationCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    relationships: typing_extensions.Required[
        BetaTesterInvitationCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[typing_extensions.Literal["betaTesterInvitations"]]


class _SerializerBetaTesterInvitationCreateRequestData(pydantic.BaseModel):
    """
    Serializer for BetaTesterInvitationCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    relationships: _SerializerBetaTesterInvitationCreateRequestDataRelationships = (
        pydantic.Field(alias="relationships")
    )
    type: typing_extensions.Literal["betaTesterInvitations"] = pydantic.Field(
        alias="type"
    )


class BetaTesterInvitationCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[BetaTesterInvitationCreateRequestData]


class _SerializerBetaTesterInvitationCreateRequest(pydantic.BaseModel):
    """
    Serializer for BetaTesterInvitationCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerBetaTesterInvitationCreateRequestData = pydantic.Field(
        alias="data"
    )
