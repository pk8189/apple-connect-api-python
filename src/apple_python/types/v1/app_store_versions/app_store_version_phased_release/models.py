"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class AppStoreVersionPhasedReleaseAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    current_day_number: typing.Optional[int] = _PydanticField(
        alias="currentDayNumber", default=None
    )
    phased_release_state: typing.Optional[
        typing_extensions.Literal["INACTIVE", "ACTIVE", "PAUSED", "COMPLETE"]
    ] = _PydanticField(alias="phasedReleaseState", default=None)
    start_date: typing.Optional[str] = _PydanticField(alias="startDate", default=None)
    total_pause_duration: typing.Optional[int] = _PydanticField(
        alias="totalPauseDuration", default=None
    )


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class DocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: str = _PydanticField(alias="self")


class AppStoreVersionPhasedRelease(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[AppStoreVersionPhasedReleaseAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    type: typing_extensions.Literal["appStoreVersionPhasedReleases"] = _PydanticField(
        alias="type"
    )


class AppStoreVersionPhasedReleaseWithoutIncludesResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: AppStoreVersionPhasedRelease = _PydanticField(alias="data")
    links: DocumentLinks = _PydanticField(alias="links")
