"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppStoreVersionUpdateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    copyright: typing_extensions.NotRequired[str]
    downloadable: typing_extensions.NotRequired[bool]
    earliest_release_date: typing_extensions.NotRequired[str]
    release_type: typing_extensions.NotRequired[
        typing_extensions.Literal["MANUAL", "AFTER_APPROVAL", "SCHEDULED"]
    ]
    review_type: typing_extensions.NotRequired[
        typing_extensions.Literal["APP_STORE", "NOTARIZATION"]
    ]
    version_string: typing_extensions.NotRequired[str]


class _SerializerAppStoreVersionUpdateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    copyright: typing.Optional[str] = pydantic.Field(alias="copyright", default=None)
    downloadable: typing.Optional[bool] = pydantic.Field(
        alias="downloadable", default=None
    )
    earliest_release_date: typing.Optional[str] = pydantic.Field(
        alias="earliestReleaseDate", default=None
    )
    release_type: typing.Optional[
        typing_extensions.Literal["MANUAL", "AFTER_APPROVAL", "SCHEDULED"]
    ] = pydantic.Field(alias="releaseType", default=None)
    review_type: typing.Optional[
        typing_extensions.Literal["APP_STORE", "NOTARIZATION"]
    ] = pydantic.Field(alias="reviewType", default=None)
    version_string: typing.Optional[str] = pydantic.Field(
        alias="versionString", default=None
    )


class AppStoreVersionUpdateRequestDataRelationshipsAppClipDefaultExperienceData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appClipDefaultExperiences"]
    ]


class _SerializerAppStoreVersionUpdateRequestDataRelationshipsAppClipDefaultExperienceData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionUpdateRequestDataRelationshipsAppClipDefaultExperienceData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appClipDefaultExperiences"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionUpdateRequestDataRelationshipsBuildData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["builds"]]


class _SerializerAppStoreVersionUpdateRequestDataRelationshipsBuildData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionUpdateRequestDataRelationshipsBuildData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["builds"] = pydantic.Field(alias="type")


class AppStoreVersionCreateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    copyright: typing_extensions.NotRequired[str]
    earliest_release_date: typing_extensions.NotRequired[str]
    platform_field: typing_extensions.Required[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ]
    release_type: typing_extensions.NotRequired[
        typing_extensions.Literal["MANUAL", "AFTER_APPROVAL", "SCHEDULED"]
    ]
    review_type: typing_extensions.NotRequired[
        typing_extensions.Literal["APP_STORE", "NOTARIZATION"]
    ]
    version_string: typing_extensions.Required[str]


class _SerializerAppStoreVersionCreateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    copyright: typing.Optional[str] = pydantic.Field(alias="copyright", default=None)
    earliest_release_date: typing.Optional[str] = pydantic.Field(
        alias="earliestReleaseDate", default=None
    )
    platform_field: typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"] = (
        pydantic.Field(alias="platform")
    )
    release_type: typing.Optional[
        typing_extensions.Literal["MANUAL", "AFTER_APPROVAL", "SCHEDULED"]
    ] = pydantic.Field(alias="releaseType", default=None)
    review_type: typing.Optional[
        typing_extensions.Literal["APP_STORE", "NOTARIZATION"]
    ] = pydantic.Field(alias="reviewType", default=None)
    version_string: str = pydantic.Field(alias="versionString")


class AppStoreVersionCreateRequestDataRelationshipsAppData(typing_extensions.TypedDict):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["apps"]]


class _SerializerAppStoreVersionCreateRequestDataRelationshipsAppData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionCreateRequestDataRelationshipsAppData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["apps"] = pydantic.Field(alias="type")


class AppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizationsDataItem(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionLocalizations"]
    ]


class _SerializerAppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizationsDataItem(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizationsDataItem handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersionLocalizations"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionCreateRequestDataRelationshipsBuildData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["builds"]]


class _SerializerAppStoreVersionCreateRequestDataRelationshipsBuildData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionCreateRequestDataRelationshipsBuildData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["builds"] = pydantic.Field(alias="type")


class AppStoreVersionUpdateRequestDataRelationshipsAppClipDefaultExperience(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        AppStoreVersionUpdateRequestDataRelationshipsAppClipDefaultExperienceData
    ]


class _SerializerAppStoreVersionUpdateRequestDataRelationshipsAppClipDefaultExperience(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionUpdateRequestDataRelationshipsAppClipDefaultExperience handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerAppStoreVersionUpdateRequestDataRelationshipsAppClipDefaultExperienceData
    ] = pydantic.Field(alias="data", default=None)


class AppStoreVersionUpdateRequestDataRelationshipsBuild(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        AppStoreVersionUpdateRequestDataRelationshipsBuildData
    ]


class _SerializerAppStoreVersionUpdateRequestDataRelationshipsBuild(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionUpdateRequestDataRelationshipsBuild handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerAppStoreVersionUpdateRequestDataRelationshipsBuildData
    ] = pydantic.Field(alias="data", default=None)


class AppStoreVersionCreateRequestDataRelationshipsApp(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppStoreVersionCreateRequestDataRelationshipsAppData
    ]


class _SerializerAppStoreVersionCreateRequestDataRelationshipsApp(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionCreateRequestDataRelationshipsApp handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionCreateRequestDataRelationshipsAppData = (
        pydantic.Field(alias="data")
    )


class AppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizations(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        typing.List[
            AppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizationsDataItem
        ]
    ]


class _SerializerAppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizations(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizations handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[
            _SerializerAppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizationsDataItem
        ]
    ] = pydantic.Field(alias="data", default=None)


class AppStoreVersionCreateRequestDataRelationshipsBuild(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        AppStoreVersionCreateRequestDataRelationshipsBuildData
    ]


class _SerializerAppStoreVersionCreateRequestDataRelationshipsBuild(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionCreateRequestDataRelationshipsBuild handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerAppStoreVersionCreateRequestDataRelationshipsBuildData
    ] = pydantic.Field(alias="data", default=None)


class AppStoreVersionUpdateRequestDataRelationships(typing_extensions.TypedDict):
    """
    No description specified
    """

    app_clip_default_experience: typing_extensions.NotRequired[
        AppStoreVersionUpdateRequestDataRelationshipsAppClipDefaultExperience
    ]
    build: typing_extensions.NotRequired[
        AppStoreVersionUpdateRequestDataRelationshipsBuild
    ]


class _SerializerAppStoreVersionUpdateRequestDataRelationships(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionUpdateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_clip_default_experience: typing.Optional[
        _SerializerAppStoreVersionUpdateRequestDataRelationshipsAppClipDefaultExperience
    ] = pydantic.Field(alias="appClipDefaultExperience", default=None)
    build: typing.Optional[
        _SerializerAppStoreVersionUpdateRequestDataRelationshipsBuild
    ] = pydantic.Field(alias="build", default=None)


class AppStoreVersionCreateRequestDataRelationships(typing_extensions.TypedDict):
    """
    No description specified
    """

    app: typing_extensions.Required[AppStoreVersionCreateRequestDataRelationshipsApp]
    app_store_version_localizations: typing_extensions.NotRequired[
        AppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizations
    ]
    build: typing_extensions.NotRequired[
        AppStoreVersionCreateRequestDataRelationshipsBuild
    ]


class _SerializerAppStoreVersionCreateRequestDataRelationships(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app: _SerializerAppStoreVersionCreateRequestDataRelationshipsApp = pydantic.Field(
        alias="app"
    )
    app_store_version_localizations: typing.Optional[
        _SerializerAppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizations
    ] = pydantic.Field(alias="appStoreVersionLocalizations", default=None)
    build: typing.Optional[
        _SerializerAppStoreVersionCreateRequestDataRelationshipsBuild
    ] = pydantic.Field(alias="build", default=None)


class AppStoreVersionUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppStoreVersionUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    relationships: typing_extensions.NotRequired[
        AppStoreVersionUpdateRequestDataRelationships
    ]
    type: typing_extensions.Required[typing_extensions.Literal["appStoreVersions"]]


class _SerializerAppStoreVersionUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppStoreVersionUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    relationships: typing.Optional[
        _SerializerAppStoreVersionUpdateRequestDataRelationships
    ] = pydantic.Field(alias="relationships", default=None)
    type: typing_extensions.Literal["appStoreVersions"] = pydantic.Field(alias="type")


class AppStoreVersionCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[AppStoreVersionCreateRequestDataAttributes]
    relationships: typing_extensions.Required[
        AppStoreVersionCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[typing_extensions.Literal["appStoreVersions"]]


class _SerializerAppStoreVersionCreateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerAppStoreVersionCreateRequestDataAttributes = pydantic.Field(
        alias="attributes"
    )
    relationships: _SerializerAppStoreVersionCreateRequestDataRelationships = (
        pydantic.Field(alias="relationships")
    )
    type: typing_extensions.Literal["appStoreVersions"] = pydantic.Field(alias="type")


class AppStoreVersionUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreVersionUpdateRequestData]


class _SerializerAppStoreVersionUpdateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionUpdateRequestData = pydantic.Field(alias="data")


class AppStoreVersionCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreVersionCreateRequestData]


class _SerializerAppStoreVersionCreateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionCreateRequestData = pydantic.Field(alias="data")
