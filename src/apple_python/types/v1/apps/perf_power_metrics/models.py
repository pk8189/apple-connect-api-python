"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class MetricsInsightPopulationsItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    delta_percentage: typing.Optional[float] = _PydanticField(
        alias="deltaPercentage", default=None
    )
    device: typing.Optional[str] = _PydanticField(alias="device", default=None)
    latest_version_value: typing.Optional[float] = _PydanticField(
        alias="latestVersionValue", default=None
    )
    percentile: typing.Optional[str] = _PydanticField(alias="percentile", default=None)
    reference_average_value: typing.Optional[float] = _PydanticField(
        alias="referenceAverageValue", default=None
    )
    summary_string: typing.Optional[str] = _PydanticField(
        alias="summaryString", default=None
    )


class XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemDatasetsItemFilterCriteria(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    device: typing.Optional[str] = _PydanticField(alias="device", default=None)
    device_marketing_name: typing.Optional[str] = _PydanticField(
        alias="deviceMarketingName", default=None
    )
    percentile: typing.Optional[str] = _PydanticField(alias="percentile", default=None)


class XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemDatasetsItemPointsItemPercentageBreakdown(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    sub_system_label: typing.Optional[str] = _PydanticField(
        alias="subSystemLabel", default=None
    )
    value: typing.Optional[float] = _PydanticField(alias="value", default=None)


class XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemGoalKeysItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    goal_key: typing.Optional[str] = _PydanticField(alias="goalKey", default=None)
    lower_bound: typing.Optional[int] = _PydanticField(alias="lowerBound", default=None)
    upper_bound: typing.Optional[int] = _PydanticField(alias="upperBound", default=None)


class XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemUnit(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    display_name: typing.Optional[str] = _PydanticField(
        alias="displayName", default=None
    )
    identifier: typing.Optional[str] = _PydanticField(alias="identifier", default=None)


class MetricsInsight(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    high_impact: typing.Optional[bool] = _PydanticField(
        alias="highImpact", default=None
    )
    latest_version: typing.Optional[str] = _PydanticField(
        alias="latestVersion", default=None
    )
    max_latest_version_value: typing.Optional[float] = _PydanticField(
        alias="maxLatestVersionValue", default=None
    )
    metric: typing.Optional[str] = _PydanticField(alias="metric", default=None)
    metric_category: typing.Optional[
        typing_extensions.Literal[
            "HANG", "LAUNCH", "MEMORY", "DISK", "BATTERY", "TERMINATION", "ANIMATION"
        ]
    ] = _PydanticField(alias="metricCategory", default=None)
    populations: typing.Optional[typing.List[MetricsInsightPopulationsItem]] = (
        _PydanticField(alias="populations", default=None)
    )
    reference_versions: typing.Optional[str] = _PydanticField(
        alias="referenceVersions", default=None
    )
    sub_system_label: typing.Optional[str] = _PydanticField(
        alias="subSystemLabel", default=None
    )
    summary_string: typing.Optional[str] = _PydanticField(
        alias="summaryString", default=None
    )


class XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemDatasetsItemPointsItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    error_margin: typing.Optional[float] = _PydanticField(
        alias="errorMargin", default=None
    )
    goal: typing.Optional[str] = _PydanticField(alias="goal", default=None)
    percentage_breakdown: typing.Optional[
        XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemDatasetsItemPointsItemPercentageBreakdown
    ] = _PydanticField(alias="percentageBreakdown", default=None)
    value: typing.Optional[float] = _PydanticField(alias="value", default=None)
    version: typing.Optional[str] = _PydanticField(alias="version", default=None)


class XcodeMetricsInsights(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    regressions: typing.Optional[typing.List[MetricsInsight]] = _PydanticField(
        alias="regressions", default=None
    )
    trending_up: typing.Optional[typing.List[MetricsInsight]] = _PydanticField(
        alias="trendingUp", default=None
    )


class XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemDatasetsItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    filter_criteria: typing.Optional[
        XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemDatasetsItemFilterCriteria
    ] = _PydanticField(alias="filterCriteria", default=None)
    points: typing.Optional[
        typing.List[
            XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemDatasetsItemPointsItem
        ]
    ] = _PydanticField(alias="points", default=None)


class XcodeMetricsProductDataItemMetricCategoriesItemMetricsItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    datasets: typing.Optional[
        typing.List[
            XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemDatasetsItem
        ]
    ] = _PydanticField(alias="datasets", default=None)
    goal_keys: typing.Optional[
        typing.List[
            XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemGoalKeysItem
        ]
    ] = _PydanticField(alias="goalKeys", default=None)
    identifier: typing.Optional[str] = _PydanticField(alias="identifier", default=None)
    unit: typing.Optional[
        XcodeMetricsProductDataItemMetricCategoriesItemMetricsItemUnit
    ] = _PydanticField(alias="unit", default=None)


class XcodeMetricsProductDataItemMetricCategoriesItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    identifier: typing.Optional[
        typing_extensions.Literal[
            "HANG", "LAUNCH", "MEMORY", "DISK", "BATTERY", "TERMINATION", "ANIMATION"
        ]
    ] = _PydanticField(alias="identifier", default=None)
    metrics: typing.Optional[
        typing.List[XcodeMetricsProductDataItemMetricCategoriesItemMetricsItem]
    ] = _PydanticField(alias="metrics", default=None)


class XcodeMetricsProductDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    metric_categories: typing.Optional[
        typing.List[XcodeMetricsProductDataItemMetricCategoriesItem]
    ] = _PydanticField(alias="metricCategories", default=None)
    platform_field: typing.Optional[str] = _PydanticField(
        alias="platform", default=None
    )


class XcodeMetrics(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    insights: typing.Optional[XcodeMetricsInsights] = _PydanticField(
        alias="insights", default=None
    )
    product_data: typing.Optional[typing.List[XcodeMetricsProductDataItem]] = (
        _PydanticField(alias="productData", default=None)
    )
    version: typing.Optional[str] = _PydanticField(alias="version", default=None)
