"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppScreenshotUpdateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    source_file_checksum: typing_extensions.NotRequired[str]
    uploaded: typing_extensions.NotRequired[bool]


class _SerializerAppScreenshotUpdateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for AppScreenshotUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    source_file_checksum: typing.Optional[str] = pydantic.Field(
        alias="sourceFileChecksum", default=None
    )
    uploaded: typing.Optional[bool] = pydantic.Field(alias="uploaded", default=None)


class AppScreenshotCreateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    file_name: typing_extensions.Required[str]
    file_size: typing_extensions.Required[int]


class _SerializerAppScreenshotCreateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for AppScreenshotCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    file_name: str = pydantic.Field(alias="fileName")
    file_size: int = pydantic.Field(alias="fileSize")


class AppScreenshotCreateRequestDataRelationshipsAppScreenshotSetData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["appScreenshotSets"]]


class _SerializerAppScreenshotCreateRequestDataRelationshipsAppScreenshotSetData(
    pydantic.BaseModel
):
    """
    Serializer for AppScreenshotCreateRequestDataRelationshipsAppScreenshotSetData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appScreenshotSets"] = pydantic.Field(alias="type")


class AppScreenshotUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[AppScreenshotUpdateRequestDataAttributes]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["appScreenshots"]]


class _SerializerAppScreenshotUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for AppScreenshotUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[_SerializerAppScreenshotUpdateRequestDataAttributes] = (
        pydantic.Field(alias="attributes", default=None)
    )
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appScreenshots"] = pydantic.Field(alias="type")


class AppScreenshotCreateRequestDataRelationshipsAppScreenshotSet(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppScreenshotCreateRequestDataRelationshipsAppScreenshotSetData
    ]


class _SerializerAppScreenshotCreateRequestDataRelationshipsAppScreenshotSet(
    pydantic.BaseModel
):
    """
    Serializer for AppScreenshotCreateRequestDataRelationshipsAppScreenshotSet handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppScreenshotCreateRequestDataRelationshipsAppScreenshotSetData = (
        pydantic.Field(alias="data")
    )


class AppScreenshotUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppScreenshotUpdateRequestData]


class _SerializerAppScreenshotUpdateRequest(pydantic.BaseModel):
    """
    Serializer for AppScreenshotUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppScreenshotUpdateRequestData = pydantic.Field(alias="data")


class AppScreenshotCreateRequestDataRelationships(typing_extensions.TypedDict):
    """
    No description specified
    """

    app_screenshot_set: typing_extensions.Required[
        AppScreenshotCreateRequestDataRelationshipsAppScreenshotSet
    ]


class _SerializerAppScreenshotCreateRequestDataRelationships(pydantic.BaseModel):
    """
    Serializer for AppScreenshotCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_screenshot_set: _SerializerAppScreenshotCreateRequestDataRelationshipsAppScreenshotSet = pydantic.Field(
        alias="appScreenshotSet"
    )


class AppScreenshotCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[AppScreenshotCreateRequestDataAttributes]
    relationships: typing_extensions.Required[
        AppScreenshotCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[typing_extensions.Literal["appScreenshots"]]


class _SerializerAppScreenshotCreateRequestData(pydantic.BaseModel):
    """
    Serializer for AppScreenshotCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerAppScreenshotCreateRequestDataAttributes = pydantic.Field(
        alias="attributes"
    )
    relationships: _SerializerAppScreenshotCreateRequestDataRelationships = (
        pydantic.Field(alias="relationships")
    )
    type: typing_extensions.Literal["appScreenshots"] = pydantic.Field(alias="type")


class AppScreenshotCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppScreenshotCreateRequestData]


class _SerializerAppScreenshotCreateRequest(pydantic.BaseModel):
    """
    Serializer for AppScreenshotCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppScreenshotCreateRequestData = pydantic.Field(alias="data")
