"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterDetailData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["gameCenterDetails"]]


class _SerializerGameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterDetailData(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterDetailData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["gameCenterDetails"] = pydantic.Field(alias="type")


class GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterLeaderboardSetData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboardSets"]
    ]


class _SerializerGameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterLeaderboardSetData(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterLeaderboardSetData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardSets"] = pydantic.Field(
        alias="type"
    )


class GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterDetail(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterDetailData
    ]


class _SerializerGameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterDetail(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterDetail handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterDetailData = pydantic.Field(
        alias="data"
    )


class GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterLeaderboardSet(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterLeaderboardSetData
    ]


class _SerializerGameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterLeaderboardSet(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterLeaderboardSet handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterLeaderboardSetData = pydantic.Field(
        alias="data"
    )


class GameCenterLeaderboardSetReleaseCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    game_center_detail: typing_extensions.Required[
        GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterDetail
    ]
    game_center_leaderboard_set: typing_extensions.Required[
        GameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterLeaderboardSet
    ]


class _SerializerGameCenterLeaderboardSetReleaseCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardSetReleaseCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    game_center_detail: _SerializerGameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterDetail = pydantic.Field(
        alias="gameCenterDetail"
    )
    game_center_leaderboard_set: _SerializerGameCenterLeaderboardSetReleaseCreateRequestDataRelationshipsGameCenterLeaderboardSet = pydantic.Field(
        alias="gameCenterLeaderboardSet"
    )


class GameCenterLeaderboardSetReleaseCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    relationships: typing_extensions.Required[
        GameCenterLeaderboardSetReleaseCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboardSetReleases"]
    ]


class _SerializerGameCenterLeaderboardSetReleaseCreateRequestData(pydantic.BaseModel):
    """
    Serializer for GameCenterLeaderboardSetReleaseCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    relationships: _SerializerGameCenterLeaderboardSetReleaseCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["gameCenterLeaderboardSetReleases"] = (
        pydantic.Field(alias="type")
    )


class GameCenterLeaderboardSetReleaseCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[GameCenterLeaderboardSetReleaseCreateRequestData]


class _SerializerGameCenterLeaderboardSetReleaseCreateRequest(pydantic.BaseModel):
    """
    Serializer for GameCenterLeaderboardSetReleaseCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardSetReleaseCreateRequestData = pydantic.Field(
        alias="data"
    )
