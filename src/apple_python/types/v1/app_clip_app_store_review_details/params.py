"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppClipAppStoreReviewDetailUpdateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    invocation_urls: typing_extensions.NotRequired[typing.List[str]]


class _SerializerAppClipAppStoreReviewDetailUpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppClipAppStoreReviewDetailUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    invocation_urls: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="invocationUrls", default=None
    )


class AppClipAppStoreReviewDetailCreateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    invocation_urls: typing_extensions.NotRequired[typing.List[str]]


class _SerializerAppClipAppStoreReviewDetailCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppClipAppStoreReviewDetailCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    invocation_urls: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="invocationUrls", default=None
    )


class AppClipAppStoreReviewDetailCreateRequestDataRelationshipsAppClipDefaultExperienceData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appClipDefaultExperiences"]
    ]


class _SerializerAppClipAppStoreReviewDetailCreateRequestDataRelationshipsAppClipDefaultExperienceData(
    pydantic.BaseModel
):
    """
    Serializer for AppClipAppStoreReviewDetailCreateRequestDataRelationshipsAppClipDefaultExperienceData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appClipDefaultExperiences"] = pydantic.Field(
        alias="type"
    )


class AppClipAppStoreReviewDetailUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppClipAppStoreReviewDetailUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appClipAppStoreReviewDetails"]
    ]


class _SerializerAppClipAppStoreReviewDetailUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for AppClipAppStoreReviewDetailUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppClipAppStoreReviewDetailUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appClipAppStoreReviewDetails"] = pydantic.Field(
        alias="type"
    )


class AppClipAppStoreReviewDetailCreateRequestDataRelationshipsAppClipDefaultExperience(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppClipAppStoreReviewDetailCreateRequestDataRelationshipsAppClipDefaultExperienceData
    ]


class _SerializerAppClipAppStoreReviewDetailCreateRequestDataRelationshipsAppClipDefaultExperience(
    pydantic.BaseModel
):
    """
    Serializer for AppClipAppStoreReviewDetailCreateRequestDataRelationshipsAppClipDefaultExperience handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppClipAppStoreReviewDetailCreateRequestDataRelationshipsAppClipDefaultExperienceData = pydantic.Field(
        alias="data"
    )


class AppClipAppStoreReviewDetailUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppClipAppStoreReviewDetailUpdateRequestData]


class _SerializerAppClipAppStoreReviewDetailUpdateRequest(pydantic.BaseModel):
    """
    Serializer for AppClipAppStoreReviewDetailUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppClipAppStoreReviewDetailUpdateRequestData = pydantic.Field(
        alias="data"
    )


class AppClipAppStoreReviewDetailCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    app_clip_default_experience: typing_extensions.Required[
        AppClipAppStoreReviewDetailCreateRequestDataRelationshipsAppClipDefaultExperience
    ]


class _SerializerAppClipAppStoreReviewDetailCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for AppClipAppStoreReviewDetailCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_clip_default_experience: _SerializerAppClipAppStoreReviewDetailCreateRequestDataRelationshipsAppClipDefaultExperience = pydantic.Field(
        alias="appClipDefaultExperience"
    )


class AppClipAppStoreReviewDetailCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppClipAppStoreReviewDetailCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        AppClipAppStoreReviewDetailCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["appClipAppStoreReviewDetails"]
    ]


class _SerializerAppClipAppStoreReviewDetailCreateRequestData(pydantic.BaseModel):
    """
    Serializer for AppClipAppStoreReviewDetailCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppClipAppStoreReviewDetailCreateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    relationships: _SerializerAppClipAppStoreReviewDetailCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["appClipAppStoreReviewDetails"] = pydantic.Field(
        alias="type"
    )


class AppClipAppStoreReviewDetailCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppClipAppStoreReviewDetailCreateRequestData]


class _SerializerAppClipAppStoreReviewDetailCreateRequest(pydantic.BaseModel):
    """
    Serializer for AppClipAppStoreReviewDetailCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppClipAppStoreReviewDetailCreateRequestData = pydantic.Field(
        alias="data"
    )
