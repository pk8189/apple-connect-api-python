"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class GameCenterLeaderboardImageUpdateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    uploaded: typing_extensions.NotRequired[bool]


class _SerializerGameCenterLeaderboardImageUpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardImageUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    uploaded: typing.Optional[bool] = pydantic.Field(alias="uploaded", default=None)


class GameCenterLeaderboardImageCreateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    file_name: typing_extensions.Required[str]
    file_size: typing_extensions.Required[int]


class _SerializerGameCenterLeaderboardImageCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardImageCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    file_name: str = pydantic.Field(alias="fileName")
    file_size: int = pydantic.Field(alias="fileSize")


class GameCenterLeaderboardImageCreateRequestDataRelationshipsGameCenterLeaderboardLocalizationData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboardLocalizations"]
    ]


class _SerializerGameCenterLeaderboardImageCreateRequestDataRelationshipsGameCenterLeaderboardLocalizationData(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardImageCreateRequestDataRelationshipsGameCenterLeaderboardLocalizationData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardLocalizations"] = (
        pydantic.Field(alias="type")
    )


class GameCenterLeaderboardImageUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        GameCenterLeaderboardImageUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboardImages"]
    ]


class _SerializerGameCenterLeaderboardImageUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for GameCenterLeaderboardImageUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerGameCenterLeaderboardImageUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardImages"] = pydantic.Field(
        alias="type"
    )


class GameCenterLeaderboardImageCreateRequestDataRelationshipsGameCenterLeaderboardLocalization(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        GameCenterLeaderboardImageCreateRequestDataRelationshipsGameCenterLeaderboardLocalizationData
    ]


class _SerializerGameCenterLeaderboardImageCreateRequestDataRelationshipsGameCenterLeaderboardLocalization(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardImageCreateRequestDataRelationshipsGameCenterLeaderboardLocalization handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardImageCreateRequestDataRelationshipsGameCenterLeaderboardLocalizationData = pydantic.Field(
        alias="data"
    )


class GameCenterLeaderboardImageUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[GameCenterLeaderboardImageUpdateRequestData]


class _SerializerGameCenterLeaderboardImageUpdateRequest(pydantic.BaseModel):
    """
    Serializer for GameCenterLeaderboardImageUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardImageUpdateRequestData = pydantic.Field(
        alias="data"
    )


class GameCenterLeaderboardImageCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    game_center_leaderboard_localization: typing_extensions.Required[
        GameCenterLeaderboardImageCreateRequestDataRelationshipsGameCenterLeaderboardLocalization
    ]


class _SerializerGameCenterLeaderboardImageCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for GameCenterLeaderboardImageCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    game_center_leaderboard_localization: _SerializerGameCenterLeaderboardImageCreateRequestDataRelationshipsGameCenterLeaderboardLocalization = pydantic.Field(
        alias="gameCenterLeaderboardLocalization"
    )


class GameCenterLeaderboardImageCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        GameCenterLeaderboardImageCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        GameCenterLeaderboardImageCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["gameCenterLeaderboardImages"]
    ]


class _SerializerGameCenterLeaderboardImageCreateRequestData(pydantic.BaseModel):
    """
    Serializer for GameCenterLeaderboardImageCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerGameCenterLeaderboardImageCreateRequestDataAttributes = (
        pydantic.Field(alias="attributes")
    )
    relationships: _SerializerGameCenterLeaderboardImageCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["gameCenterLeaderboardImages"] = pydantic.Field(
        alias="type"
    )


class GameCenterLeaderboardImageCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[GameCenterLeaderboardImageCreateRequestData]


class _SerializerGameCenterLeaderboardImageCreateRequest(pydantic.BaseModel):
    """
    Serializer for GameCenterLeaderboardImageCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerGameCenterLeaderboardImageCreateRequestData = pydantic.Field(
        alias="data"
    )
