"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppStoreVersionLocalizationUpdateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    description: typing_extensions.NotRequired[str]
    keywords: typing_extensions.NotRequired[str]
    marketing_url: typing_extensions.NotRequired[str]
    promotional_text: typing_extensions.NotRequired[str]
    support_url: typing_extensions.NotRequired[str]
    whats_new: typing_extensions.NotRequired[str]


class _SerializerAppStoreVersionLocalizationUpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionLocalizationUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    description: typing.Optional[str] = pydantic.Field(
        alias="description", default=None
    )
    keywords: typing.Optional[str] = pydantic.Field(alias="keywords", default=None)
    marketing_url: typing.Optional[str] = pydantic.Field(
        alias="marketingUrl", default=None
    )
    promotional_text: typing.Optional[str] = pydantic.Field(
        alias="promotionalText", default=None
    )
    support_url: typing.Optional[str] = pydantic.Field(alias="supportUrl", default=None)
    whats_new: typing.Optional[str] = pydantic.Field(alias="whatsNew", default=None)


class AppStoreVersionLocalizationCreateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    description: typing_extensions.NotRequired[str]
    keywords: typing_extensions.NotRequired[str]
    locale_field: typing_extensions.Required[str]
    marketing_url: typing_extensions.NotRequired[str]
    promotional_text: typing_extensions.NotRequired[str]
    support_url: typing_extensions.NotRequired[str]
    whats_new: typing_extensions.NotRequired[str]


class _SerializerAppStoreVersionLocalizationCreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionLocalizationCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    description: typing.Optional[str] = pydantic.Field(
        alias="description", default=None
    )
    keywords: typing.Optional[str] = pydantic.Field(alias="keywords", default=None)
    locale_field: str = pydantic.Field(alias="locale")
    marketing_url: typing.Optional[str] = pydantic.Field(
        alias="marketingUrl", default=None
    )
    promotional_text: typing.Optional[str] = pydantic.Field(
        alias="promotionalText", default=None
    )
    support_url: typing.Optional[str] = pydantic.Field(alias="supportUrl", default=None)
    whats_new: typing.Optional[str] = pydantic.Field(alias="whatsNew", default=None)


class AppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersionData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["appStoreVersions"]]


class _SerializerAppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersionData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersionData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = pydantic.Field(alias="type")


class AppStoreVersionLocalizationUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppStoreVersionLocalizationUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionLocalizations"]
    ]


class _SerializerAppStoreVersionLocalizationUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionLocalizationUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppStoreVersionLocalizationUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersionLocalizations"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersion(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersionData
    ]


class _SerializerAppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersion(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersion handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersionData = pydantic.Field(
        alias="data"
    )


class AppStoreVersionLocalizationUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreVersionLocalizationUpdateRequestData]


class _SerializerAppStoreVersionLocalizationUpdateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionLocalizationUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionLocalizationUpdateRequestData = pydantic.Field(
        alias="data"
    )


class AppStoreVersionLocalizationCreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    app_store_version: typing_extensions.Required[
        AppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersion
    ]


class _SerializerAppStoreVersionLocalizationCreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionLocalizationCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_store_version: _SerializerAppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersion = pydantic.Field(
        alias="appStoreVersion"
    )


class AppStoreVersionLocalizationCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        AppStoreVersionLocalizationCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        AppStoreVersionLocalizationCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionLocalizations"]
    ]


class _SerializerAppStoreVersionLocalizationCreateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionLocalizationCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerAppStoreVersionLocalizationCreateRequestDataAttributes = (
        pydantic.Field(alias="attributes")
    )
    relationships: _SerializerAppStoreVersionLocalizationCreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["appStoreVersionLocalizations"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionLocalizationCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreVersionLocalizationCreateRequestData]


class _SerializerAppStoreVersionLocalizationCreateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionLocalizationCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionLocalizationCreateRequestData = pydantic.Field(
        alias="data"
    )
