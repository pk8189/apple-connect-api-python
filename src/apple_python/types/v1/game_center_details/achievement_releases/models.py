"""File Generated by Sideko (sideko.dev)"""

import io
import typing
import typing_extensions
from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class GameCenterAchievementReleaseAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    live: typing.Optional[bool] = _PydanticField(alias="live", default=None)


class ResourceLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterAchievementReleaseRelationshipsGameCenterAchievementData(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterAchievements"] = _PydanticField(
        alias="type"
    )


class GameCenterAchievementReleaseRelationshipsGameCenterAchievementLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterAchievementReleaseRelationshipsGameCenterDetailData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterDetails"] = _PydanticField(alias="type")


class GameCenterAchievementReleaseRelationshipsGameCenterDetailLinks(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    arcade_enabled: typing.Optional[bool] = _PydanticField(
        alias="arcadeEnabled", default=None
    )
    challenge_enabled: typing.Optional[bool] = _PydanticField(
        alias="challengeEnabled", default=None
    )


class GameCenterDetailRelationshipsAchievementReleasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterAchievementReleases"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsAchievementReleasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagingInformationPaging(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    limit: int = _PydanticField(alias="limit")
    total: typing.Optional[int] = _PydanticField(alias="total", default=None)


class GameCenterDetailRelationshipsAppData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["apps"] = _PydanticField(alias="type")


class GameCenterDetailRelationshipsAppLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsDefaultGroupLeaderboardData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboards"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsDefaultGroupLeaderboardLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsDefaultLeaderboardData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboards"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsDefaultLeaderboardLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsGameCenterAchievementsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterAchievements"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsGameCenterAchievementsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsGameCenterAppVersionsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterAppVersions"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsGameCenterAppVersionsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsGameCenterGroupData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterGroups"] = _PydanticField(alias="type")


class GameCenterDetailRelationshipsGameCenterGroupLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsGameCenterLeaderboardSetsDataItem(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardSets"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsGameCenterLeaderboardSetsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsGameCenterLeaderboardsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboards"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsGameCenterLeaderboardsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsLeaderboardReleasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardReleases"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationshipsLeaderboardReleasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterDetailRelationshipsLeaderboardSetReleasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterLeaderboardSetReleases"] = (
        _PydanticField(alias="type")
    )


class GameCenterDetailRelationshipsLeaderboardSetReleasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterAchievementAttributes(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    archived: typing.Optional[bool] = _PydanticField(alias="archived", default=None)
    points: typing.Optional[int] = _PydanticField(alias="points", default=None)
    reference_name: typing.Optional[str] = _PydanticField(
        alias="referenceName", default=None
    )
    repeatable: typing.Optional[bool] = _PydanticField(alias="repeatable", default=None)
    show_before_earned: typing.Optional[bool] = _PydanticField(
        alias="showBeforeEarned", default=None
    )
    vendor_identifier: typing.Optional[str] = _PydanticField(
        alias="vendorIdentifier", default=None
    )


class GameCenterAchievementRelationshipsGameCenterDetailData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterDetails"] = _PydanticField(alias="type")


class GameCenterAchievementRelationshipsGameCenterDetailLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterAchievementRelationshipsGameCenterGroupData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterGroups"] = _PydanticField(alias="type")


class GameCenterAchievementRelationshipsGameCenterGroupLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterAchievementRelationshipsGroupAchievementData(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterAchievements"] = _PydanticField(
        alias="type"
    )


class GameCenterAchievementRelationshipsGroupAchievementLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterAchievementRelationshipsLocalizationsDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterAchievementLocalizations"] = (
        _PydanticField(alias="type")
    )


class GameCenterAchievementRelationshipsLocalizationsLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class GameCenterAchievementRelationshipsReleasesDataItem(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    id: str = _PydanticField(alias="id")
    type: typing_extensions.Literal["gameCenterAchievementReleases"] = _PydanticField(
        alias="type"
    )


class GameCenterAchievementRelationshipsReleasesLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    related: typing.Optional[str] = _PydanticField(alias="related", default=None)
    self: typing.Optional[str] = _PydanticField(alias="self", default=None)


class PagedDocumentLinks(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    first: typing.Optional[str] = _PydanticField(alias="first", default=None)
    next: typing.Optional[str] = _PydanticField(alias="next", default=None)
    self: str = _PydanticField(alias="self")


class GameCenterAchievementReleaseRelationshipsGameCenterAchievement(
    _PydanticBaseModel
):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        GameCenterAchievementReleaseRelationshipsGameCenterAchievementData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        GameCenterAchievementReleaseRelationshipsGameCenterAchievementLinks
    ] = _PydanticField(alias="links", default=None)


class GameCenterAchievementReleaseRelationshipsGameCenterDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        GameCenterAchievementReleaseRelationshipsGameCenterDetailData
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        GameCenterAchievementReleaseRelationshipsGameCenterDetailLinks
    ] = _PydanticField(alias="links", default=None)


class PagingInformation(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    paging: PagingInformationPaging = _PydanticField(alias="paging")


class GameCenterDetailRelationshipsApp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterDetailRelationshipsAppData] = _PydanticField(
        alias="data", default=None
    )
    links: typing.Optional[GameCenterDetailRelationshipsAppLinks] = _PydanticField(
        alias="links", default=None
    )


class GameCenterDetailRelationshipsDefaultGroupLeaderboard(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterDetailRelationshipsDefaultGroupLeaderboardData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[
        GameCenterDetailRelationshipsDefaultGroupLeaderboardLinks
    ] = _PydanticField(alias="links", default=None)


class GameCenterDetailRelationshipsDefaultLeaderboard(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterDetailRelationshipsDefaultLeaderboardData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[GameCenterDetailRelationshipsDefaultLeaderboardLinks] = (
        _PydanticField(alias="links", default=None)
    )


class GameCenterDetailRelationshipsGameCenterAchievements(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsGameCenterAchievementsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsGameCenterAchievementsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterDetailRelationshipsGameCenterAppVersions(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsGameCenterAppVersionsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsGameCenterAppVersionsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterDetailRelationshipsGameCenterGroup(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterDetailRelationshipsGameCenterGroupData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[GameCenterDetailRelationshipsGameCenterGroupLinks] = (
        _PydanticField(alias="links", default=None)
    )


class GameCenterDetailRelationshipsGameCenterLeaderboardSets(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsGameCenterLeaderboardSetsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[
        GameCenterDetailRelationshipsGameCenterLeaderboardSetsLinks
    ] = _PydanticField(alias="links", default=None)
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterDetailRelationshipsGameCenterLeaderboards(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsGameCenterLeaderboardsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsGameCenterLeaderboardsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterDetailRelationshipsLeaderboardReleases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsLeaderboardReleasesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsLeaderboardReleasesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterDetailRelationshipsLeaderboardSetReleases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsLeaderboardSetReleasesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsLeaderboardSetReleasesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterAchievementRelationshipsGameCenterDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterAchievementRelationshipsGameCenterDetailData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[GameCenterAchievementRelationshipsGameCenterDetailLinks] = (
        _PydanticField(alias="links", default=None)
    )


class GameCenterAchievementRelationshipsGameCenterGroup(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterAchievementRelationshipsGameCenterGroupData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[GameCenterAchievementRelationshipsGameCenterGroupLinks] = (
        _PydanticField(alias="links", default=None)
    )


class GameCenterAchievementRelationshipsGroupAchievement(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[GameCenterAchievementRelationshipsGroupAchievementData] = (
        _PydanticField(alias="data", default=None)
    )
    links: typing.Optional[GameCenterAchievementRelationshipsGroupAchievementLinks] = (
        _PydanticField(alias="links", default=None)
    )


class GameCenterAchievementRelationshipsLocalizations(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterAchievementRelationshipsLocalizationsDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterAchievementRelationshipsLocalizationsLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterAchievementRelationshipsReleases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterAchievementRelationshipsReleasesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterAchievementRelationshipsReleasesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterAchievementReleaseRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    game_center_achievement: typing.Optional[
        GameCenterAchievementReleaseRelationshipsGameCenterAchievement
    ] = _PydanticField(alias="gameCenterAchievement", default=None)
    game_center_detail: typing.Optional[
        GameCenterAchievementReleaseRelationshipsGameCenterDetail
    ] = _PydanticField(alias="gameCenterDetail", default=None)


class GameCenterDetailRelationshipsAchievementReleases(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.Optional[
        typing.List[GameCenterDetailRelationshipsAchievementReleasesDataItem]
    ] = _PydanticField(alias="data", default=None)
    links: typing.Optional[GameCenterDetailRelationshipsAchievementReleasesLinks] = (
        _PydanticField(alias="links", default=None)
    )
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )


class GameCenterAchievementRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    game_center_detail: typing.Optional[
        GameCenterAchievementRelationshipsGameCenterDetail
    ] = _PydanticField(alias="gameCenterDetail", default=None)
    game_center_group: typing.Optional[
        GameCenterAchievementRelationshipsGameCenterGroup
    ] = _PydanticField(alias="gameCenterGroup", default=None)
    group_achievement: typing.Optional[
        GameCenterAchievementRelationshipsGroupAchievement
    ] = _PydanticField(alias="groupAchievement", default=None)
    localizations: typing.Optional[GameCenterAchievementRelationshipsLocalizations] = (
        _PydanticField(alias="localizations", default=None)
    )
    releases: typing.Optional[GameCenterAchievementRelationshipsReleases] = (
        _PydanticField(alias="releases", default=None)
    )


class GameCenterAchievementRelease(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[GameCenterAchievementReleaseAttributes] = (
        _PydanticField(alias="attributes", default=None)
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[GameCenterAchievementReleaseRelationships] = (
        _PydanticField(alias="relationships", default=None)
    )
    type: typing_extensions.Literal["gameCenterAchievementReleases"] = _PydanticField(
        alias="type"
    )


class GameCenterDetailRelationships(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    achievement_releases: typing.Optional[
        GameCenterDetailRelationshipsAchievementReleases
    ] = _PydanticField(alias="achievementReleases", default=None)
    app: typing.Optional[GameCenterDetailRelationshipsApp] = _PydanticField(
        alias="app", default=None
    )
    default_group_leaderboard: typing.Optional[
        GameCenterDetailRelationshipsDefaultGroupLeaderboard
    ] = _PydanticField(alias="defaultGroupLeaderboard", default=None)
    default_leaderboard: typing.Optional[
        GameCenterDetailRelationshipsDefaultLeaderboard
    ] = _PydanticField(alias="defaultLeaderboard", default=None)
    game_center_achievements: typing.Optional[
        GameCenterDetailRelationshipsGameCenterAchievements
    ] = _PydanticField(alias="gameCenterAchievements", default=None)
    game_center_app_versions: typing.Optional[
        GameCenterDetailRelationshipsGameCenterAppVersions
    ] = _PydanticField(alias="gameCenterAppVersions", default=None)
    game_center_group: typing.Optional[GameCenterDetailRelationshipsGameCenterGroup] = (
        _PydanticField(alias="gameCenterGroup", default=None)
    )
    game_center_leaderboard_sets: typing.Optional[
        GameCenterDetailRelationshipsGameCenterLeaderboardSets
    ] = _PydanticField(alias="gameCenterLeaderboardSets", default=None)
    game_center_leaderboards: typing.Optional[
        GameCenterDetailRelationshipsGameCenterLeaderboards
    ] = _PydanticField(alias="gameCenterLeaderboards", default=None)
    leaderboard_releases: typing.Optional[
        GameCenterDetailRelationshipsLeaderboardReleases
    ] = _PydanticField(alias="leaderboardReleases", default=None)
    leaderboard_set_releases: typing.Optional[
        GameCenterDetailRelationshipsLeaderboardSetReleases
    ] = _PydanticField(alias="leaderboardSetReleases", default=None)


class GameCenterAchievement(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[GameCenterAchievementAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[GameCenterAchievementRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["gameCenterAchievements"] = _PydanticField(
        alias="type"
    )


class GameCenterDetail(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    attributes: typing.Optional[GameCenterDetailAttributes] = _PydanticField(
        alias="attributes", default=None
    )
    id: str = _PydanticField(alias="id")
    links: typing.Optional[ResourceLinks] = _PydanticField(alias="links", default=None)
    relationships: typing.Optional[GameCenterDetailRelationships] = _PydanticField(
        alias="relationships", default=None
    )
    type: typing_extensions.Literal["gameCenterDetails"] = _PydanticField(alias="type")


class GameCenterAchievementReleasesResponse(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    data: typing.List[GameCenterAchievementRelease] = _PydanticField(alias="data")
    included: typing.Optional[
        typing.List[typing.Union[GameCenterDetail, GameCenterAchievement]]
    ] = _PydanticField(alias="included", default=None)
    links: PagedDocumentLinks = _PydanticField(alias="links")
    meta: typing.Optional[PagingInformation] = _PydanticField(
        alias="meta", default=None
    )
