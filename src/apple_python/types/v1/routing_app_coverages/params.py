"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class RoutingAppCoverageUpdateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    source_file_checksum: typing_extensions.NotRequired[str]
    uploaded: typing_extensions.NotRequired[bool]


class _SerializerRoutingAppCoverageUpdateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for RoutingAppCoverageUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    source_file_checksum: typing.Optional[str] = pydantic.Field(
        alias="sourceFileChecksum", default=None
    )
    uploaded: typing.Optional[bool] = pydantic.Field(alias="uploaded", default=None)


class RoutingAppCoverageCreateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    file_name: typing_extensions.Required[str]
    file_size: typing_extensions.Required[int]


class _SerializerRoutingAppCoverageCreateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for RoutingAppCoverageCreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    file_name: str = pydantic.Field(alias="fileName")
    file_size: int = pydantic.Field(alias="fileSize")


class RoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersionData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["appStoreVersions"]]


class _SerializerRoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersionData(
    pydantic.BaseModel
):
    """
    Serializer for RoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersionData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = pydantic.Field(alias="type")


class RoutingAppCoverageUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        RoutingAppCoverageUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["routingAppCoverages"]]


class _SerializerRoutingAppCoverageUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for RoutingAppCoverageUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerRoutingAppCoverageUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["routingAppCoverages"] = pydantic.Field(
        alias="type"
    )


class RoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersion(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        RoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersionData
    ]


class _SerializerRoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersion(
    pydantic.BaseModel
):
    """
    Serializer for RoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersion handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerRoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersionData = pydantic.Field(
        alias="data"
    )


class RoutingAppCoverageUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[RoutingAppCoverageUpdateRequestData]


class _SerializerRoutingAppCoverageUpdateRequest(pydantic.BaseModel):
    """
    Serializer for RoutingAppCoverageUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerRoutingAppCoverageUpdateRequestData = pydantic.Field(alias="data")


class RoutingAppCoverageCreateRequestDataRelationships(typing_extensions.TypedDict):
    """
    No description specified
    """

    app_store_version: typing_extensions.Required[
        RoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersion
    ]


class _SerializerRoutingAppCoverageCreateRequestDataRelationships(pydantic.BaseModel):
    """
    Serializer for RoutingAppCoverageCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_store_version: _SerializerRoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersion = pydantic.Field(
        alias="appStoreVersion"
    )


class RoutingAppCoverageCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        RoutingAppCoverageCreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        RoutingAppCoverageCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[typing_extensions.Literal["routingAppCoverages"]]


class _SerializerRoutingAppCoverageCreateRequestData(pydantic.BaseModel):
    """
    Serializer for RoutingAppCoverageCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerRoutingAppCoverageCreateRequestDataAttributes = (
        pydantic.Field(alias="attributes")
    )
    relationships: _SerializerRoutingAppCoverageCreateRequestDataRelationships = (
        pydantic.Field(alias="relationships")
    )
    type: typing_extensions.Literal["routingAppCoverages"] = pydantic.Field(
        alias="type"
    )


class RoutingAppCoverageCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[RoutingAppCoverageCreateRequestData]


class _SerializerRoutingAppCoverageCreateRequest(pydantic.BaseModel):
    """
    Serializer for RoutingAppCoverageCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerRoutingAppCoverageCreateRequestData = pydantic.Field(alias="data")
