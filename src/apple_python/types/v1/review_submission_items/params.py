"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class ReviewSubmissionItemUpdateRequestDataAttributes(typing_extensions.TypedDict):
    """
    No description specified
    """

    removed: typing_extensions.NotRequired[bool]
    resolved: typing_extensions.NotRequired[bool]


class _SerializerReviewSubmissionItemUpdateRequestDataAttributes(pydantic.BaseModel):
    """
    Serializer for ReviewSubmissionItemUpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    removed: typing.Optional[bool] = pydantic.Field(alias="removed", default=None)
    resolved: typing.Optional[bool] = pydantic.Field(alias="resolved", default=None)


class ReviewSubmissionItemCreateRequestDataRelationshipsAppCustomProductPageVersionData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appCustomProductPageVersions"]
    ]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppCustomProductPageVersionData(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsAppCustomProductPageVersionData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appCustomProductPageVersions"] = pydantic.Field(
        alias="type"
    )


class ReviewSubmissionItemCreateRequestDataRelationshipsAppEventData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["appEvents"]]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppEventData(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsAppEventData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appEvents"] = pydantic.Field(alias="type")


class ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["appStoreVersions"]]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionData(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersions"] = pydantic.Field(alias="type")


class ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperiments"]
    ]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentData(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = pydantic.Field(
        alias="type"
    )


class ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentV2Data(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperiments"]
    ]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentV2Data(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentV2Data handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = pydantic.Field(
        alias="type"
    )


class ReviewSubmissionItemCreateRequestDataRelationshipsReviewSubmissionData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["reviewSubmissions"]]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsReviewSubmissionData(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsReviewSubmissionData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["reviewSubmissions"] = pydantic.Field(alias="type")


class ReviewSubmissionItemUpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        ReviewSubmissionItemUpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["reviewSubmissionItems"]]


class _SerializerReviewSubmissionItemUpdateRequestData(pydantic.BaseModel):
    """
    Serializer for ReviewSubmissionItemUpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerReviewSubmissionItemUpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["reviewSubmissionItems"] = pydantic.Field(
        alias="type"
    )


class ReviewSubmissionItemCreateRequestDataRelationshipsAppCustomProductPageVersion(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        ReviewSubmissionItemCreateRequestDataRelationshipsAppCustomProductPageVersionData
    ]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppCustomProductPageVersion(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsAppCustomProductPageVersion handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppCustomProductPageVersionData
    ] = pydantic.Field(alias="data", default=None)


class ReviewSubmissionItemCreateRequestDataRelationshipsAppEvent(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        ReviewSubmissionItemCreateRequestDataRelationshipsAppEventData
    ]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppEvent(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsAppEvent handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppEventData
    ] = pydantic.Field(alias="data", default=None)


class ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersion(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionData
    ]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersion(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersion handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionData
    ] = pydantic.Field(alias="data", default=None)


class ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperiment(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentData
    ]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperiment(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperiment handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentData
    ] = pydantic.Field(alias="data", default=None)


class ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentV2(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.NotRequired[
        ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentV2Data
    ]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentV2(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentV2 handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.Optional[
        _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentV2Data
    ] = pydantic.Field(alias="data", default=None)


class ReviewSubmissionItemCreateRequestDataRelationshipsReviewSubmission(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        ReviewSubmissionItemCreateRequestDataRelationshipsReviewSubmissionData
    ]


class _SerializerReviewSubmissionItemCreateRequestDataRelationshipsReviewSubmission(
    pydantic.BaseModel
):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationshipsReviewSubmission handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerReviewSubmissionItemCreateRequestDataRelationshipsReviewSubmissionData = pydantic.Field(
        alias="data"
    )


class ReviewSubmissionItemUpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[ReviewSubmissionItemUpdateRequestData]


class _SerializerReviewSubmissionItemUpdateRequest(pydantic.BaseModel):
    """
    Serializer for ReviewSubmissionItemUpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerReviewSubmissionItemUpdateRequestData = pydantic.Field(
        alias="data"
    )


class ReviewSubmissionItemCreateRequestDataRelationships(typing_extensions.TypedDict):
    """
    No description specified
    """

    app_custom_product_page_version: typing_extensions.NotRequired[
        ReviewSubmissionItemCreateRequestDataRelationshipsAppCustomProductPageVersion
    ]
    app_event: typing_extensions.NotRequired[
        ReviewSubmissionItemCreateRequestDataRelationshipsAppEvent
    ]
    app_store_version: typing_extensions.NotRequired[
        ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersion
    ]
    app_store_version_experiment: typing_extensions.NotRequired[
        ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperiment
    ]
    app_store_version_experiment_v2: typing_extensions.NotRequired[
        ReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentV2
    ]
    review_submission: typing_extensions.Required[
        ReviewSubmissionItemCreateRequestDataRelationshipsReviewSubmission
    ]


class _SerializerReviewSubmissionItemCreateRequestDataRelationships(pydantic.BaseModel):
    """
    Serializer for ReviewSubmissionItemCreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app_custom_product_page_version: typing.Optional[
        _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppCustomProductPageVersion
    ] = pydantic.Field(alias="appCustomProductPageVersion", default=None)
    app_event: typing.Optional[
        _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppEvent
    ] = pydantic.Field(alias="appEvent", default=None)
    app_store_version: typing.Optional[
        _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersion
    ] = pydantic.Field(alias="appStoreVersion", default=None)
    app_store_version_experiment: typing.Optional[
        _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperiment
    ] = pydantic.Field(alias="appStoreVersionExperiment", default=None)
    app_store_version_experiment_v2: typing.Optional[
        _SerializerReviewSubmissionItemCreateRequestDataRelationshipsAppStoreVersionExperimentV2
    ] = pydantic.Field(alias="appStoreVersionExperimentV2", default=None)
    review_submission: _SerializerReviewSubmissionItemCreateRequestDataRelationshipsReviewSubmission = pydantic.Field(
        alias="reviewSubmission"
    )


class ReviewSubmissionItemCreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    relationships: typing_extensions.Required[
        ReviewSubmissionItemCreateRequestDataRelationships
    ]
    type: typing_extensions.Required[typing_extensions.Literal["reviewSubmissionItems"]]


class _SerializerReviewSubmissionItemCreateRequestData(pydantic.BaseModel):
    """
    Serializer for ReviewSubmissionItemCreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    relationships: _SerializerReviewSubmissionItemCreateRequestDataRelationships = (
        pydantic.Field(alias="relationships")
    )
    type: typing_extensions.Literal["reviewSubmissionItems"] = pydantic.Field(
        alias="type"
    )


class ReviewSubmissionItemCreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[ReviewSubmissionItemCreateRequestData]


class _SerializerReviewSubmissionItemCreateRequest(pydantic.BaseModel):
    """
    Serializer for ReviewSubmissionItemCreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerReviewSubmissionItemCreateRequestData = pydantic.Field(
        alias="data"
    )
