"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class AppStoreVersionExperimentV2UpdateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    name: typing_extensions.NotRequired[str]
    started: typing_extensions.NotRequired[bool]
    traffic_proportion: typing_extensions.NotRequired[int]


class _SerializerAppStoreVersionExperimentV2UpdateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentV2UpdateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    name: typing.Optional[str] = pydantic.Field(alias="name", default=None)
    started: typing.Optional[bool] = pydantic.Field(alias="started", default=None)
    traffic_proportion: typing.Optional[int] = pydantic.Field(
        alias="trafficProportion", default=None
    )


class AppStoreVersionExperimentV2CreateRequestDataAttributes(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    name: typing_extensions.Required[str]
    platform_field: typing_extensions.Required[
        typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"]
    ]
    traffic_proportion: typing_extensions.Required[int]


class _SerializerAppStoreVersionExperimentV2CreateRequestDataAttributes(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentV2CreateRequestDataAttributes handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    name: str = pydantic.Field(alias="name")
    platform_field: typing_extensions.Literal["IOS", "MAC_OS", "TV_OS", "VISION_OS"] = (
        pydantic.Field(alias="platform")
    )
    traffic_proportion: int = pydantic.Field(alias="trafficProportion")


class AppStoreVersionExperimentV2CreateRequestDataRelationshipsAppData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["apps"]]


class _SerializerAppStoreVersionExperimentV2CreateRequestDataRelationshipsAppData(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentV2CreateRequestDataRelationshipsAppData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["apps"] = pydantic.Field(alias="type")


class AppStoreVersionExperimentV2UpdateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.NotRequired[
        AppStoreVersionExperimentV2UpdateRequestDataAttributes
    ]
    id: typing_extensions.Required[str]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperiments"]
    ]


class _SerializerAppStoreVersionExperimentV2UpdateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionExperimentV2UpdateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: typing.Optional[
        _SerializerAppStoreVersionExperimentV2UpdateRequestDataAttributes
    ] = pydantic.Field(alias="attributes", default=None)
    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["appStoreVersionExperiments"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionExperimentV2CreateRequestDataRelationshipsApp(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        AppStoreVersionExperimentV2CreateRequestDataRelationshipsAppData
    ]


class _SerializerAppStoreVersionExperimentV2CreateRequestDataRelationshipsApp(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentV2CreateRequestDataRelationshipsApp handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionExperimentV2CreateRequestDataRelationshipsAppData = pydantic.Field(
        alias="data"
    )


class AppStoreVersionExperimentV2UpdateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreVersionExperimentV2UpdateRequestData]


class _SerializerAppStoreVersionExperimentV2UpdateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionExperimentV2UpdateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionExperimentV2UpdateRequestData = pydantic.Field(
        alias="data"
    )


class AppStoreVersionExperimentV2CreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    app: typing_extensions.Required[
        AppStoreVersionExperimentV2CreateRequestDataRelationshipsApp
    ]


class _SerializerAppStoreVersionExperimentV2CreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for AppStoreVersionExperimentV2CreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    app: _SerializerAppStoreVersionExperimentV2CreateRequestDataRelationshipsApp = (
        pydantic.Field(alias="app")
    )


class AppStoreVersionExperimentV2CreateRequestData(typing_extensions.TypedDict):
    """
    No description specified
    """

    attributes: typing_extensions.Required[
        AppStoreVersionExperimentV2CreateRequestDataAttributes
    ]
    relationships: typing_extensions.Required[
        AppStoreVersionExperimentV2CreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["appStoreVersionExperiments"]
    ]


class _SerializerAppStoreVersionExperimentV2CreateRequestData(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionExperimentV2CreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    attributes: _SerializerAppStoreVersionExperimentV2CreateRequestDataAttributes = (
        pydantic.Field(alias="attributes")
    )
    relationships: _SerializerAppStoreVersionExperimentV2CreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["appStoreVersionExperiments"] = pydantic.Field(
        alias="type"
    )


class AppStoreVersionExperimentV2CreateRequest(typing_extensions.TypedDict):
    """
    No description specified
    """

    data: typing_extensions.Required[AppStoreVersionExperimentV2CreateRequestData]


class _SerializerAppStoreVersionExperimentV2CreateRequest(pydantic.BaseModel):
    """
    Serializer for AppStoreVersionExperimentV2CreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerAppStoreVersionExperimentV2CreateRequestData = pydantic.Field(
        alias="data"
    )
