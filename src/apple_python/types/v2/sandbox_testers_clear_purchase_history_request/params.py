"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class SandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationshipsSandboxTestersDataItem(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    id: typing_extensions.Required[str]
    type: typing_extensions.Required[typing_extensions.Literal["sandboxTesters"]]


class _SerializerSandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationshipsSandboxTestersDataItem(
    pydantic.BaseModel
):
    """
    Serializer for SandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationshipsSandboxTestersDataItem handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    id: str = pydantic.Field(alias="id")
    type: typing_extensions.Literal["sandboxTesters"] = pydantic.Field(alias="type")


class SandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationshipsSandboxTesters(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        typing.List[
            SandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationshipsSandboxTestersDataItem
        ]
    ]


class _SerializerSandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationshipsSandboxTesters(
    pydantic.BaseModel
):
    """
    Serializer for SandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationshipsSandboxTesters handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: typing.List[
        _SerializerSandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationshipsSandboxTestersDataItem
    ] = pydantic.Field(alias="data")


class SandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationships(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    sandbox_testers: typing_extensions.Required[
        SandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationshipsSandboxTesters
    ]


class _SerializerSandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationships(
    pydantic.BaseModel
):
    """
    Serializer for SandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationships handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    sandbox_testers: _SerializerSandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationshipsSandboxTesters = pydantic.Field(
        alias="sandboxTesters"
    )


class SandboxTestersClearPurchaseHistoryRequestV2CreateRequestData(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    relationships: typing_extensions.Required[
        SandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationships
    ]
    type: typing_extensions.Required[
        typing_extensions.Literal["sandboxTestersClearPurchaseHistoryRequest"]
    ]


class _SerializerSandboxTestersClearPurchaseHistoryRequestV2CreateRequestData(
    pydantic.BaseModel
):
    """
    Serializer for SandboxTestersClearPurchaseHistoryRequestV2CreateRequestData handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    relationships: _SerializerSandboxTestersClearPurchaseHistoryRequestV2CreateRequestDataRelationships = pydantic.Field(
        alias="relationships"
    )
    type: typing_extensions.Literal["sandboxTestersClearPurchaseHistoryRequest"] = (
        pydantic.Field(alias="type")
    )


class SandboxTestersClearPurchaseHistoryRequestV2CreateRequest(
    typing_extensions.TypedDict
):
    """
    No description specified
    """

    data: typing_extensions.Required[
        SandboxTestersClearPurchaseHistoryRequestV2CreateRequestData
    ]


class _SerializerSandboxTestersClearPurchaseHistoryRequestV2CreateRequest(
    pydantic.BaseModel
):
    """
    Serializer for SandboxTestersClearPurchaseHistoryRequestV2CreateRequest handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    data: _SerializerSandboxTestersClearPurchaseHistoryRequestV2CreateRequestData = (
        pydantic.Field(alias="data")
    )
